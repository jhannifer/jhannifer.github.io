{"version":3,"sources":["webpack:///component---src-layouts-index-js-1cc64f5e94488355ec1d.js","webpack:///./.cache/json/layout-index.json?2af0","webpack:///./.cache/layouts/index.js","webpack:///./gatsby-config.js","webpack:///./~/jquery/dist/jquery.js","webpack:///./~/mixitup/dist/mixitup.js","webpack:///./src/layouts/index.js"],"names":["webpackJsonp","104","module","exports","layoutContext","251","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_react","_react2","_index","_index2","_layoutIndex","_layoutIndex2","props","createElement","254","__dirname","siteMetadata","title","description","url","author","pathPrefix","plugins","resolve","options","path","name","maxWidth","linkImagesToOriginal","wrapperStyle","337","338","339","379","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","global","factory","document","w","Error","window","this","noGlobal","DOMEval","code","doc","node","script","text","preservedScriptAttributes","head","appendChild","parentNode","removeChild","toType","class2type","toString","isArrayLike","type","isFunction","isWindow","nodeName","elem","toLowerCase","winnow","elements","qualifier","not","jQuery","grep","nodeType","indexOf","filter","sibling","cur","dir","createOptions","object","each","match","rnothtmlwhite","_","flag","Identity","v","Thrower","ex","adoptValue","value","reject","noValue","method","promise","done","fail","then","apply","undefined","slice","completed","removeEventListener","ready","fcamelCase","all","letter","toUpperCase","camelCase","string","replace","rmsPrefix","rdashAlpha","Data","expando","uid","getData","data","rbrace","test","JSON","parse","dataAttr","rmultiDash","getAttribute","e","dataUser","set","adjustCSS","prop","valueParts","tween","adjusted","scale","maxIterations","currentValue","css","initial","unit","cssNumber","initialInUnit","rcssNum","exec","style","start","end","getDefaultDisplay","temp","ownerDocument","display","defaultDisplayMap","body","showHide","show","values","index","dataPriv","get","isHiddenWithinTree","getAll","context","tag","ret","getElementsByTagName","querySelectorAll","merge","setGlobalEval","elems","refElements","l","buildFragment","scripts","selection","ignored","tmp","wrap","contains","j","fragment","createDocumentFragment","nodes","rhtml","rtagName","wrapMap","_default","innerHTML","htmlPrefilter","lastChild","childNodes","firstChild","textContent","push","createTextNode","inArray","rscriptType","returnTrue","returnFalse","safeActiveElement","activeElement","err","on","types","selector","fn","one","origFn","event","off","guid","add","manipulationTarget","content","children","disableScript","restoreScript","removeAttribute","cloneCopyEvent","src","dest","pdataOld","pdataCur","udataOld","udataCur","events","hasData","access","handle","extend","fixInput","rcheckableType","checked","defaultValue","domManip","collection","args","callback","concat","first","hasScripts","iNoClone","valueIsFunction","support","checkClone","rchecked","self","eq","html","map","clone","_evalUrl","rcleanScript","remove","keepData","cleanData","curCSS","computed","width","minWidth","getStyles","getPropertyValue","pixelBoxStyles","rnumnonpx","rboxStyle","addGetHookIf","conditionFn","hookFn","vendorPropName","emptyStyle","capName","cssPrefixes","finalPropName","cssProps","setPositiveNumber","subtract","matches","Math","max","boxModelAdjustment","dimension","box","isBorderBox","styles","computedVal","extra","delta","cssExpand","ceil","getWidthOrHeight","val","valueIsBorderBox","boxSizingReliable","parseFloat","Tween","easing","init","schedule","inProgress","hidden","requestAnimationFrame","setTimeout","fx","interval","tick","createFxNow","fxNow","Date","now","genFx","includeWidth","which","attrs","height","opacity","createTween","animation","Animation","tweeners","defaultPrefilter","opts","toggle","hooks","oldfire","propTween","restoreDisplay","isBox","anim","orig","dataShow","queue","_queueHooks","unqueued","empty","fire","always","rfxtypes","isEmptyObject","overflow","overflowX","overflowY","propFilter","specialEasing","Array","isArray","cssHooks","expand","properties","result","stopped","prefilters","deferred","Deferred","currentTime","remaining","startTime","duration","percent","tweens","run","notifyWith","resolveWith","originalProperties","originalOptions","stop","gotoEnd","rejectWith","bind","progress","complete","timer","stripAndCollapse","tokens","join","getClass","classesToArray","buildParams","prefix","traditional","rbracket","addToPrefiltersOrTransports","structure","dataTypeExpression","func","dataType","dataTypes","unshift","inspectPrefiltersOrTransports","jqXHR","inspect","selected","inspected","prefilterOrFactory","dataTypeOrTransport","seekingTransport","transports","ajaxExtend","deep","flatOptions","ajaxSettings","ajaxHandleResponses","s","responses","ct","finalDataType","firstDataType","contents","shift","mimeType","getResponseHeader","converters","ajaxConvert","response","isSuccess","conv2","current","conv","prev","responseFields","dataFilter","split","throws","state","error","arr","getProto","getPrototypeOf","hasOwn","fnToString","ObjectFunctionString","noModule","version","rtrim","jquery","constructor","toArray","num","pushStack","prevObject","last","len","sort","splice","copy","copyIsArray","isPlainObject","random","isReady","msg","noop","proto","Ctor","globalEval","trim","makeArray","results","second","invert","callbackInverse","callbackExpect","arg","Symbol","iterator","Sizzle","seed","m","nid","groups","newSelector","newContext","preferredDoc","setDocument","documentIsHTML","rquickExpr","getElementById","id","getElementsByClassName","qsa","compilerCache","rbuggyQSA","rcssescape","fcssescape","setAttribute","tokenize","toSelector","rsibling","testContext","qsaError","select","createCache","cache","keys","Expr","cacheLength","markFunction","assert","el","addHandle","handler","attrHandle","siblingCheck","a","b","diff","sourceIndex","nextSibling","createInputPseudo","createButtonPseudo","createDisabledPseudo","disabled","isDisabled","disabledAncestor","createPositionalPseudo","argument","matchIndexes","setFilters","addCombinator","matcher","combinator","base","skip","next","checkNonElements","doneName","xml","oldCache","uniqueCache","outerCache","newCache","dirruns","uniqueID","elementMatcher","matchers","multipleContexts","contexts","condense","unmatched","newUnmatched","mapped","setMatcher","preFilter","postFilter","postFinder","postSelector","preMap","postMap","preexisting","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","relative","implicitRelative","matchContext","matchAnyContext","outermostContext","matcherFromGroupMatchers","elementMatchers","setMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","find","dirrunsUnique","pop","uniqueSort","getText","isXML","compile","sortInput","hasDuplicate","docElem","rbuggyMatches","classCache","tokenCache","sortOrder","push_native","list","booleans","whitespace","identifier","attributes","pseudos","rwhitespace","RegExp","rcomma","rcombinators","rattributeQuotes","rpseudo","ridentifier","matchExpr","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","rinputs","rheader","rnative","runescape","funescape","escaped","escapedWhitespace","high","String","fromCharCode","ch","asCodePoint","charCodeAt","unloadHandler","els","documentElement","hasCompare","subWindow","defaultView","top","addEventListener","attachEvent","className","createComment","getById","getElementsByName","attrId","getAttributeNode","input","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","compare","sortDetached","aup","ap","bp","expr","attr","specified","escape","sel","duplicates","detectDuplicates","sortStable","nodeValue","selectors","createPseudo",">"," ","+","~","excess","unquoted","nodeNameSelector","pattern","operator","check","what","simple","forward","ofType","nodeIndex","parent","useCache","pseudo","idx","matched","has","innerText","lang","elemLang","hash","location","root","focus","hasFocus","href","tabIndex","enabled","selectedIndex","header","button","even","odd","lt","gt","radio","checkbox","file","password","image","submit","reset","filters","parseOnly","soFar","preFilters","cached","token","compiled","unique","isXMLDoc","escapeSelector","until","truncate","is","siblings","n","rneedsContext","rsingleTag","rootjQuery","parseHTML","rparentsprev","guaranteedUnique","targets","closest","prevAll","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","contentDocument","reverse","Callbacks","firing","memory","fired","locked","firingIndex","once","stopOnFalse","disable","lock","fireWith","tuples","catch","pipe","fns","newDefer","tuple","returned","notify","onFulfilled","onRejected","onProgress","depth","special","that","mightThrow","maxDepth","TypeError","process","exceptionHook","stackTrace","getStackHook","stateString","when","singleValue","resolveContexts","resolveValues","master","updateFunc","rerrorNames","stack","console","warn","message","readyException","readyList","readyWait","wait","readyState","doScroll","chainable","emptyGet","raw","bulk","acceptData","owner","defineProperty","configurable","removeData","_data","_removeData","dequeue","startLength","setter","clearQueue","count","defer","pnum","swap","old","hide","option","thead","col","tr","td","optgroup","tbody","tfoot","colgroup","caption","th","div","cloneNode","noCloneChecked","rkeyEvent","rmouseEvent","rtypenamespace","handleObjIn","eventHandle","t","handleObj","handlers","namespaces","origType","elemData","triggered","dispatch","delegateType","bindType","namespace","delegateCount","setup","mappedTypes","origCount","teardown","removeEvent","nativeEvent","handlerQueue","fix","delegateTarget","preDispatch","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","preventDefault","stopPropagation","postDispatch","matchedHandlers","matchedSelectors","addProp","hook","Event","enumerable","originalEvent","writable","load","noBubble","trigger","blur","click","beforeunload","returnValue","isDefaultPrevented","defaultPrevented","relatedTarget","timeStamp","isSimulated","stopImmediatePropagation","altKey","bubbles","cancelable","changedTouches","ctrlKey","detail","eventPhase","metaKey","pageX","pageY","shiftKey","view","char","charCode","keyCode","buttons","clientX","clientY","offsetX","offsetY","pointerId","pointerType","screenX","screenY","targetTouches","toElement","touches","mouseenter","mouseleave","pointerenter","pointerleave","related","rxhtmlTag","rnoInnerhtml","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","detach","append","prepend","insertBefore","before","after","replaceWith","replaceChild","appendTo","prependTo","insertAfter","replaceAll","original","insert","opener","getComputedStyle","computeStyleTests","container","cssText","divStyle","pixelPositionVal","reliableMarginLeftVal","roundPixelMeasures","marginLeft","right","pixelBoxStylesVal","boxSizingReliableVal","position","scrollboxSizeVal","offsetWidth","measure","round","backgroundClip","clearCloneStyle","pixelPosition","reliableMarginLeft","scrollboxSize","rdisplayswap","rcustomProp","cssShow","visibility","cssNormalTransform","letterSpacing","fontWeight","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","lineHeight","order","orphans","widows","zIndex","zoom","origName","isCustomProp","setProperty","isFinite","getClientRects","getBoundingClientRect","left","margin","padding","border","suffix","expanded","parts","propHooks","eased","pos","step","scrollTop","scrollLeft","linear","p","swing","cos","PI","rrun","*","tweener","prefilter","speed","opt","speeds","fadeTo","to","animate","optall","doAnimation","finish","stopQueue","timers","cssFn","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","slow","fast","delay","time","timeout","clearTimeout","checkOn","optSelected","radioValue","boolHook","removeAttr","nType","attrHooks","attrNames","getter","lowercaseName","rfocusable","rclickable","removeProp","propFix","tabindex","parseInt","for","class","addClass","classes","curValue","clazz","finalValue","removeClass","toggleClass","stateVal","isValidValue","classNames","hasClass","rreturn","valHooks","optionSet","focusin","rfocusMorph","stopPropagationCallback","onlyHandlers","bubbleType","ontype","lastElement","eventPath","isTrigger","parentWindow","simulate","triggerHandler","attaches","nonce","rquery","parseXML","DOMParser","parseFromString","rCRLF","rsubmitterTypes","rsubmittable","param","valueOrFunction","encodeURIComponent","serialize","serializeArray","r20","rhash","rantiCache","rheaders","rlocalProtocol","rnoContent","rprotocol","allTypes","originAnchor","active","lastModified","etag","isLocal","protocol","processData","async","contentType","accepts","json","* text","text html","text json","text xml","ajaxSetup","settings","ajaxPrefilter","ajaxTransport","ajax","status","nativeStatusText","headers","success","modified","statusText","timeoutTimer","transport","responseHeadersString","ifModified","cacheURL","callbackContext","statusCode","fireGlobals","globalEventContext","completeDeferred","responseHeaders","urlAnchor","uncached","requestHeaders","requestHeadersNames","strAbort","getAllResponseHeaders","setRequestHeader","overrideMimeType","abort","finalText","crossDomain","host","hasContent","beforeSend","send","getJSON","getScript","wrapAll","firstElementChild","wrapInner","htmlIsFunction","unwrap","visible","offsetHeight","xhr","XMLHttpRequest","xhrSuccessStatus","0","1223","xhrSupported","cors","errorCallback","open","username","xhrFields","onload","onerror","onabort","ontimeout","onreadystatechange","responseType","responseText","binary","text script","charset","scriptCharset","evt","oldCallbacks","rjsonp","jsonp","jsonpCallback","originalSettings","callbackName","overwritten","responseContainer","jsonProp","createHTMLDocument","implementation","keepScripts","parsed","params","animated","offset","setOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","calculatePosition","curElem","using","rect","win","pageYOffset","pageXOffset","offsetParent","parentOffset","scrollTo","Height","Width","","defaultExtra","funcName","hover","fnOver","fnOut","unbind","delegate","undelegate","proxy","holdReady","hold","parseJSON","isNumeric","isNaN","_jQuery","_$","$","noConflict","392","mixitup","h","VENDORS","canary","nextElementSibling","Element","ElementPrototype","machesSelector","parentElement","hasDontEnumBug","dontEnums","dontEnumsLength","propertyIsEnumerable","create","Temp","propertiesObject","defineProperties","__proto__","searchElement","k","Number","Infinity","floor","abs","Function","oThis","aArgs","FNOP","fBound","dispatchEvent","fireEvent","config","foreignDoc","returnCollection","instance","facade","output","instances","isElement","messages","errorFactoryInvalidContainer","errorFactoryContainerNotFound","randomHex","Mixer","debug","showWarnings","warningFactoryPreexistingInstance","attach","Facade","enable","Collection","use","extension","Base","callActions","TYPE","extensions","NAME","libraries","cls","reg","destination","handleErrors","sourceKeys","handleExtendError","re","erroneous","suggestion","probableMatch","mostMatchingChars","charAt","errorConfigInvalidPropertySuggestion","errorConfigInvalidProperty","template","str","dynamics","useCapture","detachEvent","getCustomEvent","eventType","CustomEvent","createEvent","initCustomEvent","createEventObject","cancelBubble","getOriginalEvent","previousElementSibling","$1","pascalCase","dashCase","HTMLElement","htmlString","frag","removeWhitespace","deleting","previousSibling","isEqualArray","deepEquals","arrayShuffle","oldArray","newArray","arrayFromList","debounce","immediate","callNow","later","element","xPosition","yPosition","offsetLeft","offsetTop","x","y","getHypotenuse","node1","node2","distanceX","distanceY","sqrt","pow","getIntersectionRatio","box1","box2","controlArea","intersectionX","intersectionY","intersectionArea","ratio","min","closestParent","includeSelf","tempId","randomHexKey","clean","originalArray","cleanArray","promiseWrapper","features","promises","Promise","warningNoPromiseImplementation","tasks","getPrefix","property","vendors","substr","getDocumentState","docHeight","scrollHeight","docWidth","scrollWidth","viewportHeight","clientHeight","viewportWidth","clientWidth","isVisible","seal","freeze","compareVersions","control","specimen","controlParts","specimenParts","controlPart","specimenPart","getClassname","elementName","modifier","classname","block","delineatorElement","delineatorModifier","getProperty","stringKey","returnCurrent","actionName","actions","extensionName","callFilters","filterName","BaseStatic","registerAction","hookName","registerFilter","Features","boxSizingPrefix","transformPrefix","transitionPrefix","transformProp","transformRule","transitionProp","perspectiveProp","perspectiveOriginProp","Has","BOX_SIZING_PROP","TRANSITION_PROP","TRANSFORM_PROP","PERSPECTIVE_PROP","PERSPECTIVE_ORIGIN_PROP","TWEENABLE","setPrefixes","runTests","transitions","boxSizingProp","ConfigAnimation","effects","effectsIn","effectsOut","applyPerspective","perspectiveDistance","perspectiveOrigin","queueLimit","animateResizeContainer","animateResizeTargets","staggerSequence","reverseOut","nudge","clampHeight","clampWidth","ConfigBehavior","liveSort","ConfigCallbacks","onMixStart","onMixBusy","onMixEnd","onMixFail","onMixClick","ConfigControls","live","scope","toggleLogic","toggleDefault","ConfigClassNames","elementContainer","elementFilter","elementSort","elementMultimix","elementToggle","modifierActive","modifierDisabled","modifierFailed","ConfigData","uidKey","dirtyCheck","ConfigDebug","fauxAsync","ConfigLayout","allowNestedTargets","containerClassName","siblingBefore","siblingAfter","ConfigLoad","dataset","ConfigSelectors","ConfigRender","ConfigTemplates","Config","behavior","callbacks","controls","layout","render","templates","MixerDom","UiClassNames","CommandDataset","CommandMultimix","changeLayout","CommandFilter","action","CommandSort","sortString","attribute","CommandInsert","CommandRemove","CommandChangeLayout","ControlDefinition","controlDefinitions","Control","bound","pending","canDisable","bindClick","isBound","mixer","addBinding","removeBinding","removeIndex","unbindClick","renderStatus","handleClick","isActive","command","commands","dom","lastClicked","toggleOff","toggleOn","multimix","update","toggleArray","updateLive","parseStatusChange","controlButtons","alias","StyleData","bottom","marginRight","marginBottom","TransformData","translateX","translateY","translateZ","rotateX","rotateY","rotateZ","TransformDefaults","transformDefaults","EventDetail","futureState","Events","mixStart","mixBusy","mixEnd","mixFail","mixClick","eventDetail","State","QueueItem","instruction","triggerElement","isToggling","isBusy","incPadding","origOrder","targetsMoved","targetsImmovable","targetsBound","targetsDone","staggerDuration","transformIn","transformOut","lastOperation","userCallback","userDeferred","sanitizeConfig","cacheDom","indexTargets","getInitialState","toHide","initControls","buildToggleArray","updateControls","activeFilter","activeSort","parseEffects","operation","Operation","activeContainerClassName","errorConfigDataUidKeyNotSet","startDataset","newDataset","activeDataset","startContainerClassName","newContainerClassName","parseFilterArgs","parseSortArgs","totalTargets","newSort","sortOperation","printSort","newOrder","startOrder","startFilter","newFilter","startSort","filterOperation","buildState","querySelector","errorDatasetPrerenderedMismatch","Target","isInDom","definition","controlElements","delagators","errorConfigInvalidControlsScope","getControl","getToggleSelector","delineator","toggleSelector","activeFilterSelector","splitCompoundSelector","compoundSelector","partials","buildSortString","insertTargets","insertionIndex","getNextSibling","errorInsertPreexistingElement","testResult","evaluateHideShow","toRemove","toShow","matching","hasFailed","isShown","willSort","attrA","getAttributeValue","attrB","warningInconsistentSortingAttributes","isResetting","parseSortString","rules","rule","transformName","parseEffect","effectName","effectString","transform","isOut","propIndex","units","errorConfigInvalidAnimationEffects","substring","totalShow","totalHide","totalMatching","goMix","shouldAnimate","willChangeLayout","startState","newState","docState","startHeight","newHeight","viewportDeltaY","startWidth","newWidth","viewportDeltaX","moveTargets","cleanUp","getStartMixData","parentStyle","parentRect","boxSizing","getPosData","showPosData","startPosData","toHidePosData","startX","startY","paddingTop","paddingBottom","borderTop","borderBottom","paddingLeft","paddingRight","borderLeft","borderRight","setInter","getInterMixData","interPosData","setFinal","getFinalMixData","finalPosData","newX","newY","getTweenData","posData","effectNames","getOwnPropertyNames","effect","widthChange","heightChange","posIn","posOut","tweenData","moveData","statusChange","willTransition","staggerIndex","checkProgress","IMoveData","hasEffect","move","ContainerClassName","EFFECTABLES","marginTop","whitespaceBefore","whitespaceAfter","nextInQueue","parseMultimixArgs","UserInstruction","parseInsertArgs","parseRemoveArgs","parseChangeLayoutArgs","errorFilterInvalidArguments","errorInsertInvalidArguments","warningInsertNoElements","warningRemoveNoElements","parseDatasetArgs","queueMix","queueItem","warningMultimixInstanceQueueFull","getDataOperation","errorDatasetNotSet","diffDatasets","persistantStartIds","persistantNewIds","insertedTargets","nextEl","uids","errorDatasetInvalidUidKey","errorDatasetDuplicateUid","unbindEvents","bindEvents","lastElementChild","insertDatasetFrag","insertAt","from","sortCommandA","sortCommandB","isMixing","selectorIndex","getOperation","multimixCommand","sortCommand","filterCommand","changeLayoutCommand","removeCommand","insertCommand","warningGetOperationInstanceBusy","multiplier","toHideIndex","applyTween","getConfig","configure","getState","forceRefresh","forceRender","destroy","TargetDom","isExcluded","errorDatasetRendererNotSet","getSortString","attributeName","applyStylesIn","applyStylesOut","propertyName","currentTransformValues","currentValues","isFading","transformValues","transitionRules","isResizing","writeTransitionRule","applyTransition","getDelay","transitionString","handleTransitionEnd","propName","canResize","eventBus","transitionEndEvent","getBox","methodName","toMove","startDisplay","newDisplay","Messages","ERROR_FACTORY_INVALID_CONTAINER","ERROR_FACTORY_CONTAINER_NOT_FOUND","ERROR_CONFIG_INVALID_ANIMATION_EFFECTS","ERROR_CONFIG_INVALID_CONTROLS_SCOPE","ERROR_CONFIG_INVALID_PROPERTY","ERROR_CONFIG_INVALID_PROPERTY_SUGGESTION","ERROR_CONFIG_DATA_UID_KEY_NOT_SET","ERROR_DATASET_INVALID_UID_KEY","ERROR_DATASET_DUPLICATE_UID","ERROR_INSERT_INVALID_ARGUMENTS","ERROR_INSERT_PREEXISTING_ELEMENT","ERROR_FILTER_INVALID_ARGUMENTS","ERROR_DATASET_NOT_SET","ERROR_DATASET_PRERENDERED_MISMATCH","ERROR_DATASET_RENDERER_NOT_SET","WARNING_FACTORY_PREEXISTING_INSTANCE","WARNING_INSERT_NO_ELEMENTS","WARNING_REMOVE_NO_ELEMENTS","WARNING_MULTIMIX_INSTANCE_QUEUE_FULL","WARNING_GET_OPERATION_INSTANCE_BUSY","WARNING_NO_PROMISE_IMPLEMENTATION","WARNING_INCONSISTENT_SORTING_ATTRIBUTES","compileTemplates","errorKey","errorMessage","CORE_VERSION","340","396","260","_classCallCheck","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","_gatsbyLink","_jquery","_jquery2","_mixitup","_mixitup2","Template","_React$Component","componentDidMount","porfolio","scroll","componentDidUpdate","_props","Component","397"],"mappings":"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","file":"component---src-layouts-index-js-1cc64f5e94488355ec1d.js","sourcesContent":["webpackJsonp([114276838955818,60335399758886],{\n\n/***/ 104:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"layoutContext\":{}}\n\n/***/ }),\n\n/***/ 251:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _index = __webpack_require__(260);\n\t\n\tvar _index2 = _interopRequireDefault(_index);\n\t\n\tvar _layoutIndex = __webpack_require__(104);\n\t\n\tvar _layoutIndex2 = _interopRequireDefault(_layoutIndex);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (props) {\n\t  return _react2.default.createElement(_index2.default, _extends({}, props, _layoutIndex2.default));\n\t};\n\t\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ 254:\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(__dirname) {'use strict';\n\t\n\tmodule.exports = {\n\t  siteMetadata: {\n\t    title: 'Jhannifer Oliveira | Arquiteta e Urbanista',\n\t    description: 'Site e portfólio da Arquiteta e Urbanista Jhannifer Oliveira',\n\t    url: 'https://jhannifer.com.br',\n\t    author: 'jhanniferoliveira'\n\t  },\n\t  pathPrefix: '/',\n\t  plugins: [{\n\t    resolve: 'gatsby-source-filesystem',\n\t    options: {\n\t      path: __dirname + '/src/pages',\n\t      name: 'pages'\n\t    }\n\t  }, {\n\t    resolve: 'gatsby-transformer-remark',\n\t    options: {\n\t      plugins: [{\n\t        resolve: 'gatsby-remark-images',\n\t        options: {\n\t          maxWidth: 750,\n\t          linkImagesToOriginal: false,\n\t          wrapperStyle: 'margin-bottom: 1.0725rem;'\n\t        }\n\t      }, {\n\t        resolve: 'gatsby-remark-responsive-iframe',\n\t        options: {\n\t          wrapperStyle: 'margin-bottom: 1.0725rem'\n\t        }\n\t      }, 'gatsby-remark-prismjs', 'gatsby-remark-copy-linked-files', 'gatsby-remark-smartypants']\n\t    }\n\t  }, 'gatsby-transformer-sharp', 'gatsby-plugin-sass', 'gatsby-plugin-sharp', 'gatsby-plugin-offline', 'gatsby-plugin-react-helmet']\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, \"/\"))\n\n/***/ }),\n\n/***/ 337:\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 338:\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 339:\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 379:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t * jQuery JavaScript Library v3.3.1\n\t * https://jquery.com/\n\t *\n\t * Includes Sizzle.js\n\t * https://sizzlejs.com/\n\t *\n\t * Copyright JS Foundation and other contributors\n\t * Released under the MIT license\n\t * https://jquery.org/license\n\t *\n\t * Date: 2018-01-20T17:24Z\n\t */\n\t( function( global, factory ) {\n\t\n\t\t\"use strict\";\n\t\n\t\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\t\n\t\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t\t// is present, execute the factory and get jQuery.\n\t\t\t// For environments that do not have a `window` with a `document`\n\t\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t\t// This accentuates the need for the creation of a real `window`.\n\t\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t\t// See ticket #14549 for more info.\n\t\t\tmodule.exports = global.document ?\n\t\t\t\tfactory( global, true ) :\n\t\t\t\tfunction( w ) {\n\t\t\t\t\tif ( !w.document ) {\n\t\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t\t}\n\t\t\t\t\treturn factory( w );\n\t\t\t\t};\n\t\t} else {\n\t\t\tfactory( global );\n\t\t}\n\t\n\t// Pass this if window is not defined yet\n\t} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\t\n\t// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n\t// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n\t// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n\t// enough that all such attempts are guarded in a try block.\n\t\"use strict\";\n\t\n\tvar arr = [];\n\t\n\tvar document = window.document;\n\t\n\tvar getProto = Object.getPrototypeOf;\n\t\n\tvar slice = arr.slice;\n\t\n\tvar concat = arr.concat;\n\t\n\tvar push = arr.push;\n\t\n\tvar indexOf = arr.indexOf;\n\t\n\tvar class2type = {};\n\t\n\tvar toString = class2type.toString;\n\t\n\tvar hasOwn = class2type.hasOwnProperty;\n\t\n\tvar fnToString = hasOwn.toString;\n\t\n\tvar ObjectFunctionString = fnToString.call( Object );\n\t\n\tvar support = {};\n\t\n\tvar isFunction = function isFunction( obj ) {\n\t\n\t      // Support: Chrome <=57, Firefox <=52\n\t      // In some browsers, typeof returns \"function\" for HTML <object> elements\n\t      // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n\t      // We don't want to classify *any* DOM node as a function.\n\t      return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n\t  };\n\t\n\t\n\tvar isWindow = function isWindow( obj ) {\n\t\t\treturn obj != null && obj === obj.window;\n\t\t};\n\t\n\t\n\t\n\t\n\t\tvar preservedScriptAttributes = {\n\t\t\ttype: true,\n\t\t\tsrc: true,\n\t\t\tnoModule: true\n\t\t};\n\t\n\t\tfunction DOMEval( code, doc, node ) {\n\t\t\tdoc = doc || document;\n\t\n\t\t\tvar i,\n\t\t\t\tscript = doc.createElement( \"script\" );\n\t\n\t\t\tscript.text = code;\n\t\t\tif ( node ) {\n\t\t\t\tfor ( i in preservedScriptAttributes ) {\n\t\t\t\t\tif ( node[ i ] ) {\n\t\t\t\t\t\tscript[ i ] = node[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t\t}\n\t\n\t\n\tfunction toType( obj ) {\n\t\tif ( obj == null ) {\n\t\t\treturn obj + \"\";\n\t\t}\n\t\n\t\t// Support: Android <=2.3 only (functionish RegExp)\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\t\ttypeof obj;\n\t}\n\t/* global Symbol */\n\t// Defining this global in .eslintrc.json would create a danger of using the global\n\t// unguarded in another place, it seems safer to define global only for this module\n\t\n\t\n\t\n\tvar\n\t\tversion = \"3.3.1\",\n\t\n\t\t// Define a local copy of jQuery\n\t\tjQuery = function( selector, context ) {\n\t\n\t\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\t\treturn new jQuery.fn.init( selector, context );\n\t\t},\n\t\n\t\t// Support: Android <=4.0 only\n\t\t// Make sure we trim BOM and NBSP\n\t\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\t\n\tjQuery.fn = jQuery.prototype = {\n\t\n\t\t// The current version of jQuery being used\n\t\tjquery: version,\n\t\n\t\tconstructor: jQuery,\n\t\n\t\t// The default length of a jQuery object is 0\n\t\tlength: 0,\n\t\n\t\ttoArray: function() {\n\t\t\treturn slice.call( this );\n\t\t},\n\t\n\t\t// Get the Nth element in the matched element set OR\n\t\t// Get the whole matched element set as a clean array\n\t\tget: function( num ) {\n\t\n\t\t\t// Return all the elements in a clean array\n\t\t\tif ( num == null ) {\n\t\t\t\treturn slice.call( this );\n\t\t\t}\n\t\n\t\t\t// Return just the one element from the set\n\t\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t\t},\n\t\n\t\t// Take an array of elements and push it onto the stack\n\t\t// (returning the new matched element set)\n\t\tpushStack: function( elems ) {\n\t\n\t\t\t// Build a new jQuery matched element set\n\t\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\t\n\t\t\t// Add the old object onto the stack (as a reference)\n\t\t\tret.prevObject = this;\n\t\n\t\t\t// Return the newly-formed element set\n\t\t\treturn ret;\n\t\t},\n\t\n\t\t// Execute a callback for every element in the matched set.\n\t\teach: function( callback ) {\n\t\t\treturn jQuery.each( this, callback );\n\t\t},\n\t\n\t\tmap: function( callback ) {\n\t\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\t\treturn callback.call( elem, i, elem );\n\t\t\t} ) );\n\t\t},\n\t\n\t\tslice: function() {\n\t\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t\t},\n\t\n\t\tfirst: function() {\n\t\t\treturn this.eq( 0 );\n\t\t},\n\t\n\t\tlast: function() {\n\t\t\treturn this.eq( -1 );\n\t\t},\n\t\n\t\teq: function( i ) {\n\t\t\tvar len = this.length,\n\t\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t\t},\n\t\n\t\tend: function() {\n\t\t\treturn this.prevObject || this.constructor();\n\t\t},\n\t\n\t\t// For internal use only.\n\t\t// Behaves like an Array's method, not like a jQuery method.\n\t\tpush: push,\n\t\tsort: arr.sort,\n\t\tsplice: arr.splice\n\t};\n\t\n\tjQuery.extend = jQuery.fn.extend = function() {\n\t\tvar options, name, src, copy, copyIsArray, clone,\n\t\t\ttarget = arguments[ 0 ] || {},\n\t\t\ti = 1,\n\t\t\tlength = arguments.length,\n\t\t\tdeep = false;\n\t\n\t\t// Handle a deep copy situation\n\t\tif ( typeof target === \"boolean\" ) {\n\t\t\tdeep = target;\n\t\n\t\t\t// Skip the boolean and the target\n\t\t\ttarget = arguments[ i ] || {};\n\t\t\ti++;\n\t\t}\n\t\n\t\t// Handle case when target is a string or something (possible in deep copy)\n\t\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\n\t\t\ttarget = {};\n\t\t}\n\t\n\t\t// Extend jQuery itself if only one argument is passed\n\t\tif ( i === length ) {\n\t\t\ttarget = this;\n\t\t\ti--;\n\t\t}\n\t\n\t\tfor ( ; i < length; i++ ) {\n\t\n\t\t\t// Only deal with non-null/undefined values\n\t\t\tif ( ( options = arguments[ i ] ) != null ) {\n\t\n\t\t\t\t// Extend the base object\n\t\t\t\tfor ( name in options ) {\n\t\t\t\t\tsrc = target[ name ];\n\t\t\t\t\tcopy = options[ name ];\n\t\n\t\t\t\t\t// Prevent never-ending loop\n\t\t\t\t\tif ( target === copy ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\n\t\n\t\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && Array.isArray( src ) ? src : [];\n\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\t\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Return the modified object\n\t\treturn target;\n\t};\n\t\n\tjQuery.extend( {\n\t\n\t\t// Unique for each copy of jQuery on the page\n\t\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\t\n\t\t// Assume jQuery is ready without the ready module\n\t\tisReady: true,\n\t\n\t\terror: function( msg ) {\n\t\t\tthrow new Error( msg );\n\t\t},\n\t\n\t\tnoop: function() {},\n\t\n\t\tisPlainObject: function( obj ) {\n\t\t\tvar proto, Ctor;\n\t\n\t\t\t// Detect obvious negatives\n\t\t\t// Use toString instead of jQuery.type to catch host objects\n\t\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tproto = getProto( obj );\n\t\n\t\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\t\tif ( !proto ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\n\t\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t\t},\n\t\n\t\tisEmptyObject: function( obj ) {\n\t\n\t\t\t/* eslint-disable no-unused-vars */\n\t\t\t// See https://github.com/eslint/eslint/issues/6125\n\t\t\tvar name;\n\t\n\t\t\tfor ( name in obj ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\n\t\t// Evaluates a script in a global context\n\t\tglobalEval: function( code ) {\n\t\t\tDOMEval( code );\n\t\t},\n\t\n\t\teach: function( obj, callback ) {\n\t\t\tvar length, i = 0;\n\t\n\t\t\tif ( isArrayLike( obj ) ) {\n\t\t\t\tlength = obj.length;\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i in obj ) {\n\t\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn obj;\n\t\t},\n\t\n\t\t// Support: Android <=4.0 only\n\t\ttrim: function( text ) {\n\t\t\treturn text == null ?\n\t\t\t\t\"\" :\n\t\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t\t},\n\t\n\t\t// results is for internal usage only\n\t\tmakeArray: function( arr, results ) {\n\t\t\tvar ret = results || [];\n\t\n\t\t\tif ( arr != null ) {\n\t\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t\t[ arr ] : arr\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tpush.call( ret, arr );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn ret;\n\t\t},\n\t\n\t\tinArray: function( elem, arr, i ) {\n\t\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t\t},\n\t\n\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\tmerge: function( first, second ) {\n\t\t\tvar len = +second.length,\n\t\t\t\tj = 0,\n\t\t\t\ti = first.length;\n\t\n\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\tfirst[ i++ ] = second[ j ];\n\t\t\t}\n\t\n\t\t\tfirst.length = i;\n\t\n\t\t\treturn first;\n\t\t},\n\t\n\t\tgrep: function( elems, callback, invert ) {\n\t\t\tvar callbackInverse,\n\t\t\t\tmatches = [],\n\t\t\t\ti = 0,\n\t\t\t\tlength = elems.length,\n\t\t\t\tcallbackExpect = !invert;\n\t\n\t\t\t// Go through the array, only saving the items\n\t\t\t// that pass the validator function\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn matches;\n\t\t},\n\t\n\t\t// arg is for internal usage only\n\t\tmap: function( elems, callback, arg ) {\n\t\t\tvar length, value,\n\t\t\t\ti = 0,\n\t\t\t\tret = [];\n\t\n\t\t\t// Go through the array, translating each of the items to their new values\n\t\t\tif ( isArrayLike( elems ) ) {\n\t\t\t\tlength = elems.length;\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\t\n\t\t\t\t\tif ( value != null ) {\n\t\t\t\t\t\tret.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t// Go through every key on the object,\n\t\t\t} else {\n\t\t\t\tfor ( i in elems ) {\n\t\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\t\n\t\t\t\t\tif ( value != null ) {\n\t\t\t\t\t\tret.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Flatten any nested arrays\n\t\t\treturn concat.apply( [], ret );\n\t\t},\n\t\n\t\t// A global GUID counter for objects\n\t\tguid: 1,\n\t\n\t\t// jQuery.support is not used in Core but other projects attach their\n\t\t// properties to it so it needs to exist.\n\t\tsupport: support\n\t} );\n\t\n\tif ( typeof Symbol === \"function\" ) {\n\t\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n\t}\n\t\n\t// Populate the class2type map\n\tjQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\n\tfunction( i, name ) {\n\t\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n\t} );\n\t\n\tfunction isArrayLike( obj ) {\n\t\n\t\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t\t// `in` check used to prevent JIT error (gh-2145)\n\t\t// hasOwn isn't used here due to false negatives\n\t\t// regarding Nodelist length in IE\n\t\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\t\ttype = toType( obj );\n\t\n\t\tif ( isFunction( obj ) || isWindow( obj ) ) {\n\t\t\treturn false;\n\t\t}\n\t\n\t\treturn type === \"array\" || length === 0 ||\n\t\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n\t}\n\tvar Sizzle =\n\t/*!\n\t * Sizzle CSS Selector Engine v2.3.3\n\t * https://sizzlejs.com/\n\t *\n\t * Copyright jQuery Foundation and other contributors\n\t * Released under the MIT license\n\t * http://jquery.org/license\n\t *\n\t * Date: 2016-08-08\n\t */\n\t(function( window ) {\n\t\n\tvar i,\n\t\tsupport,\n\t\tExpr,\n\t\tgetText,\n\t\tisXML,\n\t\ttokenize,\n\t\tcompile,\n\t\tselect,\n\t\toutermostContext,\n\t\tsortInput,\n\t\thasDuplicate,\n\t\n\t\t// Local document vars\n\t\tsetDocument,\n\t\tdocument,\n\t\tdocElem,\n\t\tdocumentIsHTML,\n\t\trbuggyQSA,\n\t\trbuggyMatches,\n\t\tmatches,\n\t\tcontains,\n\t\n\t\t// Instance-specific data\n\t\texpando = \"sizzle\" + 1 * new Date(),\n\t\tpreferredDoc = window.document,\n\t\tdirruns = 0,\n\t\tdone = 0,\n\t\tclassCache = createCache(),\n\t\ttokenCache = createCache(),\n\t\tcompilerCache = createCache(),\n\t\tsortOrder = function( a, b ) {\n\t\t\tif ( a === b ) {\n\t\t\t\thasDuplicate = true;\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\t\n\t\t// Instance methods\n\t\thasOwn = ({}).hasOwnProperty,\n\t\tarr = [],\n\t\tpop = arr.pop,\n\t\tpush_native = arr.push,\n\t\tpush = arr.push,\n\t\tslice = arr.slice,\n\t\t// Use a stripped-down indexOf as it's faster than native\n\t\t// https://jsperf.com/thor-indexof-vs-for/5\n\t\tindexOf = function( list, elem ) {\n\t\t\tvar i = 0,\n\t\t\t\tlen = list.length;\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tif ( list[i] === elem ) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t},\n\t\n\t\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\t\n\t\t// Regular expressions\n\t\n\t\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\t\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\t\n\t\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\t\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\n\t\n\t\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\t\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t\t// Operator (capture 2)\n\t\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\t\"*\\\\]\",\n\t\n\t\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t\t// 2. simple (capture 6)\n\t\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t\t// 3. anything else (capture 2)\n\t\t\t\".*\" +\n\t\t\t\")\\\\)|)\",\n\t\n\t\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\t\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\t\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\t\n\t\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\t\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\t\n\t\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\t\n\t\trpseudo = new RegExp( pseudos ),\n\t\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\t\n\t\tmatchExpr = {\n\t\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t\t// For use in libraries implementing .is()\n\t\t\t// We use this for POS matching in `select`\n\t\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t\t},\n\t\n\t\trinputs = /^(?:input|select|textarea|button)$/i,\n\t\trheader = /^h\\d$/i,\n\t\n\t\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\t\n\t\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\t\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\t\n\t\trsibling = /[+~]/,\n\t\n\t\t// CSS escapes\n\t\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\t\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\t\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t\t// NaN means non-codepoint\n\t\t\t// Support: Firefox<24\n\t\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\t\treturn high !== high || escapedWhitespace ?\n\t\t\t\tescaped :\n\t\t\t\thigh < 0 ?\n\t\t\t\t\t// BMP codepoint\n\t\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t\t},\n\t\n\t\t// CSS string/identifier serialization\n\t\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\t\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\t\tfcssescape = function( ch, asCodePoint ) {\n\t\t\tif ( asCodePoint ) {\n\t\n\t\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\t\treturn \"\\uFFFD\";\n\t\t\t\t}\n\t\n\t\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t\t}\n\t\n\t\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\t\treturn \"\\\\\" + ch;\n\t\t},\n\t\n\t\t// Used for iframes\n\t\t// See setDocument()\n\t\t// Removing the function wrapper causes a \"Permission Denied\"\n\t\t// error in IE\n\t\tunloadHandler = function() {\n\t\t\tsetDocument();\n\t\t},\n\t\n\t\tdisabledAncestor = addCombinator(\n\t\t\tfunction( elem ) {\n\t\t\t\treturn elem.disabled === true && (\"form\" in elem || \"label\" in elem);\n\t\t\t},\n\t\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t\t);\n\t\n\t// Optimize for push.apply( _, NodeList )\n\ttry {\n\t\tpush.apply(\n\t\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\t\tpreferredDoc.childNodes\n\t\t);\n\t\t// Support: Android<4.0\n\t\t// Detect silently failing push.apply\n\t\tarr[ preferredDoc.childNodes.length ].nodeType;\n\t} catch ( e ) {\n\t\tpush = { apply: arr.length ?\n\t\n\t\t\t// Leverage slice if possible\n\t\t\tfunction( target, els ) {\n\t\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t\t} :\n\t\n\t\t\t// Support: IE<9\n\t\t\t// Otherwise append directly\n\t\t\tfunction( target, els ) {\n\t\t\t\tvar j = target.length,\n\t\t\t\t\ti = 0;\n\t\t\t\t// Can't trust NodeList.length\n\t\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\t\ttarget.length = j - 1;\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction Sizzle( selector, context, results, seed ) {\n\t\tvar m, i, elem, nid, match, groups, newSelector,\n\t\t\tnewContext = context && context.ownerDocument,\n\t\n\t\t\t// nodeType defaults to 9, since context defaults to document\n\t\t\tnodeType = context ? context.nodeType : 9;\n\t\n\t\tresults = results || [];\n\t\n\t\t// Return early from calls with invalid selector or context\n\t\tif ( typeof selector !== \"string\" || !selector ||\n\t\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\t\n\t\t\treturn results;\n\t\t}\n\t\n\t\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\t\tif ( !seed ) {\n\t\n\t\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\t\tsetDocument( context );\n\t\t\t}\n\t\t\tcontext = context || document;\n\t\n\t\t\tif ( documentIsHTML ) {\n\t\n\t\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\t\n\t\t\t\t\t// ID selector\n\t\t\t\t\tif ( (m = match[1]) ) {\n\t\n\t\t\t\t\t\t// Document context\n\t\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\t\n\t\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Element context\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\t\telem.id === m ) {\n\t\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t// Type selector\n\t\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\t\treturn results;\n\t\n\t\t\t\t\t// Class selector\n\t\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\t\tcontext.getElementsByClassName ) {\n\t\n\t\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Take advantage of querySelectorAll\n\t\t\t\tif ( support.qsa &&\n\t\t\t\t\t!compilerCache[ selector + \" \" ] &&\n\t\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\t\n\t\t\t\t\tif ( nodeType !== 1 ) {\n\t\t\t\t\t\tnewContext = context;\n\t\t\t\t\t\tnewSelector = selector;\n\t\n\t\t\t\t\t// qSA looks outside Element context, which is not what we want\n\t\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\n\t\t\t\t\t// Support: IE <=8\n\t\t\t\t\t// Exclude object elements\n\t\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\n\t\n\t\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\t\ti = groups.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tgroups[i] = \"#\" + nid + \" \" + toSelector( groups[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewSelector = groups.join( \",\" );\n\t\n\t\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\t\tcontext;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( newSelector ) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// All others\n\t\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n\t}\n\t\n\t/**\n\t * Create key-value caches of limited size\n\t * @returns {function(string, object)} Returns the Object data after storing it on itself with\n\t *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n\t *\tdeleting the oldest entry\n\t */\n\tfunction createCache() {\n\t\tvar keys = [];\n\t\n\t\tfunction cache( key, value ) {\n\t\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t\t// Only keep the most recent entries\n\t\t\t\tdelete cache[ keys.shift() ];\n\t\t\t}\n\t\t\treturn (cache[ key + \" \" ] = value);\n\t\t}\n\t\treturn cache;\n\t}\n\t\n\t/**\n\t * Mark a function for special use by Sizzle\n\t * @param {Function} fn The function to mark\n\t */\n\tfunction markFunction( fn ) {\n\t\tfn[ expando ] = true;\n\t\treturn fn;\n\t}\n\t\n\t/**\n\t * Support testing using an element\n\t * @param {Function} fn Passed the created element and returns a boolean result\n\t */\n\tfunction assert( fn ) {\n\t\tvar el = document.createElement(\"fieldset\");\n\t\n\t\ttry {\n\t\t\treturn !!fn( el );\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t} finally {\n\t\t\t// Remove from its parent by default\n\t\t\tif ( el.parentNode ) {\n\t\t\t\tel.parentNode.removeChild( el );\n\t\t\t}\n\t\t\t// release memory in IE\n\t\t\tel = null;\n\t\t}\n\t}\n\t\n\t/**\n\t * Adds the same handler for all of the specified attrs\n\t * @param {String} attrs Pipe-separated list of attributes\n\t * @param {Function} handler The method that will be applied\n\t */\n\tfunction addHandle( attrs, handler ) {\n\t\tvar arr = attrs.split(\"|\"),\n\t\t\ti = arr.length;\n\t\n\t\twhile ( i-- ) {\n\t\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t\t}\n\t}\n\t\n\t/**\n\t * Checks document order of two siblings\n\t * @param {Element} a\n\t * @param {Element} b\n\t * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n\t */\n\tfunction siblingCheck( a, b ) {\n\t\tvar cur = b && a,\n\t\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\t\ta.sourceIndex - b.sourceIndex;\n\t\n\t\t// Use IE sourceIndex if available on both nodes\n\t\tif ( diff ) {\n\t\t\treturn diff;\n\t\t}\n\t\n\t\t// Check if b follows a\n\t\tif ( cur ) {\n\t\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\t\tif ( cur === b ) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn a ? 1 : -1;\n\t}\n\t\n\t/**\n\t * Returns a function to use in pseudos for input types\n\t * @param {String} type\n\t */\n\tfunction createInputPseudo( type ) {\n\t\treturn function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === type;\n\t\t};\n\t}\n\t\n\t/**\n\t * Returns a function to use in pseudos for buttons\n\t * @param {String} type\n\t */\n\tfunction createButtonPseudo( type ) {\n\t\treturn function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t\t};\n\t}\n\t\n\t/**\n\t * Returns a function to use in pseudos for :enabled/:disabled\n\t * @param {Boolean} disabled true for :disabled; false for :enabled\n\t */\n\tfunction createDisabledPseudo( disabled ) {\n\t\n\t\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\t\treturn function( elem ) {\n\t\n\t\t\t// Only certain elements can match :enabled or :disabled\n\t\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\t\tif ( \"form\" in elem ) {\n\t\n\t\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t\t// * option elements in a disabled optgroup\n\t\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t\t// All such elements have a \"form\" property.\n\t\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\t\n\t\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\t\treturn elem.isDisabled === disabled ||\n\t\n\t\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\t\t\tdisabledAncestor( elem ) === disabled;\n\t\t\t\t}\n\t\n\t\t\t\treturn elem.disabled === disabled;\n\t\n\t\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t\t// even exist on them, let alone have a boolean value.\n\t\t\t} else if ( \"label\" in elem ) {\n\t\t\t\treturn elem.disabled === disabled;\n\t\t\t}\n\t\n\t\t\t// Remaining elements are neither :enabled nor :disabled\n\t\t\treturn false;\n\t\t};\n\t}\n\t\n\t/**\n\t * Returns a function to use in pseudos for positionals\n\t * @param {Function} fn\n\t */\n\tfunction createPositionalPseudo( fn ) {\n\t\treturn markFunction(function( argument ) {\n\t\t\targument = +argument;\n\t\t\treturn markFunction(function( seed, matches ) {\n\t\t\t\tvar j,\n\t\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\t\ti = matchIndexes.length;\n\t\n\t\t\t\t// Match elements found at the specified indexes\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\t\n\t/**\n\t * Checks a node for validity as a Sizzle context\n\t * @param {Element|Object=} context\n\t * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n\t */\n\tfunction testContext( context ) {\n\t\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n\t}\n\t\n\t// Expose support vars for convenience\n\tsupport = Sizzle.support = {};\n\t\n\t/**\n\t * Detects XML nodes\n\t * @param {Element|Object} elem An element or a document\n\t * @returns {Boolean} True iff elem is a non-HTML XML node\n\t */\n\tisXML = Sizzle.isXML = function( elem ) {\n\t\t// documentElement is verified for cases where it doesn't yet exist\n\t\t// (such as loading iframes in IE - #4833)\n\t\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\t\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n\t};\n\t\n\t/**\n\t * Sets document-related variables once based on the current document\n\t * @param {Element|Object} [doc] An element or document object to use to set the document\n\t * @returns {Object} Returns the current document\n\t */\n\tsetDocument = Sizzle.setDocument = function( node ) {\n\t\tvar hasCompare, subWindow,\n\t\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\t\n\t\t// Return early if doc is invalid or already selected\n\t\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\t\treturn document;\n\t\t}\n\t\n\t\t// Update global variables\n\t\tdocument = doc;\n\t\tdocElem = document.documentElement;\n\t\tdocumentIsHTML = !isXML( document );\n\t\n\t\t// Support: IE 9-11, Edge\n\t\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\t\tif ( preferredDoc !== document &&\n\t\t\t(subWindow = document.defaultView) && subWindow.top !== subWindow ) {\n\t\n\t\t\t// Support: IE 11, Edge\n\t\t\tif ( subWindow.addEventListener ) {\n\t\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\t\n\t\t\t// Support: IE 9 - 10 only\n\t\t\t} else if ( subWindow.attachEvent ) {\n\t\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Attributes\n\t\t---------------------------------------------------------------------- */\n\t\n\t\t// Support: IE<8\n\t\t// Verify that getAttribute really returns attributes and not properties\n\t\t// (excepting IE8 booleans)\n\t\tsupport.attributes = assert(function( el ) {\n\t\t\tel.className = \"i\";\n\t\t\treturn !el.getAttribute(\"className\");\n\t\t});\n\t\n\t\t/* getElement(s)By*\n\t\t---------------------------------------------------------------------- */\n\t\n\t\t// Check if getElementsByTagName(\"*\") returns only elements\n\t\tsupport.getElementsByTagName = assert(function( el ) {\n\t\t\tel.appendChild( document.createComment(\"\") );\n\t\t\treturn !el.getElementsByTagName(\"*\").length;\n\t\t});\n\t\n\t\t// Support: IE<9\n\t\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\t\n\t\t// Support: IE<10\n\t\t// Check if getElementById returns elements by name\n\t\t// The broken getElementById methods don't pick up programmatically-set names,\n\t\t// so use a roundabout getElementsByName test\n\t\tsupport.getById = assert(function( el ) {\n\t\t\tdocElem.appendChild( el ).id = expando;\n\t\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t\t});\n\t\n\t\t// ID filter and find\n\t\tif ( support.getById ) {\n\t\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\t\treturn function( elem ) {\n\t\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t\t};\n\t\t\t};\n\t\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\t\treturn function( elem ) {\n\t\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\t\treturn node && node.value === attrId;\n\t\t\t\t};\n\t\t\t};\n\t\n\t\t\t// Support: IE 6 - 7 only\n\t\t\t// getElementById is not reliable as a find shortcut\n\t\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\t\tvar node, i, elems,\n\t\t\t\t\t\telem = context.getElementById( id );\n\t\n\t\t\t\t\tif ( elem ) {\n\t\n\t\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\twhile ( (elem = elems[i++]) ) {\n\t\t\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\n\t\t// Tag\n\t\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\t\tfunction( tag, context ) {\n\t\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\t\treturn context.getElementsByTagName( tag );\n\t\n\t\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t\t} else if ( support.qsa ) {\n\t\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t\t}\n\t\t\t} :\n\t\n\t\t\tfunction( tag, context ) {\n\t\t\t\tvar elem,\n\t\t\t\t\ttmp = [],\n\t\t\t\t\ti = 0,\n\t\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\t\tresults = context.getElementsByTagName( tag );\n\t\n\t\t\t\t// Filter out possible comments\n\t\t\t\tif ( tag === \"*\" ) {\n\t\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn tmp;\n\t\t\t\t}\n\t\t\t\treturn results;\n\t\t\t};\n\t\n\t\t// Class\n\t\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\t\treturn context.getElementsByClassName( className );\n\t\t\t}\n\t\t};\n\t\n\t\t/* QSA/matchesSelector\n\t\t---------------------------------------------------------------------- */\n\t\n\t\t// QSA and matchesSelector support\n\t\n\t\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\t\trbuggyMatches = [];\n\t\n\t\t// qSa(:focus) reports false when true (Chrome 21)\n\t\t// We allow this because of a bug in IE8/9 that throws an error\n\t\t// whenever `document.activeElement` is accessed on an iframe\n\t\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t\t// See https://bugs.jquery.com/ticket/13378\n\t\trbuggyQSA = [];\n\t\n\t\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t\t// Build QSA regex\n\t\t\t// Regex strategy adopted from Diego Perini\n\t\t\tassert(function( el ) {\n\t\t\t\t// Select is set to empty string on purpose\n\t\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t\t// setting a boolean content attribute,\n\t\t\t\t// since its presence should be enough\n\t\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\t\"<option selected=''></option></select>\";\n\t\n\t\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\t\tif ( el.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t\t}\n\t\n\t\t\t\t// Support: IE8\n\t\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\t\tif ( !el.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t\t}\n\t\n\t\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t\t}\n\t\n\t\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t\t// IE8 throws error here and will not see later tests\n\t\t\t\tif ( !el.querySelectorAll(\":checked\").length ) {\n\t\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t\t}\n\t\n\t\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\tassert(function( el ) {\n\t\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\t\n\t\t\t\t// Support: Windows 8 Native Apps\n\t\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\t\tvar input = document.createElement(\"input\");\n\t\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\t\n\t\t\t\t// Support: IE8\n\t\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\t\tif ( el.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t\t}\n\t\n\t\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t\t// IE8 throws error here and will not see later tests\n\t\t\t\tif ( el.querySelectorAll(\":enabled\").length !== 2 ) {\n\t\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t\t}\n\t\n\t\t\t\t// Support: IE9-11+\n\t\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\t\tif ( el.querySelectorAll(\":disabled\").length !== 2 ) {\n\t\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t\t}\n\t\n\t\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\t\tel.querySelectorAll(\"*,:x\");\n\t\t\t\trbuggyQSA.push(\",.*:\");\n\t\t\t});\n\t\t}\n\t\n\t\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\t\tdocElem.webkitMatchesSelector ||\n\t\t\tdocElem.mozMatchesSelector ||\n\t\t\tdocElem.oMatchesSelector ||\n\t\t\tdocElem.msMatchesSelector) )) ) {\n\t\n\t\t\tassert(function( el ) {\n\t\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t\t// on a disconnected node (IE 9)\n\t\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\t\n\t\t\t\t// This should fail with an exception\n\t\t\t\t// Gecko does not error, returns false instead\n\t\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t\t});\n\t\t}\n\t\n\t\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\t\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\t\n\t\t/* Contains\n\t\t---------------------------------------------------------------------- */\n\t\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\t\n\t\t// Element contains another\n\t\t// Purposefully self-exclusive\n\t\t// As in, an element does not contain itself\n\t\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\t\tfunction( a, b ) {\n\t\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\t\tbup = b && b.parentNode;\n\t\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\t\tadown.contains ?\n\t\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t\t));\n\t\t\t} :\n\t\t\tfunction( a, b ) {\n\t\t\t\tif ( b ) {\n\t\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t};\n\t\n\t\t/* Sorting\n\t\t---------------------------------------------------------------------- */\n\t\n\t\t// Document order sorting\n\t\tsortOrder = hasCompare ?\n\t\tfunction( a, b ) {\n\t\n\t\t\t// Flag for duplicate removal\n\t\t\tif ( a === b ) {\n\t\t\t\thasDuplicate = true;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\n\t\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\t\tif ( compare ) {\n\t\t\t\treturn compare;\n\t\t\t}\n\t\n\t\t\t// Calculate position if both inputs belong to the same document\n\t\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\t\ta.compareDocumentPosition( b ) :\n\t\n\t\t\t\t// Otherwise we know they are disconnected\n\t\t\t\t1;\n\t\n\t\t\t// Disconnected nodes\n\t\t\tif ( compare & 1 ||\n\t\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\t\n\t\t\t\t// Choose the first element that is related to our preferred document\n\t\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\n\t\t\t\t// Maintain original order\n\t\t\t\treturn sortInput ?\n\t\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t\t0;\n\t\t\t}\n\t\n\t\t\treturn compare & 4 ? -1 : 1;\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\t// Exit early if the nodes are identical\n\t\t\tif ( a === b ) {\n\t\t\t\thasDuplicate = true;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\n\t\t\tvar cur,\n\t\t\t\ti = 0,\n\t\t\t\taup = a.parentNode,\n\t\t\t\tbup = b.parentNode,\n\t\t\t\tap = [ a ],\n\t\t\t\tbp = [ b ];\n\t\n\t\t\t// Parentless nodes are either documents or disconnected\n\t\t\tif ( !aup || !bup ) {\n\t\t\t\treturn a === document ? -1 :\n\t\t\t\t\tb === document ? 1 :\n\t\t\t\t\taup ? -1 :\n\t\t\t\t\tbup ? 1 :\n\t\t\t\t\tsortInput ?\n\t\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t\t0;\n\t\n\t\t\t// If the nodes are siblings, we can do a quick check\n\t\t\t} else if ( aup === bup ) {\n\t\t\t\treturn siblingCheck( a, b );\n\t\t\t}\n\t\n\t\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\t\tcur = a;\n\t\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\t\tap.unshift( cur );\n\t\t\t}\n\t\t\tcur = b;\n\t\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\t\tbp.unshift( cur );\n\t\t\t}\n\t\n\t\t\t// Walk down the tree looking for a discrepancy\n\t\t\twhile ( ap[i] === bp[i] ) {\n\t\t\t\ti++;\n\t\t\t}\n\t\n\t\t\treturn i ?\n\t\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\t\n\t\t\t\t// Otherwise nodes in our document sort first\n\t\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t\t0;\n\t\t};\n\t\n\t\treturn document;\n\t};\n\t\n\tSizzle.matches = function( expr, elements ) {\n\t\treturn Sizzle( expr, null, null, elements );\n\t};\n\t\n\tSizzle.matchesSelector = function( elem, expr ) {\n\t\t// Set document vars if needed\n\t\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\t\tsetDocument( elem );\n\t\t}\n\t\n\t\t// Make sure that attribute selectors are quoted\n\t\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\t\n\t\tif ( support.matchesSelector && documentIsHTML &&\n\t\t\t!compilerCache[ expr + \" \" ] &&\n\t\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\t\n\t\t\ttry {\n\t\t\t\tvar ret = matches.call( elem, expr );\n\t\n\t\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t}\n\t\n\t\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n\t};\n\t\n\tSizzle.contains = function( context, elem ) {\n\t\t// Set document vars if needed\n\t\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\treturn contains( context, elem );\n\t};\n\t\n\tSizzle.attr = function( elem, name ) {\n\t\t// Set document vars if needed\n\t\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\t\tsetDocument( elem );\n\t\t}\n\t\n\t\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\t\tundefined;\n\t\n\t\treturn val !== undefined ?\n\t\t\tval :\n\t\t\tsupport.attributes || !documentIsHTML ?\n\t\t\t\telem.getAttribute( name ) :\n\t\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\t\tnull;\n\t};\n\t\n\tSizzle.escape = function( sel ) {\n\t\treturn (sel + \"\").replace( rcssescape, fcssescape );\n\t};\n\t\n\tSizzle.error = function( msg ) {\n\t\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n\t};\n\t\n\t/**\n\t * Document sorting and removing duplicates\n\t * @param {ArrayLike} results\n\t */\n\tSizzle.uniqueSort = function( results ) {\n\t\tvar elem,\n\t\t\tduplicates = [],\n\t\t\tj = 0,\n\t\t\ti = 0;\n\t\n\t\t// Unless we *know* we can detect duplicates, assume their presence\n\t\thasDuplicate = !support.detectDuplicates;\n\t\tsortInput = !support.sortStable && results.slice( 0 );\n\t\tresults.sort( sortOrder );\n\t\n\t\tif ( hasDuplicate ) {\n\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\t\tj = duplicates.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile ( j-- ) {\n\t\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t\t}\n\t\t}\n\t\n\t\t// Clear input after sorting to release objects\n\t\t// See https://github.com/jquery/sizzle/pull/225\n\t\tsortInput = null;\n\t\n\t\treturn results;\n\t};\n\t\n\t/**\n\t * Utility function for retrieving the text value of an array of DOM nodes\n\t * @param {Array|Element} elem\n\t */\n\tgetText = Sizzle.getText = function( elem ) {\n\t\tvar node,\n\t\t\tret = \"\",\n\t\t\ti = 0,\n\t\t\tnodeType = elem.nodeType;\n\t\n\t\tif ( !nodeType ) {\n\t\t\t// If no nodeType, this is expected to be an array\n\t\t\twhile ( (node = elem[i++]) ) {\n\t\t\t\t// Do not traverse comment nodes\n\t\t\t\tret += getText( node );\n\t\t\t}\n\t\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t\t// Use textContent for elements\n\t\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\t\treturn elem.textContent;\n\t\t\t} else {\n\t\t\t\t// Traverse its children\n\t\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\t\tret += getText( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\t\treturn elem.nodeValue;\n\t\t}\n\t\t// Do not include comment or processing instruction nodes\n\t\n\t\treturn ret;\n\t};\n\t\n\tExpr = Sizzle.selectors = {\n\t\n\t\t// Can be adjusted by the user\n\t\tcacheLength: 50,\n\t\n\t\tcreatePseudo: markFunction,\n\t\n\t\tmatch: matchExpr,\n\t\n\t\tattrHandle: {},\n\t\n\t\tfind: {},\n\t\n\t\trelative: {\n\t\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\t\" \": { dir: \"parentNode\" },\n\t\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\t\"~\": { dir: \"previousSibling\" }\n\t\t},\n\t\n\t\tpreFilter: {\n\t\t\t\"ATTR\": function( match ) {\n\t\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\t\n\t\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\t\n\t\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t\t}\n\t\n\t\t\t\treturn match.slice( 0, 4 );\n\t\t\t},\n\t\n\t\t\t\"CHILD\": function( match ) {\n\t\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t\t1 type (only|nth|...)\n\t\t\t\t\t2 what (child|of-type)\n\t\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t\t5 sign of xn-component\n\t\t\t\t\t6 x of xn-component\n\t\t\t\t\t7 sign of y-component\n\t\t\t\t\t8 y of y-component\n\t\t\t\t*/\n\t\t\t\tmatch[1] = match[1].toLowerCase();\n\t\n\t\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t\t// nth-* requires argument\n\t\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\t\n\t\t\t\t// other types prohibit arguments\n\t\t\t\t} else if ( match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\t\n\t\t\t\treturn match;\n\t\t\t},\n\t\n\t\t\t\"PSEUDO\": function( match ) {\n\t\t\t\tvar excess,\n\t\t\t\t\tunquoted = !match[6] && match[2];\n\t\n\t\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\n\t\t\t\t// Accept quoted arguments as-is\n\t\t\t\tif ( match[3] ) {\n\t\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\t\n\t\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\t\n\t\t\t\t\t// excess is a negative index\n\t\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t\t}\n\t\n\t\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\t\treturn match.slice( 0, 3 );\n\t\t\t}\n\t\t},\n\t\n\t\tfilter: {\n\t\n\t\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\t\tfunction() { return true; } :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t\t};\n\t\t\t},\n\t\n\t\t\t\"CLASS\": function( className ) {\n\t\t\t\tvar pattern = classCache[ className + \" \" ];\n\t\n\t\t\t\treturn pattern ||\n\t\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t\t});\n\t\t\t},\n\t\n\t\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\t\treturn function( elem ) {\n\t\t\t\t\tvar result = Sizzle.attr( elem, name );\n\t\n\t\t\t\t\tif ( result == null ) {\n\t\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t\t}\n\t\t\t\t\tif ( !operator ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tresult += \"\";\n\t\n\t\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\t\tfalse;\n\t\t\t\t};\n\t\t\t},\n\t\n\t\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\t\tofType = what === \"of-type\";\n\t\n\t\t\t\treturn first === 1 && last === 0 ?\n\t\n\t\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t\t} :\n\t\n\t\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\t\tdiff = false;\n\t\n\t\t\t\t\t\tif ( parent ) {\n\t\n\t\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\t\n\t\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\t\n\t\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\t\tif ( forward && useCache ) {\n\t\n\t\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\t\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\t\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\t\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\t\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\n\t\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\t\n\t\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\t\n\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\t\n\t\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\t\n\t\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t\t++diff ) {\n\t\n\t\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\t\n\t\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\t\n\t\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t},\n\t\n\t\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t\t// pseudo-class names are case-insensitive\n\t\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\t\tvar args,\n\t\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\t\n\t\t\t\t// The user may use createPseudo to indicate that\n\t\t\t\t// arguments are needed to create the filter function\n\t\t\t\t// just as Sizzle does\n\t\t\t\tif ( fn[ expando ] ) {\n\t\t\t\t\treturn fn( argument );\n\t\t\t\t}\n\t\n\t\t\t\t// But maintain support for old signatures\n\t\t\t\tif ( fn.length > 1 ) {\n\t\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}) :\n\t\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t\t};\n\t\t\t\t}\n\t\n\t\t\t\treturn fn;\n\t\t\t}\n\t\t},\n\t\n\t\tpseudos: {\n\t\t\t// Potentially complex pseudos\n\t\t\t\"not\": markFunction(function( selector ) {\n\t\t\t\t// Trim the selector passed to compile\n\t\t\t\t// to avoid treating leading and trailing\n\t\t\t\t// spaces as combinators\n\t\t\t\tvar input = [],\n\t\t\t\t\tresults = [],\n\t\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\t\n\t\t\t\treturn matcher[ expando ] ?\n\t\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\t\tvar elem,\n\t\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\t\ti = seed.length;\n\t\n\t\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\t\tinput[0] = null;\n\t\t\t\t\t\treturn !results.pop();\n\t\t\t\t\t};\n\t\t\t}),\n\t\n\t\t\t\"has\": markFunction(function( selector ) {\n\t\t\t\treturn function( elem ) {\n\t\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t\t};\n\t\t\t}),\n\t\n\t\t\t\"contains\": markFunction(function( text ) {\n\t\t\t\ttext = text.replace( runescape, funescape );\n\t\t\t\treturn function( elem ) {\n\t\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t\t};\n\t\t\t}),\n\t\n\t\t\t// \"Whether an element is represented by a :lang() selector\n\t\t\t// is based solely on the element's language value\n\t\t\t// being equal to the identifier C,\n\t\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t\t// The identifier C does not have to be a valid language name.\"\n\t\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t\t// lang value must be a valid identifier\n\t\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t\t}\n\t\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\t\treturn function( elem ) {\n\t\t\t\t\tvar elemLang;\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\t\n\t\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\t\t\t}),\n\t\n\t\t\t// Miscellaneous\n\t\t\t\"target\": function( elem ) {\n\t\t\t\tvar hash = window.location && window.location.hash;\n\t\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t\t},\n\t\n\t\t\t\"root\": function( elem ) {\n\t\t\t\treturn elem === docElem;\n\t\t\t},\n\t\n\t\t\t\"focus\": function( elem ) {\n\t\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t\t},\n\t\n\t\t\t// Boolean properties\n\t\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\t\"disabled\": createDisabledPseudo( true ),\n\t\n\t\t\t\"checked\": function( elem ) {\n\t\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t\t},\n\t\n\t\t\t\"selected\": function( elem ) {\n\t\t\t\t// Accessing this property makes selected-by-default\n\t\t\t\t// options in Safari work properly\n\t\t\t\tif ( elem.parentNode ) {\n\t\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t\t}\n\t\n\t\t\t\treturn elem.selected === true;\n\t\t\t},\n\t\n\t\t\t// Contents\n\t\t\t\"empty\": function( elem ) {\n\t\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t},\n\t\n\t\t\t\"parent\": function( elem ) {\n\t\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t\t},\n\t\n\t\t\t// Element/input types\n\t\t\t\"header\": function( elem ) {\n\t\t\t\treturn rheader.test( elem.nodeName );\n\t\t\t},\n\t\n\t\t\t\"input\": function( elem ) {\n\t\t\t\treturn rinputs.test( elem.nodeName );\n\t\t\t},\n\t\n\t\t\t\"button\": function( elem ) {\n\t\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t\t},\n\t\n\t\t\t\"text\": function( elem ) {\n\t\t\t\tvar attr;\n\t\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\t\telem.type === \"text\" &&\n\t\n\t\t\t\t\t// Support: IE<8\n\t\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t\t},\n\t\n\t\t\t// Position-in-collection\n\t\t\t\"first\": createPositionalPseudo(function() {\n\t\t\t\treturn [ 0 ];\n\t\t\t}),\n\t\n\t\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\t\treturn [ length - 1 ];\n\t\t\t}),\n\t\n\t\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t\t}),\n\t\n\t\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\t\tvar i = 0;\n\t\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\t\tmatchIndexes.push( i );\n\t\t\t\t}\n\t\t\t\treturn matchIndexes;\n\t\t\t}),\n\t\n\t\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\t\tvar i = 1;\n\t\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\t\tmatchIndexes.push( i );\n\t\t\t\t}\n\t\t\t\treturn matchIndexes;\n\t\t\t}),\n\t\n\t\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\t\tmatchIndexes.push( i );\n\t\t\t\t}\n\t\t\t\treturn matchIndexes;\n\t\t\t}),\n\t\n\t\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\t\tmatchIndexes.push( i );\n\t\t\t\t}\n\t\t\t\treturn matchIndexes;\n\t\t\t})\n\t\t}\n\t};\n\t\n\tExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\t\n\t// Add button/input type pseudos\n\tfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\t\tExpr.pseudos[ i ] = createInputPseudo( i );\n\t}\n\tfor ( i in { submit: true, reset: true } ) {\n\t\tExpr.pseudos[ i ] = createButtonPseudo( i );\n\t}\n\t\n\t// Easy API for creating new setFilters\n\tfunction setFilters() {}\n\tsetFilters.prototype = Expr.filters = Expr.pseudos;\n\tExpr.setFilters = new setFilters();\n\t\n\ttokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\t\tvar matched, match, tokens, type,\n\t\t\tsoFar, groups, preFilters,\n\t\t\tcached = tokenCache[ selector + \" \" ];\n\t\n\t\tif ( cached ) {\n\t\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t\t}\n\t\n\t\tsoFar = selector;\n\t\tgroups = [];\n\t\tpreFilters = Expr.preFilter;\n\t\n\t\twhile ( soFar ) {\n\t\n\t\t\t// Comma and first run\n\t\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\t\tif ( match ) {\n\t\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t\t}\n\t\t\t\tgroups.push( (tokens = []) );\n\t\t\t}\n\t\n\t\t\tmatched = false;\n\t\n\t\t\t// Combinators\n\t\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\t// Cast descendant combinators to space\n\t\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\n\t\t\t// Filters\n\t\t\tfor ( type in Expr.filter ) {\n\t\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\t\tmatched = match.shift();\n\t\t\t\t\ttokens.push({\n\t\t\t\t\t\tvalue: matched,\n\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\tmatches: match\n\t\t\t\t\t});\n\t\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( !matched ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\n\t\t// Return the length of the invalid excess\n\t\t// if we're just parsing\n\t\t// Otherwise, throw an error or return tokens\n\t\treturn parseOnly ?\n\t\t\tsoFar.length :\n\t\t\tsoFar ?\n\t\t\t\tSizzle.error( selector ) :\n\t\t\t\t// Cache the tokens\n\t\t\t\ttokenCache( selector, groups ).slice( 0 );\n\t};\n\t\n\tfunction toSelector( tokens ) {\n\t\tvar i = 0,\n\t\t\tlen = tokens.length,\n\t\t\tselector = \"\";\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tselector += tokens[i].value;\n\t\t}\n\t\treturn selector;\n\t}\n\t\n\tfunction addCombinator( matcher, combinator, base ) {\n\t\tvar dir = combinator.dir,\n\t\t\tskip = combinator.next,\n\t\t\tkey = skip || dir,\n\t\t\tcheckNonElements = base && key === \"parentNode\",\n\t\t\tdoneName = done++;\n\t\n\t\treturn combinator.first ?\n\t\t\t// Check against closest ancestor/preceding element\n\t\t\tfunction( elem, context, xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t} :\n\t\n\t\t\t// Check against all ancestor/preceding elements\n\t\t\tfunction( elem, context, xml ) {\n\t\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\t\tnewCache = [ dirruns, doneName ];\n\t\n\t\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\t\tif ( xml ) {\n\t\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\t\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\t\n\t\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t\t} else if ( (oldCache = uniqueCache[ key ]) &&\n\t\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\t\n\t\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\t\n\t\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t};\n\t}\n\t\n\tfunction elementMatcher( matchers ) {\n\t\treturn matchers.length > 1 ?\n\t\t\tfunction( elem, context, xml ) {\n\t\t\t\tvar i = matchers.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} :\n\t\t\tmatchers[0];\n\t}\n\t\n\tfunction multipleContexts( selector, contexts, results ) {\n\t\tvar i = 0,\n\t\t\tlen = contexts.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tSizzle( selector, contexts[i], results );\n\t\t}\n\t\treturn results;\n\t}\n\t\n\tfunction condense( unmatched, map, filter, context, xml ) {\n\t\tvar elem,\n\t\t\tnewUnmatched = [],\n\t\t\ti = 0,\n\t\t\tlen = unmatched.length,\n\t\t\tmapped = map != null;\n\t\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\t\tif ( mapped ) {\n\t\t\t\t\t\tmap.push( i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn newUnmatched;\n\t}\n\t\n\tfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\t\tif ( postFilter && !postFilter[ expando ] ) {\n\t\t\tpostFilter = setMatcher( postFilter );\n\t\t}\n\t\tif ( postFinder && !postFinder[ expando ] ) {\n\t\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t\t}\n\t\treturn markFunction(function( seed, results, context, xml ) {\n\t\t\tvar temp, i, elem,\n\t\t\t\tpreMap = [],\n\t\t\t\tpostMap = [],\n\t\t\t\tpreexisting = results.length,\n\t\n\t\t\t\t// Get initial elements from seed or context\n\t\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\t\n\t\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\t\telems,\n\t\n\t\t\t\tmatcherOut = matcher ?\n\t\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\t\n\t\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t\t[] :\n\t\n\t\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\t\tresults :\n\t\t\t\t\tmatcherIn;\n\t\n\t\t\t// Find primary matches\n\t\t\tif ( matcher ) {\n\t\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t\t}\n\t\n\t\t\t// Apply postFilter\n\t\t\tif ( postFilter ) {\n\t\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\t\tpostFilter( temp, [], context, xml );\n\t\n\t\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\t\ti = temp.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( seed ) {\n\t\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\t\ttemp = [];\n\t\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\t\n\t\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t// Add elements to results, through postFinder if defined\n\t\t\t} else {\n\t\t\t\tmatcherOut = condense(\n\t\t\t\t\tmatcherOut === results ?\n\t\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\t\tmatcherOut\n\t\t\t\t);\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t\t} else {\n\t\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\t\n\tfunction matcherFromTokens( tokens ) {\n\t\tvar checkContext, matcher, j,\n\t\t\tlen = tokens.length,\n\t\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\t\ti = leadingRelative ? 1 : 0,\n\t\n\t\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\t\treturn elem === checkContext;\n\t\t\t}, implicitRelative, true ),\n\t\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t\t}, implicitRelative, true ),\n\t\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\t\tcheckContext = null;\n\t\t\t\treturn ret;\n\t\t\t} ];\n\t\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t\t} else {\n\t\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\t\n\t\t\t\t// Return special upon seeing a positional matcher\n\t\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\t\tj = ++i;\n\t\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn setMatcher(\n\t\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\t\tmatcher,\n\t\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tmatchers.push( matcher );\n\t\t\t}\n\t\t}\n\t\n\t\treturn elementMatcher( matchers );\n\t}\n\t\n\tfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\t\tvar bySet = setMatchers.length > 0,\n\t\t\tbyElement = elementMatchers.length > 0,\n\t\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\t\tvar elem, j, matcher,\n\t\t\t\t\tmatchedCount = 0,\n\t\t\t\t\ti = \"0\",\n\t\t\t\t\tunmatched = seed && [],\n\t\t\t\t\tsetMatched = [],\n\t\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\t\tlen = elems.length;\n\t\n\t\t\t\tif ( outermost ) {\n\t\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t\t}\n\t\n\t\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t\t// Support: IE<9, Safari\n\t\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\t\tif ( bySet ) {\n\t\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t\t// makes the latter nonnegative.\n\t\t\t\tmatchedCount += i;\n\t\n\t\t\t\t// Apply set filters to unmatched elements\n\t\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t\t// no element matchers and no seed.\n\t\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t\t// numerically zero.\n\t\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Add matches to results\n\t\t\t\t\tpush.apply( results, setMatched );\n\t\n\t\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\t\n\t\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Override manipulation of globals by nested matchers\n\t\t\t\tif ( outermost ) {\n\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\toutermostContext = contextBackup;\n\t\t\t\t}\n\t\n\t\t\t\treturn unmatched;\n\t\t\t};\n\t\n\t\treturn bySet ?\n\t\t\tmarkFunction( superMatcher ) :\n\t\t\tsuperMatcher;\n\t}\n\t\n\tcompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\t\tvar i,\n\t\t\tsetMatchers = [],\n\t\t\telementMatchers = [],\n\t\t\tcached = compilerCache[ selector + \" \" ];\n\t\n\t\tif ( !cached ) {\n\t\t\t// Generate a function of recursive functions that can be used to check each element\n\t\t\tif ( !match ) {\n\t\t\t\tmatch = tokenize( selector );\n\t\t\t}\n\t\t\ti = match.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\t\tif ( cached[ expando ] ) {\n\t\t\t\t\tsetMatchers.push( cached );\n\t\t\t\t} else {\n\t\t\t\t\telementMatchers.push( cached );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Cache the compiled function\n\t\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\t\n\t\t\t// Save selector and tokenization\n\t\t\tcached.selector = selector;\n\t\t}\n\t\treturn cached;\n\t};\n\t\n\t/**\n\t * A low-level selection function that works with Sizzle's compiled\n\t *  selector functions\n\t * @param {String|Function} selector A selector or a pre-compiled\n\t *  selector function built with Sizzle.compile\n\t * @param {Element} context\n\t * @param {Array} [results]\n\t * @param {Array} [seed] A set of elements to match against\n\t */\n\tselect = Sizzle.select = function( selector, context, results, seed ) {\n\t\tvar i, tokens, token, type, find,\n\t\t\tcompiled = typeof selector === \"function\" && selector,\n\t\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\t\n\t\tresults = results || [];\n\t\n\t\t// Try to minimize operations if there is only one selector in the list and no seed\n\t\t// (the latter of which guarantees us context)\n\t\tif ( match.length === 1 ) {\n\t\n\t\t\t// Reduce context if the leading compound selector is an ID\n\t\t\ttokens = match[0] = match[0].slice( 0 );\n\t\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {\n\t\n\t\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\t\tif ( !context ) {\n\t\t\t\t\treturn results;\n\t\n\t\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t\t} else if ( compiled ) {\n\t\t\t\t\tcontext = context.parentNode;\n\t\t\t\t}\n\t\n\t\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t\t}\n\t\n\t\t\t// Fetch a seed set for right-to-left matching\n\t\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\ttoken = tokens[i];\n\t\n\t\t\t\t// Abort if we hit a combinator\n\t\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\t\tif ( (seed = find(\n\t\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t\t)) ) {\n\t\n\t\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Compile and execute a filtering function if one is not provided\n\t\t// Provide `match` to avoid retokenization if we modified the selector above\n\t\t( compiled || compile( selector, match ) )(\n\t\t\tseed,\n\t\t\tcontext,\n\t\t\t!documentIsHTML,\n\t\t\tresults,\n\t\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t\t);\n\t\treturn results;\n\t};\n\t\n\t// One-time assignments\n\t\n\t// Sort stability\n\tsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\t\n\t// Support: Chrome 14-35+\n\t// Always assume duplicates if they aren't passed to the comparison function\n\tsupport.detectDuplicates = !!hasDuplicate;\n\t\n\t// Initialize against the default document\n\tsetDocument();\n\t\n\t// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n\t// Detached nodes confoundingly follow *each other*\n\tsupport.sortDetached = assert(function( el ) {\n\t\t// Should return 1, but returns 4 (following)\n\t\treturn el.compareDocumentPosition( document.createElement(\"fieldset\") ) & 1;\n\t});\n\t\n\t// Support: IE<8\n\t// Prevent attribute/property \"interpolation\"\n\t// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\n\tif ( !assert(function( el ) {\n\t\tel.innerHTML = \"<a href='#'></a>\";\n\t\treturn el.firstChild.getAttribute(\"href\") === \"#\" ;\n\t}) ) {\n\t\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\t\tif ( !isXML ) {\n\t\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t\t}\n\t\t});\n\t}\n\t\n\t// Support: IE<9\n\t// Use defaultValue in place of getAttribute(\"value\")\n\tif ( !support.attributes || !assert(function( el ) {\n\t\tel.innerHTML = \"<input/>\";\n\t\tel.firstChild.setAttribute( \"value\", \"\" );\n\t\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n\t}) ) {\n\t\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\t\treturn elem.defaultValue;\n\t\t\t}\n\t\t});\n\t}\n\t\n\t// Support: IE<9\n\t// Use getAttributeNode to fetch booleans when getAttribute lies\n\tif ( !assert(function( el ) {\n\t\treturn el.getAttribute(\"disabled\") == null;\n\t}) ) {\n\t\taddHandle( booleans, function( elem, name, isXML ) {\n\t\t\tvar val;\n\t\t\tif ( !isXML ) {\n\t\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\t\tval.value :\n\t\t\t\t\tnull;\n\t\t\t}\n\t\t});\n\t}\n\t\n\treturn Sizzle;\n\t\n\t})( window );\n\t\n\t\n\t\n\tjQuery.find = Sizzle;\n\tjQuery.expr = Sizzle.selectors;\n\t\n\t// Deprecated\n\tjQuery.expr[ \":\" ] = jQuery.expr.pseudos;\n\tjQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\n\tjQuery.text = Sizzle.getText;\n\tjQuery.isXMLDoc = Sizzle.isXML;\n\tjQuery.contains = Sizzle.contains;\n\tjQuery.escapeSelector = Sizzle.escape;\n\t\n\t\n\t\n\t\n\tvar dir = function( elem, dir, until ) {\n\t\tvar matched = [],\n\t\t\ttruncate = until !== undefined;\n\t\n\t\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tmatched.push( elem );\n\t\t\t}\n\t\t}\n\t\treturn matched;\n\t};\n\t\n\t\n\tvar siblings = function( n, elem ) {\n\t\tvar matched = [];\n\t\n\t\tfor ( ; n; n = n.nextSibling ) {\n\t\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\t\tmatched.push( n );\n\t\t\t}\n\t\t}\n\t\n\t\treturn matched;\n\t};\n\t\n\t\n\tvar rneedsContext = jQuery.expr.match.needsContext;\n\t\n\t\n\t\n\tfunction nodeName( elem, name ) {\n\t\n\t  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t\n\t};\n\tvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\t\n\t\n\t\n\t// Implement the identical functionality for filter and not\n\tfunction winnow( elements, qualifier, not ) {\n\t\tif ( isFunction( qualifier ) ) {\n\t\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t\t} );\n\t\t}\n\t\n\t\t// Single element\n\t\tif ( qualifier.nodeType ) {\n\t\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\t\treturn ( elem === qualifier ) !== not;\n\t\t\t} );\n\t\t}\n\t\n\t\t// Arraylike of elements (jQuery, arguments, Array)\n\t\tif ( typeof qualifier !== \"string\" ) {\n\t\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t\t} );\n\t\t}\n\t\n\t\t// Filtered directly for both simple and complex selectors\n\t\treturn jQuery.filter( qualifier, elements, not );\n\t}\n\t\n\tjQuery.filter = function( expr, elems, not ) {\n\t\tvar elem = elems[ 0 ];\n\t\n\t\tif ( not ) {\n\t\t\texpr = \":not(\" + expr + \")\";\n\t\t}\n\t\n\t\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t\t}\n\t\n\t\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\t\treturn elem.nodeType === 1;\n\t\t} ) );\n\t};\n\t\n\tjQuery.fn.extend( {\n\t\tfind: function( selector ) {\n\t\t\tvar i, ret,\n\t\t\t\tlen = this.length,\n\t\t\t\tself = this;\n\t\n\t\t\tif ( typeof selector !== \"string\" ) {\n\t\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} ) );\n\t\t\t}\n\t\n\t\t\tret = this.pushStack( [] );\n\t\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t\t}\n\t\n\t\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t\t},\n\t\tfilter: function( selector ) {\n\t\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t\t},\n\t\tnot: function( selector ) {\n\t\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t\t},\n\t\tis: function( selector ) {\n\t\t\treturn !!winnow(\n\t\t\t\tthis,\n\t\n\t\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\t\tjQuery( selector ) :\n\t\t\t\t\tselector || [],\n\t\t\t\tfalse\n\t\t\t).length;\n\t\t}\n\t} );\n\t\n\t\n\t// Initialize a jQuery object\n\t\n\t\n\t// A central reference to the root jQuery(document)\n\tvar rootjQuery,\n\t\n\t\t// A simple way to check for HTML strings\n\t\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t\t// Strict HTML recognition (#11290: must start with <)\n\t\t// Shortcut simple #id case for speed\n\t\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\t\n\t\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\t\tvar match, elem;\n\t\n\t\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\t\tif ( !selector ) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\n\t\t\t// Method init() accepts an alternate rootjQuery\n\t\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\t\troot = root || rootjQuery;\n\t\n\t\t\t// Handle HTML strings\n\t\t\tif ( typeof selector === \"string\" ) {\n\t\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\t\tselector.length >= 3 ) {\n\t\n\t\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\t\tmatch = [ null, selector, null ];\n\t\n\t\t\t\t} else {\n\t\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t\t}\n\t\n\t\t\t\t// Match html or make sure no context is specified for #id\n\t\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\t\n\t\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\t\n\t\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t) );\n\t\n\t\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\t\tfor ( match in context ) {\n\t\n\t\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\t\tif ( isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\t\n\t\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\treturn this;\n\t\n\t\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t\t} else {\n\t\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\t\n\t\t\t\t\t\tif ( elem ) {\n\t\n\t\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t}\n\t\n\t\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\t\treturn ( context || root ).find( selector );\n\t\n\t\t\t\t// HANDLE: $(expr, context)\n\t\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t\t} else {\n\t\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t\t}\n\t\n\t\t\t// HANDLE: $(DOMElement)\n\t\t\t} else if ( selector.nodeType ) {\n\t\t\t\tthis[ 0 ] = selector;\n\t\t\t\tthis.length = 1;\n\t\t\t\treturn this;\n\t\n\t\t\t// HANDLE: $(function)\n\t\t\t// Shortcut for document ready\n\t\t\t} else if ( isFunction( selector ) ) {\n\t\t\t\treturn root.ready !== undefined ?\n\t\t\t\t\troot.ready( selector ) :\n\t\n\t\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\t\tselector( jQuery );\n\t\t\t}\n\t\n\t\t\treturn jQuery.makeArray( selector, this );\n\t\t};\n\t\n\t// Give the init function the jQuery prototype for later instantiation\n\tinit.prototype = jQuery.fn;\n\t\n\t// Initialize central reference\n\trootjQuery = jQuery( document );\n\t\n\t\n\tvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\t\n\t\t// Methods guaranteed to produce a unique set when starting from a unique set\n\t\tguaranteedUnique = {\n\t\t\tchildren: true,\n\t\t\tcontents: true,\n\t\t\tnext: true,\n\t\t\tprev: true\n\t\t};\n\t\n\tjQuery.fn.extend( {\n\t\thas: function( target ) {\n\t\t\tvar targets = jQuery( target, this ),\n\t\t\t\tl = targets.length;\n\t\n\t\t\treturn this.filter( function() {\n\t\t\t\tvar i = 0;\n\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\n\t\tclosest: function( selectors, context ) {\n\t\t\tvar cur,\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length,\n\t\t\t\tmatched = [],\n\t\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\t\n\t\t\t// Positional selectors never match, since there's no _selection_ context\n\t\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\t\n\t\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\t\n\t\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\t\n\t\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t\t},\n\t\n\t\t// Determine the position of an element within the set\n\t\tindex: function( elem ) {\n\t\n\t\t\t// No argument, return index in parent\n\t\t\tif ( !elem ) {\n\t\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t\t}\n\t\n\t\t\t// Index in selector\n\t\t\tif ( typeof elem === \"string\" ) {\n\t\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t\t}\n\t\n\t\t\t// Locate the position of the desired element\n\t\t\treturn indexOf.call( this,\n\t\n\t\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t\t);\n\t\t},\n\t\n\t\tadd: function( selector, context ) {\n\t\t\treturn this.pushStack(\n\t\t\t\tjQuery.uniqueSort(\n\t\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t\t)\n\t\t\t);\n\t\t},\n\t\n\t\taddBack: function( selector ) {\n\t\t\treturn this.add( selector == null ?\n\t\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t\t);\n\t\t}\n\t} );\n\t\n\tfunction sibling( cur, dir ) {\n\t\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\t\treturn cur;\n\t}\n\t\n\tjQuery.each( {\n\t\tparent: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t\t},\n\t\tparents: function( elem ) {\n\t\t\treturn dir( elem, \"parentNode\" );\n\t\t},\n\t\tparentsUntil: function( elem, i, until ) {\n\t\t\treturn dir( elem, \"parentNode\", until );\n\t\t},\n\t\tnext: function( elem ) {\n\t\t\treturn sibling( elem, \"nextSibling\" );\n\t\t},\n\t\tprev: function( elem ) {\n\t\t\treturn sibling( elem, \"previousSibling\" );\n\t\t},\n\t\tnextAll: function( elem ) {\n\t\t\treturn dir( elem, \"nextSibling\" );\n\t\t},\n\t\tprevAll: function( elem ) {\n\t\t\treturn dir( elem, \"previousSibling\" );\n\t\t},\n\t\tnextUntil: function( elem, i, until ) {\n\t\t\treturn dir( elem, \"nextSibling\", until );\n\t\t},\n\t\tprevUntil: function( elem, i, until ) {\n\t\t\treturn dir( elem, \"previousSibling\", until );\n\t\t},\n\t\tsiblings: function( elem ) {\n\t\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t\t},\n\t\tchildren: function( elem ) {\n\t\t\treturn siblings( elem.firstChild );\n\t\t},\n\t\tcontents: function( elem ) {\n\t        if ( nodeName( elem, \"iframe\" ) ) {\n\t            return elem.contentDocument;\n\t        }\n\t\n\t        // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n\t        // Treat the template element as a regular one in browsers that\n\t        // don't support it.\n\t        if ( nodeName( elem, \"template\" ) ) {\n\t            elem = elem.content || elem;\n\t        }\n\t\n\t        return jQuery.merge( [], elem.childNodes );\n\t\t}\n\t}, function( name, fn ) {\n\t\tjQuery.fn[ name ] = function( until, selector ) {\n\t\t\tvar matched = jQuery.map( this, fn, until );\n\t\n\t\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\t\tselector = until;\n\t\t\t}\n\t\n\t\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t\t}\n\t\n\t\t\tif ( this.length > 1 ) {\n\t\n\t\t\t\t// Remove duplicates\n\t\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t\t}\n\t\n\t\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\t\tmatched.reverse();\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn this.pushStack( matched );\n\t\t};\n\t} );\n\tvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\t\n\t\n\t\n\t// Convert String-formatted options into Object-formatted ones\n\tfunction createOptions( options ) {\n\t\tvar object = {};\n\t\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\t\tobject[ flag ] = true;\n\t\t} );\n\t\treturn object;\n\t}\n\t\n\t/*\n\t * Create a callback list using the following parameters:\n\t *\n\t *\toptions: an optional list of space-separated options that will change how\n\t *\t\t\tthe callback list behaves or a more traditional option object\n\t *\n\t * By default a callback list will act like an event callback list and can be\n\t * \"fired\" multiple times.\n\t *\n\t * Possible options:\n\t *\n\t *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n\t *\n\t *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n\t *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n\t *\t\t\t\t\tvalues (like a Deferred)\n\t *\n\t *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n\t *\n\t *\tstopOnFalse:\tinterrupt callings when a callback returns false\n\t *\n\t */\n\tjQuery.Callbacks = function( options ) {\n\t\n\t\t// Convert options from String-formatted to Object-formatted if needed\n\t\t// (we check in cache first)\n\t\toptions = typeof options === \"string\" ?\n\t\t\tcreateOptions( options ) :\n\t\t\tjQuery.extend( {}, options );\n\t\n\t\tvar // Flag to know if list is currently firing\n\t\t\tfiring,\n\t\n\t\t\t// Last fire value for non-forgettable lists\n\t\t\tmemory,\n\t\n\t\t\t// Flag to know if list was already fired\n\t\t\tfired,\n\t\n\t\t\t// Flag to prevent firing\n\t\t\tlocked,\n\t\n\t\t\t// Actual callback list\n\t\t\tlist = [],\n\t\n\t\t\t// Queue of execution data for repeatable lists\n\t\t\tqueue = [],\n\t\n\t\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\t\tfiringIndex = -1,\n\t\n\t\t\t// Fire callbacks\n\t\t\tfire = function() {\n\t\n\t\t\t\t// Enforce single-firing\n\t\t\t\tlocked = locked || options.once;\n\t\n\t\t\t\t// Execute callbacks for all pending executions,\n\t\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\t\tfired = firing = true;\n\t\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\t\tmemory = queue.shift();\n\t\t\t\t\twhile ( ++firingIndex < list.length ) {\n\t\n\t\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\t\toptions.stopOnFalse ) {\n\t\n\t\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Forget the data if we're done with it\n\t\t\t\tif ( !options.memory ) {\n\t\t\t\t\tmemory = false;\n\t\t\t\t}\n\t\n\t\t\t\tfiring = false;\n\t\n\t\t\t\t// Clean up if we're done firing for good\n\t\t\t\tif ( locked ) {\n\t\n\t\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\t\tif ( memory ) {\n\t\t\t\t\t\tlist = [];\n\t\n\t\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlist = \"\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t// Actual Callbacks object\n\t\t\tself = {\n\t\n\t\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\t\tadd: function() {\n\t\t\t\t\tif ( list ) {\n\t\n\t\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\t\tif ( isFunction( arg ) ) {\n\t\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\n\t\n\t\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} )( arguments );\n\t\n\t\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\t\tfire();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\n\t\t\t\t// Remove a callback from the list\n\t\t\t\tremove: function() {\n\t\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\t\tvar index;\n\t\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\t\tlist.splice( index, 1 );\n\t\n\t\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\n\t\t\t\t// Check if a given callback is in the list.\n\t\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\t\thas: function( fn ) {\n\t\t\t\t\treturn fn ?\n\t\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\t\tlist.length > 0;\n\t\t\t\t},\n\t\n\t\t\t\t// Remove all callbacks from the list\n\t\t\t\tempty: function() {\n\t\t\t\t\tif ( list ) {\n\t\t\t\t\t\tlist = [];\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\n\t\t\t\t// Disable .fire and .add\n\t\t\t\t// Abort any current/pending executions\n\t\t\t\t// Clear all callbacks and values\n\t\t\t\tdisable: function() {\n\t\t\t\t\tlocked = queue = [];\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tdisabled: function() {\n\t\t\t\t\treturn !list;\n\t\t\t\t},\n\t\n\t\t\t\t// Disable .fire\n\t\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t\t// Abort any pending executions\n\t\t\t\tlock: function() {\n\t\t\t\t\tlocked = queue = [];\n\t\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tlocked: function() {\n\t\t\t\t\treturn !!locked;\n\t\t\t\t},\n\t\n\t\t\t\t// Call all callbacks with the given context and arguments\n\t\t\t\tfireWith: function( context, args ) {\n\t\t\t\t\tif ( !locked ) {\n\t\t\t\t\t\targs = args || [];\n\t\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\t\tqueue.push( args );\n\t\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\t\tfire();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\n\t\t\t\t// Call all the callbacks with the given arguments\n\t\t\t\tfire: function() {\n\t\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\n\t\t\t\t// To know if the callbacks have already been called at least once\n\t\t\t\tfired: function() {\n\t\t\t\t\treturn !!fired;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\treturn self;\n\t};\n\t\n\t\n\tfunction Identity( v ) {\n\t\treturn v;\n\t}\n\tfunction Thrower( ex ) {\n\t\tthrow ex;\n\t}\n\t\n\tfunction adoptValue( value, resolve, reject, noValue ) {\n\t\tvar method;\n\t\n\t\ttry {\n\t\n\t\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\t\tif ( value && isFunction( ( method = value.promise ) ) ) {\n\t\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\t\n\t\t\t// Other thenables\n\t\t\t} else if ( value && isFunction( ( method = value.then ) ) ) {\n\t\t\t\tmethod.call( value, resolve, reject );\n\t\n\t\t\t// Other non-thenables\n\t\t\t} else {\n\t\n\t\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n\t\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\n\t\t\t\t// * true: [ value ].slice( 1 ) => resolve()\n\t\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\n\t\t\t}\n\t\n\t\t// For Promises/A+, convert exceptions into rejections\n\t\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t\t// Deferred#then to conditionally suppress rejection.\n\t\t} catch ( value ) {\n\t\n\t\t\t// Support: Android 4.0 only\n\t\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\t\treject.apply( undefined, [ value ] );\n\t\t}\n\t}\n\t\n\tjQuery.extend( {\n\t\n\t\tDeferred: function( func ) {\n\t\t\tvar tuples = [\n\t\n\t\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t\t],\n\t\t\t\tstate = \"pending\",\n\t\t\t\tpromise = {\n\t\t\t\t\tstate: function() {\n\t\t\t\t\t\treturn state;\n\t\t\t\t\t},\n\t\t\t\t\talways: function() {\n\t\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t},\n\t\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t\t},\n\t\n\t\t\t\t\t// Keep pipe for back-compat\n\t\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\t\tvar fns = arguments;\n\t\n\t\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\n\t\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\t\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\t\n\t\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\t\tif ( returned && isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\tfns = null;\n\t\t\t\t\t\t} ).promise();\n\t\t\t\t\t},\n\t\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\t\tvar returned, then;\n\t\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\t\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\t\tthen = returned &&\n\t\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\t\treturned.then;\n\t\n\t\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\t\tif ( isFunction( then ) ) {\n\t\n\t\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\t\n\t\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\t\n\t\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\n\t\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\t\tisFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\t\tisFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\t\tisFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} ).promise();\n\t\t\t\t\t},\n\t\n\t\t\t\t\t// Get a promise for this deferred\n\t\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdeferred = {};\n\t\n\t\t\t// Add list-specific methods\n\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\t\tvar list = tuple[ 2 ],\n\t\t\t\t\tstateString = tuple[ 5 ];\n\t\n\t\t\t\t// promise.progress = list.add\n\t\t\t\t// promise.done = list.add\n\t\t\t\t// promise.fail = list.add\n\t\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\t\n\t\t\t\t// Handle state\n\t\t\t\tif ( stateString ) {\n\t\t\t\t\tlist.add(\n\t\t\t\t\t\tfunction() {\n\t\n\t\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t\t},\n\t\n\t\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\t\n\t\t\t\t\t\t// rejected_handlers.disable\n\t\t\t\t\t\t// fulfilled_handlers.disable\n\t\t\t\t\t\ttuples[ 3 - i ][ 3 ].disable,\n\t\n\t\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\t\ttuples[ 0 ][ 2 ].lock,\n\t\n\t\t\t\t\t\t// progress_handlers.lock\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].lock\n\t\t\t\t\t);\n\t\t\t\t}\n\t\n\t\t\t\t// progress_handlers.fire\n\t\t\t\t// fulfilled_handlers.fire\n\t\t\t\t// rejected_handlers.fire\n\t\t\t\tlist.add( tuple[ 3 ].fire );\n\t\n\t\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t};\n\t\n\t\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t\t} );\n\t\n\t\t\t// Make the deferred a promise\n\t\t\tpromise.promise( deferred );\n\t\n\t\t\t// Call given func if any\n\t\t\tif ( func ) {\n\t\t\t\tfunc.call( deferred, deferred );\n\t\t\t}\n\t\n\t\t\t// All done!\n\t\t\treturn deferred;\n\t\t},\n\t\n\t\t// Deferred helper\n\t\twhen: function( singleValue ) {\n\t\t\tvar\n\t\n\t\t\t\t// count of uncompleted subordinates\n\t\t\t\tremaining = arguments.length,\n\t\n\t\t\t\t// count of unprocessed arguments\n\t\t\t\ti = remaining,\n\t\n\t\t\t\t// subordinate fulfillment data\n\t\t\t\tresolveContexts = Array( i ),\n\t\t\t\tresolveValues = slice.call( arguments ),\n\t\n\t\t\t\t// the master Deferred\n\t\t\t\tmaster = jQuery.Deferred(),\n\t\n\t\t\t\t// subordinate callback factory\n\t\t\t\tupdateFunc = function( i ) {\n\t\t\t\t\treturn function( value ) {\n\t\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\t\tmaster.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\t\n\t\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\t\tif ( remaining <= 1 ) {\n\t\t\t\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,\n\t\t\t\t\t!remaining );\n\t\n\t\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\t\tif ( master.state() === \"pending\" ||\n\t\t\t\t\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\t\n\t\t\t\t\treturn master.then();\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\t\twhile ( i-- ) {\n\t\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\n\t\t\t}\n\t\n\t\t\treturn master.promise();\n\t\t}\n\t} );\n\t\n\t\n\t// These usually indicate a programmer mistake during development,\n\t// warn about them ASAP rather than swallowing them by default.\n\tvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\t\n\tjQuery.Deferred.exceptionHook = function( error, stack ) {\n\t\n\t\t// Support: IE 8 - 9 only\n\t\t// Console exists when dev tools are open, which can happen at any time\n\t\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t\t}\n\t};\n\t\n\t\n\t\n\t\n\tjQuery.readyException = function( error ) {\n\t\twindow.setTimeout( function() {\n\t\t\tthrow error;\n\t\t} );\n\t};\n\t\n\t\n\t\n\t\n\t// The deferred used on DOM ready\n\tvar readyList = jQuery.Deferred();\n\t\n\tjQuery.fn.ready = function( fn ) {\n\t\n\t\treadyList\n\t\t\t.then( fn )\n\t\n\t\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t\t// happens at the time of error handling instead of callback\n\t\t\t// registration.\n\t\t\t.catch( function( error ) {\n\t\t\t\tjQuery.readyException( error );\n\t\t\t} );\n\t\n\t\treturn this;\n\t};\n\t\n\tjQuery.extend( {\n\t\n\t\t// Is the DOM ready to be used? Set to true once it occurs.\n\t\tisReady: false,\n\t\n\t\t// A counter to track how many items to wait for before\n\t\t// the ready event fires. See #6781\n\t\treadyWait: 1,\n\t\n\t\t// Handle when the DOM is ready\n\t\tready: function( wait ) {\n\t\n\t\t\t// Abort if there are pending holds or we're already ready\n\t\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\n\t\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If there are functions bound, to execute\n\t\t\treadyList.resolveWith( document, [ jQuery ] );\n\t\t}\n\t} );\n\t\n\tjQuery.ready.then = readyList.then;\n\t\n\t// The ready event handler and self cleanup method\n\tfunction completed() {\n\t\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\t\twindow.removeEventListener( \"load\", completed );\n\t\tjQuery.ready();\n\t}\n\t\n\t// Catch cases where $(document).ready() is called\n\t// after the browser event has already occurred.\n\t// Support: IE <=9 - 10 only\n\t// Older IE sometimes signals \"interactive\" too soon\n\tif ( document.readyState === \"complete\" ||\n\t\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\t\n\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\twindow.setTimeout( jQuery.ready );\n\t\n\t} else {\n\t\n\t\t// Use the handy event callback\n\t\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\t\n\t\t// A fallback to window.onload, that will always work\n\t\twindow.addEventListener( \"load\", completed );\n\t}\n\t\n\t\n\t\n\t\n\t// Multifunctional method to get and set values of a collection\n\t// The value/s can optionally be executed if it's a function\n\tvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\t\tvar i = 0,\n\t\t\tlen = elems.length,\n\t\t\tbulk = key == null;\n\t\n\t\t// Sets many values\n\t\tif ( toType( key ) === \"object\" ) {\n\t\t\tchainable = true;\n\t\t\tfor ( i in key ) {\n\t\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t\t}\n\t\n\t\t// Sets one value\n\t\t} else if ( value !== undefined ) {\n\t\t\tchainable = true;\n\t\n\t\t\tif ( !isFunction( value ) ) {\n\t\t\t\traw = true;\n\t\t\t}\n\t\n\t\t\tif ( bulk ) {\n\t\n\t\t\t\t// Bulk operations run against the entire set\n\t\t\t\tif ( raw ) {\n\t\t\t\t\tfn.call( elems, value );\n\t\t\t\t\tfn = null;\n\t\n\t\t\t\t// ...except when executing function values\n\t\t\t\t} else {\n\t\t\t\t\tbulk = fn;\n\t\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( fn ) {\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tfn(\n\t\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\t\tvalue :\n\t\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tif ( chainable ) {\n\t\t\treturn elems;\n\t\t}\n\t\n\t\t// Gets\n\t\tif ( bulk ) {\n\t\t\treturn fn.call( elems );\n\t\t}\n\t\n\t\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n\t};\n\t\n\t\n\t// Matches dashed string for camelizing\n\tvar rmsPrefix = /^-ms-/,\n\t\trdashAlpha = /-([a-z])/g;\n\t\n\t// Used by camelCase as callback to replace()\n\tfunction fcamelCase( all, letter ) {\n\t\treturn letter.toUpperCase();\n\t}\n\t\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Support: IE <=9 - 11, Edge 12 - 15\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tfunction camelCase( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t}\n\tvar acceptData = function( owner ) {\n\t\n\t\t// Accepts only:\n\t\t//  - Node\n\t\t//    - Node.ELEMENT_NODE\n\t\t//    - Node.DOCUMENT_NODE\n\t\t//  - Object\n\t\t//    - Any\n\t\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n\t};\n\t\n\t\n\t\n\t\n\tfunction Data() {\n\t\tthis.expando = jQuery.expando + Data.uid++;\n\t}\n\t\n\tData.uid = 1;\n\t\n\tData.prototype = {\n\t\n\t\tcache: function( owner ) {\n\t\n\t\t\t// Check if the owner object already has a cache\n\t\t\tvar value = owner[ this.expando ];\n\t\n\t\t\t// If not, create one\n\t\t\tif ( !value ) {\n\t\t\t\tvalue = {};\n\t\n\t\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t\t// but we should not, see #8335.\n\t\t\t\t// Always return an empty object.\n\t\t\t\tif ( acceptData( owner ) ) {\n\t\n\t\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t\t// use plain assignment\n\t\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\t\towner[ this.expando ] = value;\n\t\n\t\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t\t// deleted when data is removed\n\t\t\t\t\t} else {\n\t\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn value;\n\t\t},\n\t\tset: function( owner, data, value ) {\n\t\t\tvar prop,\n\t\t\t\tcache = this.cache( owner );\n\t\n\t\t\t// Handle: [ owner, key, value ] args\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\tif ( typeof data === \"string\" ) {\n\t\t\t\tcache[ camelCase( data ) ] = value;\n\t\n\t\t\t// Handle: [ owner, { properties } ] args\n\t\t\t} else {\n\t\n\t\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\t\tfor ( prop in data ) {\n\t\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn cache;\n\t\t},\n\t\tget: function( owner, key ) {\n\t\t\treturn key === undefined ?\n\t\t\t\tthis.cache( owner ) :\n\t\n\t\t\t\t// Always use camelCase key (gh-2257)\n\t\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\n\t\t},\n\t\taccess: function( owner, key, value ) {\n\t\n\t\t\t// In cases where either:\n\t\t\t//\n\t\t\t//   1. No key was specified\n\t\t\t//   2. A string key was specified, but no value provided\n\t\t\t//\n\t\t\t// Take the \"read\" path and allow the get method to determine\n\t\t\t// which value to return, respectively either:\n\t\t\t//\n\t\t\t//   1. The entire cache object\n\t\t\t//   2. The data stored at the key\n\t\t\t//\n\t\t\tif ( key === undefined ||\n\t\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\t\n\t\t\t\treturn this.get( owner, key );\n\t\t\t}\n\t\n\t\t\t// When the key is not a string, or both a key and value\n\t\t\t// are specified, set or extend (existing objects) with either:\n\t\t\t//\n\t\t\t//   1. An object of properties\n\t\t\t//   2. A key and value\n\t\t\t//\n\t\t\tthis.set( owner, key, value );\n\t\n\t\t\t// Since the \"set\" path can have two possible entry points\n\t\t\t// return the expected data based on which path was taken[*]\n\t\t\treturn value !== undefined ? value : key;\n\t\t},\n\t\tremove: function( owner, key ) {\n\t\t\tvar i,\n\t\t\t\tcache = owner[ this.expando ];\n\t\n\t\t\tif ( cache === undefined ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ( key !== undefined ) {\n\t\n\t\t\t\t// Support array or space separated string of keys\n\t\t\t\tif ( Array.isArray( key ) ) {\n\t\n\t\t\t\t\t// If key is an array of keys...\n\t\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\t\tkey = key.map( camelCase );\n\t\t\t\t} else {\n\t\t\t\t\tkey = camelCase( key );\n\t\n\t\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\t\tkey = key in cache ?\n\t\t\t\t\t\t[ key ] :\n\t\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t\t}\n\t\n\t\t\t\ti = key.length;\n\t\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Remove the expando if there's no more data\n\t\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\t\n\t\t\t\t// Support: Chrome <=35 - 45\n\t\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t\t} else {\n\t\t\t\t\tdelete owner[ this.expando ];\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thasData: function( owner ) {\n\t\t\tvar cache = owner[ this.expando ];\n\t\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t\t}\n\t};\n\tvar dataPriv = new Data();\n\t\n\tvar dataUser = new Data();\n\t\n\t\n\t\n\t//\tImplementation Summary\n\t//\n\t//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n\t//\t2. Improve the module's maintainability by reducing the storage\n\t//\t\tpaths to a single mechanism.\n\t//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n\t//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n\t//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n\t//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\t\n\tvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\t\trmultiDash = /[A-Z]/g;\n\t\n\tfunction getData( data ) {\n\t\tif ( data === \"true\" ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tif ( data === \"false\" ) {\n\t\t\treturn false;\n\t\t}\n\t\n\t\tif ( data === \"null\" ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\t// Only convert to a number if it doesn't change the string\n\t\tif ( data === +data + \"\" ) {\n\t\t\treturn +data;\n\t\t}\n\t\n\t\tif ( rbrace.test( data ) ) {\n\t\t\treturn JSON.parse( data );\n\t\t}\n\t\n\t\treturn data;\n\t}\n\t\n\tfunction dataAttr( elem, key, data ) {\n\t\tvar name;\n\t\n\t\t// If nothing was found internally, try to fetch any\n\t\t// data from the HTML5 data-* attribute\n\t\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\t\tdata = elem.getAttribute( name );\n\t\n\t\t\tif ( typeof data === \"string\" ) {\n\t\t\t\ttry {\n\t\t\t\t\tdata = getData( data );\n\t\t\t\t} catch ( e ) {}\n\t\n\t\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\t\tdataUser.set( elem, key, data );\n\t\t\t} else {\n\t\t\t\tdata = undefined;\n\t\t\t}\n\t\t}\n\t\treturn data;\n\t}\n\t\n\tjQuery.extend( {\n\t\thasData: function( elem ) {\n\t\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t\t},\n\t\n\t\tdata: function( elem, name, data ) {\n\t\t\treturn dataUser.access( elem, name, data );\n\t\t},\n\t\n\t\tremoveData: function( elem, name ) {\n\t\t\tdataUser.remove( elem, name );\n\t\t},\n\t\n\t\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t\t// with direct calls to dataPriv methods, these can be deprecated.\n\t\t_data: function( elem, name, data ) {\n\t\t\treturn dataPriv.access( elem, name, data );\n\t\t},\n\t\n\t\t_removeData: function( elem, name ) {\n\t\t\tdataPriv.remove( elem, name );\n\t\t}\n\t} );\n\t\n\tjQuery.fn.extend( {\n\t\tdata: function( key, value ) {\n\t\t\tvar i, name, data,\n\t\t\t\telem = this[ 0 ],\n\t\t\t\tattrs = elem && elem.attributes;\n\t\n\t\t\t// Gets all values\n\t\t\tif ( key === undefined ) {\n\t\t\t\tif ( this.length ) {\n\t\t\t\t\tdata = dataUser.get( elem );\n\t\n\t\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\t\ti = attrs.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\n\t\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\t\tname = camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn data;\n\t\t\t}\n\t\n\t\t\t// Sets multiple values\n\t\t\tif ( typeof key === \"object\" ) {\n\t\t\t\treturn this.each( function() {\n\t\t\t\t\tdataUser.set( this, key );\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\treturn access( this, function( value ) {\n\t\t\t\tvar data;\n\t\n\t\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\t\tif ( elem && value === undefined ) {\n\t\n\t\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// Set the data...\n\t\t\t\tthis.each( function() {\n\t\n\t\t\t\t\t// We always store the camelCased key\n\t\t\t\t\tdataUser.set( this, key, value );\n\t\t\t\t} );\n\t\t\t}, null, value, arguments.length > 1, null, true );\n\t\t},\n\t\n\t\tremoveData: function( key ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.remove( this, key );\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\t\n\tjQuery.extend( {\n\t\tqueue: function( elem, type, data ) {\n\t\t\tvar queue;\n\t\n\t\t\tif ( elem ) {\n\t\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\t\tqueue = dataPriv.get( elem, type );\n\t\n\t\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\t\tif ( data ) {\n\t\t\t\t\tif ( !queue || Array.isArray( data ) ) {\n\t\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tqueue.push( data );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn queue || [];\n\t\t\t}\n\t\t},\n\t\n\t\tdequeue: function( elem, type ) {\n\t\t\ttype = type || \"fx\";\n\t\n\t\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\t\tstartLength = queue.length,\n\t\t\t\tfn = queue.shift(),\n\t\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\t\tnext = function() {\n\t\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t\t};\n\t\n\t\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\t\tif ( fn === \"inprogress\" ) {\n\t\t\t\tfn = queue.shift();\n\t\t\t\tstartLength--;\n\t\t\t}\n\t\n\t\t\tif ( fn ) {\n\t\n\t\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t\t// automatically dequeued\n\t\t\t\tif ( type === \"fx\" ) {\n\t\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t\t}\n\t\n\t\t\t\t// Clear up the last queue stop function\n\t\t\t\tdelete hooks.stop;\n\t\t\t\tfn.call( elem, next, hooks );\n\t\t\t}\n\t\n\t\t\tif ( !startLength && hooks ) {\n\t\t\t\thooks.empty.fire();\n\t\t\t}\n\t\t},\n\t\n\t\t// Not public - generate a queueHooks object, or return the current one\n\t\t_queueHooks: function( elem, type ) {\n\t\t\tvar key = type + \"queueHooks\";\n\t\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t\t} )\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\tjQuery.fn.extend( {\n\t\tqueue: function( type, data ) {\n\t\t\tvar setter = 2;\n\t\n\t\t\tif ( typeof type !== \"string\" ) {\n\t\t\t\tdata = type;\n\t\t\t\ttype = \"fx\";\n\t\t\t\tsetter--;\n\t\t\t}\n\t\n\t\t\tif ( arguments.length < setter ) {\n\t\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t\t}\n\t\n\t\t\treturn data === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function() {\n\t\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\t\n\t\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\t\tjQuery._queueHooks( this, type );\n\t\n\t\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t},\n\t\tdequeue: function( type ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t} );\n\t\t},\n\t\tclearQueue: function( type ) {\n\t\t\treturn this.queue( type || \"fx\", [] );\n\t\t},\n\t\n\t\t// Get a promise resolved when queues of a certain type\n\t\t// are emptied (fx is the type by default)\n\t\tpromise: function( type, obj ) {\n\t\t\tvar tmp,\n\t\t\t\tcount = 1,\n\t\t\t\tdefer = jQuery.Deferred(),\n\t\t\t\telements = this,\n\t\t\t\ti = this.length,\n\t\t\t\tresolve = function() {\n\t\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\tif ( typeof type !== \"string\" ) {\n\t\t\t\tobj = type;\n\t\t\t\ttype = undefined;\n\t\t\t}\n\t\t\ttype = type || \"fx\";\n\t\n\t\t\twhile ( i-- ) {\n\t\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\t\tcount++;\n\t\t\t\t\ttmp.empty.add( resolve );\n\t\t\t\t}\n\t\t\t}\n\t\t\tresolve();\n\t\t\treturn defer.promise( obj );\n\t\t}\n\t} );\n\tvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\t\n\tvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\t\n\t\n\tvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\t\n\tvar isHiddenWithinTree = function( elem, el ) {\n\t\n\t\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t\t// in that case, element will be second argument\n\t\t\telem = el || elem;\n\t\n\t\t\t// Inline style trumps all\n\t\t\treturn elem.style.display === \"none\" ||\n\t\t\t\telem.style.display === \"\" &&\n\t\n\t\t\t\t// Otherwise, check computed style\n\t\t\t\t// Support: Firefox <=43 - 45\n\t\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t\t// in the document.\n\t\t\t\tjQuery.contains( elem.ownerDocument, elem ) &&\n\t\n\t\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t\t};\n\t\n\tvar swap = function( elem, options, callback, args ) {\n\t\tvar ret, name,\n\t\t\told = {};\n\t\n\t\t// Remember the old values, and insert the new ones\n\t\tfor ( name in options ) {\n\t\t\told[ name ] = elem.style[ name ];\n\t\t\telem.style[ name ] = options[ name ];\n\t\t}\n\t\n\t\tret = callback.apply( elem, args || [] );\n\t\n\t\t// Revert the old values\n\t\tfor ( name in options ) {\n\t\t\telem.style[ name ] = old[ name ];\n\t\t}\n\t\n\t\treturn ret;\n\t};\n\t\n\t\n\t\n\t\n\tfunction adjustCSS( elem, prop, valueParts, tween ) {\n\t\tvar adjusted, scale,\n\t\t\tmaxIterations = 20,\n\t\t\tcurrentValue = tween ?\n\t\t\t\tfunction() {\n\t\t\t\t\treturn tween.cur();\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t\t},\n\t\t\tinitial = currentValue(),\n\t\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\t\n\t\t\t// Starting value computation is required for potential unit mismatches\n\t\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\t\n\t\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\t\n\t\t\t// Support: Firefox <=54\n\t\t\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n\t\t\tinitial = initial / 2;\n\t\n\t\t\t// Trust units reported by jQuery.css\n\t\t\tunit = unit || initialInUnit[ 3 ];\n\t\n\t\t\t// Iteratively approximate from a nonzero starting point\n\t\t\tinitialInUnit = +initial || 1;\n\t\n\t\t\twhile ( maxIterations-- ) {\n\t\n\t\t\t\t// Evaluate and update our best guess (doubling guesses that zero out).\n\t\t\t\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n\t\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\t\t\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\n\t\t\t\t\tmaxIterations = 0;\n\t\t\t\t}\n\t\t\t\tinitialInUnit = initialInUnit / scale;\n\t\n\t\t\t}\n\t\n\t\t\tinitialInUnit = initialInUnit * 2;\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\n\t\t\t// Make sure we update the tween properties later on\n\t\t\tvalueParts = valueParts || [];\n\t\t}\n\t\n\t\tif ( valueParts ) {\n\t\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\t\n\t\t\t// Apply relative offset (+=/-=) if specified\n\t\t\tadjusted = valueParts[ 1 ] ?\n\t\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t\t+valueParts[ 2 ];\n\t\t\tif ( tween ) {\n\t\t\t\ttween.unit = unit;\n\t\t\t\ttween.start = initialInUnit;\n\t\t\t\ttween.end = adjusted;\n\t\t\t}\n\t\t}\n\t\treturn adjusted;\n\t}\n\t\n\t\n\tvar defaultDisplayMap = {};\n\t\n\tfunction getDefaultDisplay( elem ) {\n\t\tvar temp,\n\t\t\tdoc = elem.ownerDocument,\n\t\t\tnodeName = elem.nodeName,\n\t\t\tdisplay = defaultDisplayMap[ nodeName ];\n\t\n\t\tif ( display ) {\n\t\t\treturn display;\n\t\t}\n\t\n\t\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\t\tdisplay = jQuery.css( temp, \"display\" );\n\t\n\t\ttemp.parentNode.removeChild( temp );\n\t\n\t\tif ( display === \"none\" ) {\n\t\t\tdisplay = \"block\";\n\t\t}\n\t\tdefaultDisplayMap[ nodeName ] = display;\n\t\n\t\treturn display;\n\t}\n\t\n\tfunction showHide( elements, show ) {\n\t\tvar display, elem,\n\t\t\tvalues = [],\n\t\t\tindex = 0,\n\t\t\tlength = elements.length;\n\t\n\t\t// Determine new display value for elements that need to change\n\t\tfor ( ; index < length; index++ ) {\n\t\t\telem = elements[ index ];\n\t\t\tif ( !elem.style ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\tdisplay = elem.style.display;\n\t\t\tif ( show ) {\n\t\n\t\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t\t// inline or about-to-be-restored)\n\t\t\t\tif ( display === \"none\" ) {\n\t\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( display !== \"none\" ) {\n\t\t\t\t\tvalues[ index ] = \"none\";\n\t\n\t\t\t\t\t// Remember what we're overwriting\n\t\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Set the display of the elements in a second loop to avoid constant reflow\n\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\tif ( values[ index ] != null ) {\n\t\t\t\telements[ index ].style.display = values[ index ];\n\t\t\t}\n\t\t}\n\t\n\t\treturn elements;\n\t}\n\t\n\tjQuery.fn.extend( {\n\t\tshow: function() {\n\t\t\treturn showHide( this, true );\n\t\t},\n\t\thide: function() {\n\t\t\treturn showHide( this );\n\t\t},\n\t\ttoggle: function( state ) {\n\t\t\tif ( typeof state === \"boolean\" ) {\n\t\t\t\treturn state ? this.show() : this.hide();\n\t\t\t}\n\t\n\t\t\treturn this.each( function() {\n\t\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\t\tjQuery( this ).show();\n\t\t\t\t} else {\n\t\t\t\t\tjQuery( this ).hide();\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t} );\n\tvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\t\n\tvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i );\n\t\n\tvar rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\n\t\n\t\n\t\n\t// We have to close these tags to support XHTML (#13200)\n\tvar wrapMap = {\n\t\n\t\t// Support: IE <=9 only\n\t\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\t\n\t\t// XHTML parsers do not magically insert elements in the\n\t\t// same way that tag soup parsers do. So we cannot shorten\n\t\t// this by omitting <tbody> or other required elements.\n\t\tthead: [ 1, \"<table>\", \"</table>\" ],\n\t\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\t\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\t\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\t\n\t\t_default: [ 0, \"\", \"\" ]\n\t};\n\t\n\t// Support: IE <=9 only\n\twrapMap.optgroup = wrapMap.option;\n\t\n\twrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n\twrapMap.th = wrapMap.td;\n\t\n\t\n\tfunction getAll( context, tag ) {\n\t\n\t\t// Support: IE <=9 - 11 only\n\t\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\t\tvar ret;\n\t\n\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\tret = context.getElementsByTagName( tag || \"*\" );\n\t\n\t\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\t\tret = context.querySelectorAll( tag || \"*\" );\n\t\n\t\t} else {\n\t\t\tret = [];\n\t\t}\n\t\n\t\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\n\t\t\treturn jQuery.merge( [ context ], ret );\n\t\t}\n\t\n\t\treturn ret;\n\t}\n\t\n\t\n\t// Mark scripts as having already been evaluated\n\tfunction setGlobalEval( elems, refElements ) {\n\t\tvar i = 0,\n\t\t\tl = elems.length;\n\t\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tdataPriv.set(\n\t\t\t\telems[ i ],\n\t\t\t\t\"globalEval\",\n\t\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t\t);\n\t\t}\n\t}\n\t\n\t\n\tvar rhtml = /<|&#?\\w+;/;\n\t\n\tfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\t\tvar elem, tmp, tag, wrap, contains, j,\n\t\t\tfragment = context.createDocumentFragment(),\n\t\t\tnodes = [],\n\t\t\ti = 0,\n\t\t\tl = elems.length;\n\t\n\t\tfor ( ; i < l; i++ ) {\n\t\t\telem = elems[ i ];\n\t\n\t\t\tif ( elem || elem === 0 ) {\n\t\n\t\t\t\t// Add nodes directly\n\t\t\t\tif ( toType( elem ) === \"object\" ) {\n\t\n\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\t\n\t\t\t\t// Convert non-html into a text node\n\t\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\t\n\t\t\t\t// Convert html into DOM nodes\n\t\t\t\t} else {\n\t\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\t\n\t\t\t\t\t// Deserialize a standard representation\n\t\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\t\n\t\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\t\tj = wrap[ 0 ];\n\t\t\t\t\twhile ( j-- ) {\n\t\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\t\n\t\t\t\t\t// Remember the top-level container\n\t\t\t\t\ttmp = fragment.firstChild;\n\t\n\t\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\t\ttmp.textContent = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Remove wrapper from fragment\n\t\tfragment.textContent = \"\";\n\t\n\t\ti = 0;\n\t\twhile ( ( elem = nodes[ i++ ] ) ) {\n\t\n\t\t\t// Skip elements already in the context collection (trac-4087)\n\t\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\t\tif ( ignored ) {\n\t\t\t\t\tignored.push( elem );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\t\n\t\t\t// Append to fragment\n\t\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\t\n\t\t\t// Preserve script evaluation history\n\t\t\tif ( contains ) {\n\t\t\t\tsetGlobalEval( tmp );\n\t\t\t}\n\t\n\t\t\t// Capture executables\n\t\t\tif ( scripts ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\t\tscripts.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn fragment;\n\t}\n\t\n\t\n\t( function() {\n\t\tvar fragment = document.createDocumentFragment(),\n\t\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\t\tinput = document.createElement( \"input\" );\n\t\n\t\t// Support: Android 4.0 - 4.3 only\n\t\t// Check state lost if the name is set (#11217)\n\t\t// Support: Windows Web Apps (WWA)\n\t\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\t\tinput.setAttribute( \"type\", \"radio\" );\n\t\tinput.setAttribute( \"checked\", \"checked\" );\n\t\tinput.setAttribute( \"name\", \"t\" );\n\t\n\t\tdiv.appendChild( input );\n\t\n\t\t// Support: Android <=4.1 only\n\t\t// Older WebKit doesn't clone checked state correctly in fragments\n\t\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\t\n\t\t// Support: IE <=11 only\n\t\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\t\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\t\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n\t} )();\n\tvar documentElement = document.documentElement;\n\t\n\t\n\t\n\tvar\n\t\trkeyEvent = /^key/,\n\t\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\t\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\t\n\tfunction returnTrue() {\n\t\treturn true;\n\t}\n\t\n\tfunction returnFalse() {\n\t\treturn false;\n\t}\n\t\n\t// Support: IE <=9 only\n\t// See #13393 for more info\n\tfunction safeActiveElement() {\n\t\ttry {\n\t\t\treturn document.activeElement;\n\t\t} catch ( err ) { }\n\t}\n\t\n\tfunction on( elem, types, selector, data, fn, one ) {\n\t\tvar origFn, type;\n\t\n\t\t// Types can be a map of types/handlers\n\t\tif ( typeof types === \"object\" ) {\n\t\n\t\t\t// ( types-Object, selector, data )\n\t\t\tif ( typeof selector !== \"string\" ) {\n\t\n\t\t\t\t// ( types-Object, data )\n\t\t\t\tdata = data || selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t\tfor ( type in types ) {\n\t\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t\t}\n\t\t\treturn elem;\n\t\t}\n\t\n\t\tif ( data == null && fn == null ) {\n\t\n\t\t\t// ( types, fn )\n\t\t\tfn = selector;\n\t\t\tdata = selector = undefined;\n\t\t} else if ( fn == null ) {\n\t\t\tif ( typeof selector === \"string\" ) {\n\t\n\t\t\t\t// ( types, selector, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = undefined;\n\t\t\t} else {\n\t\n\t\t\t\t// ( types, data, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t} else if ( !fn ) {\n\t\t\treturn elem;\n\t\t}\n\t\n\t\tif ( one === 1 ) {\n\t\t\torigFn = fn;\n\t\t\tfn = function( event ) {\n\t\n\t\t\t\t// Can use an empty set, since event contains the info\n\t\t\t\tjQuery().off( event );\n\t\t\t\treturn origFn.apply( this, arguments );\n\t\t\t};\n\t\n\t\t\t// Use same guid so caller can remove using origFn\n\t\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t\t}\n\t\treturn elem.each( function() {\n\t\t\tjQuery.event.add( this, types, fn, data, selector );\n\t\t} );\n\t}\n\t\n\t/*\n\t * Helper functions for managing events -- not part of the public interface.\n\t * Props to Dean Edwards' addEvent library for many of the ideas.\n\t */\n\tjQuery.event = {\n\t\n\t\tglobal: {},\n\t\n\t\tadd: function( elem, types, handler, data, selector ) {\n\t\n\t\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\t\tevents, t, handleObj,\n\t\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\t\telemData = dataPriv.get( elem );\n\t\n\t\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\t\tif ( !elemData ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\t\tif ( handler.handler ) {\n\t\t\t\thandleObjIn = handler;\n\t\t\t\thandler = handleObjIn.handler;\n\t\t\t\tselector = handleObjIn.selector;\n\t\t\t}\n\t\n\t\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\t\tif ( selector ) {\n\t\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t\t}\n\t\n\t\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\t\tif ( !handler.guid ) {\n\t\t\t\thandler.guid = jQuery.guid++;\n\t\t\t}\n\t\n\t\t\t// Init the element's event structure and main handler, if this is the first\n\t\t\tif ( !( events = elemData.events ) ) {\n\t\t\t\tevents = elemData.events = {};\n\t\t\t}\n\t\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\t\teventHandle = elemData.handle = function( e ) {\n\t\n\t\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\t// Handle multiple events separated by a space\n\t\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\t\tt = types.length;\n\t\t\twhile ( t-- ) {\n\t\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\t\ttype = origType = tmp[ 1 ];\n\t\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\t\n\t\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\t\tif ( !type ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\n\t\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\n\t\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\n\t\t\t\t// Update special based on newly reset type\n\t\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\n\t\t\t\t// handleObj is passed to all event handlers\n\t\t\t\thandleObj = jQuery.extend( {\n\t\t\t\t\ttype: type,\n\t\t\t\t\torigType: origType,\n\t\t\t\t\tdata: data,\n\t\t\t\t\thandler: handler,\n\t\t\t\t\tguid: handler.guid,\n\t\t\t\t\tselector: selector,\n\t\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t\t}, handleObjIn );\n\t\n\t\t\t\t// Init the event handler queue if we're the first\n\t\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\t\thandlers.delegateCount = 0;\n\t\n\t\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\t\tif ( !special.setup ||\n\t\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\t\n\t\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif ( special.add ) {\n\t\t\t\t\tspecial.add.call( elem, handleObj );\n\t\n\t\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Add to the element's handler list, delegates in front\n\t\t\t\tif ( selector ) {\n\t\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t\t} else {\n\t\t\t\t\thandlers.push( handleObj );\n\t\t\t\t}\n\t\n\t\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\t\tjQuery.event.global[ type ] = true;\n\t\t\t}\n\t\n\t\t},\n\t\n\t\t// Detach an event or set of events from an element\n\t\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\t\n\t\t\tvar j, origCount, tmp,\n\t\t\t\tevents, t, handleObj,\n\t\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\t\n\t\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Once for each type.namespace in types; type may be omitted\n\t\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\t\tt = types.length;\n\t\t\twhile ( t-- ) {\n\t\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\t\ttype = origType = tmp[ 1 ];\n\t\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\t\n\t\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\t\tif ( !type ) {\n\t\t\t\t\tfor ( type in events ) {\n\t\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\n\t\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\t\thandlers = events[ type ] || [];\n\t\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\t\n\t\t\t\t// Remove matching events\n\t\t\t\torigCount = j = handlers.length;\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\thandleObj = handlers[ j ];\n\t\n\t\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\t\thandlers.splice( j, 1 );\n\t\n\t\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\t\n\t\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tdelete events[ type ];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Remove data and the expando if it's no longer used\n\t\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t\t}\n\t\t},\n\t\n\t\tdispatch: function( nativeEvent ) {\n\t\n\t\t\t// Make a writable jQuery.Event from the native event object\n\t\t\tvar event = jQuery.event.fix( nativeEvent );\n\t\n\t\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\t\targs = new Array( arguments.length ),\n\t\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\t\n\t\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\t\targs[ 0 ] = event;\n\t\n\t\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\t\targs[ i ] = arguments[ i ];\n\t\t\t}\n\t\n\t\t\tevent.delegateTarget = this;\n\t\n\t\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Determine handlers\n\t\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\t\n\t\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\t\ti = 0;\n\t\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\t\tevent.currentTarget = matched.elem;\n\t\n\t\t\t\tj = 0;\n\t\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\t\n\t\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\n\t\n\t\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\t\tevent.data = handleObj.data;\n\t\n\t\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\t\n\t\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Call the postDispatch hook for the mapped type\n\t\t\tif ( special.postDispatch ) {\n\t\t\t\tspecial.postDispatch.call( this, event );\n\t\t\t}\n\t\n\t\t\treturn event.result;\n\t\t},\n\t\n\t\thandlers: function( event, handlers ) {\n\t\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\t\thandlerQueue = [],\n\t\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\t\tcur = event.target;\n\t\n\t\t\t// Find delegate handlers\n\t\t\tif ( delegateCount &&\n\t\n\t\t\t\t// Support: IE <=9\n\t\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\t\tcur.nodeType &&\n\t\n\t\t\t\t// Support: Firefox <=42\n\t\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t\t// Support: IE 11 only\n\t\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\t\n\t\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\t\n\t\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\t\thandleObj = handlers[ i ];\n\t\n\t\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\t\n\t\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Add the remaining (directly-bound) handlers\n\t\t\tcur = this;\n\t\t\tif ( delegateCount < handlers.length ) {\n\t\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t\t}\n\t\n\t\t\treturn handlerQueue;\n\t\t},\n\t\n\t\taddProp: function( name, hook ) {\n\t\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\n\t\t\t\tget: isFunction( hook ) ?\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t\t}\n\t\t\t\t\t} :\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\n\t\t\t\tset: function( value ) {\n\t\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\twritable: true,\n\t\t\t\t\t\tvalue: value\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\n\t\tfix: function( originalEvent ) {\n\t\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\t\toriginalEvent :\n\t\t\t\tnew jQuery.Event( originalEvent );\n\t\t},\n\t\n\t\tspecial: {\n\t\t\tload: {\n\t\n\t\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\t\tnoBubble: true\n\t\t\t},\n\t\t\tfocus: {\n\t\n\t\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\t\ttrigger: function() {\n\t\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\t\tthis.focus();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdelegateType: \"focusin\"\n\t\t\t},\n\t\t\tblur: {\n\t\t\t\ttrigger: function() {\n\t\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\t\tthis.blur();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdelegateType: \"focusout\"\n\t\t\t},\n\t\t\tclick: {\n\t\n\t\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\t\ttrigger: function() {\n\t\t\t\t\tif ( this.type === \"checkbox\" && this.click && nodeName( this, \"input\" ) ) {\n\t\t\t\t\t\tthis.click();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\n\t\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t\t_default: function( event ) {\n\t\t\t\t\treturn nodeName( event.target, \"a\" );\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tbeforeunload: {\n\t\t\t\tpostDispatch: function( event ) {\n\t\n\t\t\t\t\t// Support: Firefox 20+\n\t\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\tjQuery.removeEvent = function( elem, type, handle ) {\n\t\n\t\t// This \"if\" is needed for plain objects\n\t\tif ( elem.removeEventListener ) {\n\t\t\telem.removeEventListener( type, handle );\n\t\t}\n\t};\n\t\n\tjQuery.Event = function( src, props ) {\n\t\n\t\t// Allow instantiation without the 'new' keyword\n\t\tif ( !( this instanceof jQuery.Event ) ) {\n\t\t\treturn new jQuery.Event( src, props );\n\t\t}\n\t\n\t\t// Event object\n\t\tif ( src && src.type ) {\n\t\t\tthis.originalEvent = src;\n\t\t\tthis.type = src.type;\n\t\n\t\t\t// Events bubbling up the document may have been marked as prevented\n\t\t\t// by a handler lower down the tree; reflect the correct value.\n\t\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\t\tsrc.defaultPrevented === undefined &&\n\t\n\t\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\t\tsrc.returnValue === false ?\n\t\t\t\treturnTrue :\n\t\t\t\treturnFalse;\n\t\n\t\t\t// Create target properties\n\t\t\t// Support: Safari <=6 - 7 only\n\t\t\t// Target should not be a text node (#504, #13143)\n\t\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\t\tsrc.target.parentNode :\n\t\t\t\tsrc.target;\n\t\n\t\t\tthis.currentTarget = src.currentTarget;\n\t\t\tthis.relatedTarget = src.relatedTarget;\n\t\n\t\t// Event type\n\t\t} else {\n\t\t\tthis.type = src;\n\t\t}\n\t\n\t\t// Put explicitly provided properties onto the event object\n\t\tif ( props ) {\n\t\t\tjQuery.extend( this, props );\n\t\t}\n\t\n\t\t// Create a timestamp if incoming event doesn't have one\n\t\tthis.timeStamp = src && src.timeStamp || Date.now();\n\t\n\t\t// Mark it as fixed\n\t\tthis[ jQuery.expando ] = true;\n\t};\n\t\n\t// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n\t// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n\tjQuery.Event.prototype = {\n\t\tconstructor: jQuery.Event,\n\t\tisDefaultPrevented: returnFalse,\n\t\tisPropagationStopped: returnFalse,\n\t\tisImmediatePropagationStopped: returnFalse,\n\t\tisSimulated: false,\n\t\n\t\tpreventDefault: function() {\n\t\t\tvar e = this.originalEvent;\n\t\n\t\t\tthis.isDefaultPrevented = returnTrue;\n\t\n\t\t\tif ( e && !this.isSimulated ) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t},\n\t\tstopPropagation: function() {\n\t\t\tvar e = this.originalEvent;\n\t\n\t\t\tthis.isPropagationStopped = returnTrue;\n\t\n\t\t\tif ( e && !this.isSimulated ) {\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t},\n\t\tstopImmediatePropagation: function() {\n\t\t\tvar e = this.originalEvent;\n\t\n\t\t\tthis.isImmediatePropagationStopped = returnTrue;\n\t\n\t\t\tif ( e && !this.isSimulated ) {\n\t\t\t\te.stopImmediatePropagation();\n\t\t\t}\n\t\n\t\t\tthis.stopPropagation();\n\t\t}\n\t};\n\t\n\t// Includes all common event props including KeyEvent and MouseEvent specific props\n\tjQuery.each( {\n\t\taltKey: true,\n\t\tbubbles: true,\n\t\tcancelable: true,\n\t\tchangedTouches: true,\n\t\tctrlKey: true,\n\t\tdetail: true,\n\t\teventPhase: true,\n\t\tmetaKey: true,\n\t\tpageX: true,\n\t\tpageY: true,\n\t\tshiftKey: true,\n\t\tview: true,\n\t\t\"char\": true,\n\t\tcharCode: true,\n\t\tkey: true,\n\t\tkeyCode: true,\n\t\tbutton: true,\n\t\tbuttons: true,\n\t\tclientX: true,\n\t\tclientY: true,\n\t\toffsetX: true,\n\t\toffsetY: true,\n\t\tpointerId: true,\n\t\tpointerType: true,\n\t\tscreenX: true,\n\t\tscreenY: true,\n\t\ttargetTouches: true,\n\t\ttoElement: true,\n\t\ttouches: true,\n\t\n\t\twhich: function( event ) {\n\t\t\tvar button = event.button;\n\t\n\t\t\t// Add which for key events\n\t\t\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\n\t\t\t\treturn event.charCode != null ? event.charCode : event.keyCode;\n\t\t\t}\n\t\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\t\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\n\t\t\t\tif ( button & 1 ) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\n\t\t\t\tif ( button & 2 ) {\n\t\t\t\t\treturn 3;\n\t\t\t\t}\n\t\n\t\t\t\tif ( button & 4 ) {\n\t\t\t\t\treturn 2;\n\t\t\t\t}\n\t\n\t\t\t\treturn 0;\n\t\t\t}\n\t\n\t\t\treturn event.which;\n\t\t}\n\t}, jQuery.event.addProp );\n\t\n\t// Create mouseenter/leave events using mouseover/out and event-time checks\n\t// so that event delegation works in jQuery.\n\t// Do the same for pointerenter/pointerleave and pointerover/pointerout\n\t//\n\t// Support: Safari 7 only\n\t// Safari sends mouseenter too often; see:\n\t// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n\t// for the description of the bug (it existed in older Chrome versions as well).\n\tjQuery.each( {\n\t\tmouseenter: \"mouseover\",\n\t\tmouseleave: \"mouseout\",\n\t\tpointerenter: \"pointerover\",\n\t\tpointerleave: \"pointerout\"\n\t}, function( orig, fix ) {\n\t\tjQuery.event.special[ orig ] = {\n\t\t\tdelegateType: fix,\n\t\t\tbindType: fix,\n\t\n\t\t\thandle: function( event ) {\n\t\t\t\tvar ret,\n\t\t\t\t\ttarget = this,\n\t\t\t\t\trelated = event.relatedTarget,\n\t\t\t\t\thandleObj = event.handleObj;\n\t\n\t\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\t\tevent.type = fix;\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t};\n\t} );\n\t\n\tjQuery.fn.extend( {\n\t\n\t\ton: function( types, selector, data, fn ) {\n\t\t\treturn on( this, types, selector, data, fn );\n\t\t},\n\t\tone: function( types, selector, data, fn ) {\n\t\t\treturn on( this, types, selector, data, fn, 1 );\n\t\t},\n\t\toff: function( types, selector, fn ) {\n\t\t\tvar handleObj, type;\n\t\t\tif ( types && types.preventDefault && types.handleObj ) {\n\t\n\t\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\t\thandleObj = types.handleObj;\n\t\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\t\thandleObj.namespace ?\n\t\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\t\thandleObj.origType,\n\t\t\t\t\thandleObj.selector,\n\t\t\t\t\thandleObj.handler\n\t\t\t\t);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tif ( typeof types === \"object\" ) {\n\t\n\t\t\t\t// ( types-object [, selector] )\n\t\t\t\tfor ( type in types ) {\n\t\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tif ( selector === false || typeof selector === \"function\" ) {\n\t\n\t\t\t\t// ( types [, fn] )\n\t\t\t\tfn = selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t\tif ( fn === false ) {\n\t\t\t\tfn = returnFalse;\n\t\t\t}\n\t\t\treturn this.each( function() {\n\t\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\t\n\tvar\n\t\n\t\t/* eslint-disable max-len */\n\t\n\t\t// See https://github.com/eslint/eslint/issues/3229\n\t\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n\t\n\t\t/* eslint-enable */\n\t\n\t\t// Support: IE <=10 - 11, Edge 12 - 13 only\n\t\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\t\trnoInnerhtml = /<script|<style|<link/i,\n\t\n\t\t// checked=\"checked\" or checked\n\t\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\t\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\t\n\t// Prefer a tbody over its parent table for containing new rows\n\tfunction manipulationTarget( elem, content ) {\n\t\tif ( nodeName( elem, \"table\" ) &&\n\t\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\t\n\t\t\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\n\t\t}\n\t\n\t\treturn elem;\n\t}\n\t\n\t// Replace/restore the type attribute of script elements for safe DOM manipulation\n\tfunction disableScript( elem ) {\n\t\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\t\treturn elem;\n\t}\n\tfunction restoreScript( elem ) {\n\t\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\n\t\t\telem.type = elem.type.slice( 5 );\n\t\t} else {\n\t\t\telem.removeAttribute( \"type\" );\n\t\t}\n\t\n\t\treturn elem;\n\t}\n\t\n\tfunction cloneCopyEvent( src, dest ) {\n\t\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\t\n\t\tif ( dest.nodeType !== 1 ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\t// 1. Copy private data: events, handlers, etc.\n\t\tif ( dataPriv.hasData( src ) ) {\n\t\t\tpdataOld = dataPriv.access( src );\n\t\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\t\tevents = pdataOld.events;\n\t\n\t\t\tif ( events ) {\n\t\t\t\tdelete pdataCur.handle;\n\t\t\t\tpdataCur.events = {};\n\t\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// 2. Copy user data\n\t\tif ( dataUser.hasData( src ) ) {\n\t\t\tudataOld = dataUser.access( src );\n\t\t\tudataCur = jQuery.extend( {}, udataOld );\n\t\n\t\t\tdataUser.set( dest, udataCur );\n\t\t}\n\t}\n\t\n\t// Fix IE bugs, see support tests\n\tfunction fixInput( src, dest ) {\n\t\tvar nodeName = dest.nodeName.toLowerCase();\n\t\n\t\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\t\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\t\tdest.checked = src.checked;\n\t\n\t\t// Fails to return the selected option to the default selected state when cloning options\n\t\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\t\tdest.defaultValue = src.defaultValue;\n\t\t}\n\t}\n\t\n\tfunction domManip( collection, args, callback, ignored ) {\n\t\n\t\t// Flatten any nested arrays\n\t\targs = concat.apply( [], args );\n\t\n\t\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\t\ti = 0,\n\t\t\tl = collection.length,\n\t\t\tiNoClone = l - 1,\n\t\t\tvalue = args[ 0 ],\n\t\t\tvalueIsFunction = isFunction( value );\n\t\n\t\t// We can't cloneNode fragments that contain checked, in WebKit\n\t\tif ( valueIsFunction ||\n\t\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\t\treturn collection.each( function( index ) {\n\t\t\t\tvar self = collection.eq( index );\n\t\t\t\tif ( valueIsFunction ) {\n\t\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t\t}\n\t\t\t\tdomManip( self, args, callback, ignored );\n\t\t\t} );\n\t\t}\n\t\n\t\tif ( l ) {\n\t\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\t\tfirst = fragment.firstChild;\n\t\n\t\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\t\tfragment = first;\n\t\t\t}\n\t\n\t\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\t\tif ( first || ignored ) {\n\t\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\t\thasScripts = scripts.length;\n\t\n\t\t\t\t// Use the original fragment for the last item\n\t\t\t\t// instead of the first because it can end up\n\t\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\tnode = fragment;\n\t\n\t\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\t\n\t\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\t\tif ( hasScripts ) {\n\t\n\t\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t\t}\n\t\n\t\t\t\tif ( hasScripts ) {\n\t\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\t\n\t\t\t\t\t// Reenable scripts\n\t\t\t\t\tjQuery.map( scripts, restoreScript );\n\t\n\t\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\t\n\t\t\t\t\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\n\t\n\t\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), doc, node );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn collection;\n\t}\n\t\n\tfunction remove( elem, selector, keepData ) {\n\t\tvar node,\n\t\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\t\ti = 0;\n\t\n\t\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t\t}\n\t\n\t\t\tif ( node.parentNode ) {\n\t\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\n\t\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t\t}\n\t\t\t\tnode.parentNode.removeChild( node );\n\t\t\t}\n\t\t}\n\t\n\t\treturn elem;\n\t}\n\t\n\tjQuery.extend( {\n\t\thtmlPrefilter: function( html ) {\n\t\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t\t},\n\t\n\t\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\t\tvar i, l, srcElements, destElements,\n\t\t\t\tclone = elem.cloneNode( true ),\n\t\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\t\n\t\t\t// Fix IE cloning issues\n\t\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\t\n\t\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\t\tdestElements = getAll( clone );\n\t\t\t\tsrcElements = getAll( elem );\n\t\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Copy the events from the original to the clone\n\t\t\tif ( dataAndEvents ) {\n\t\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\t\tdestElements = destElements || getAll( clone );\n\t\n\t\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Preserve script evaluation history\n\t\t\tdestElements = getAll( clone, \"script\" );\n\t\t\tif ( destElements.length > 0 ) {\n\t\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t\t}\n\t\n\t\t\t// Return the cloned set\n\t\t\treturn clone;\n\t\t},\n\t\n\t\tcleanData: function( elems ) {\n\t\t\tvar data, elem, type,\n\t\t\t\tspecial = jQuery.event.special,\n\t\t\t\ti = 0;\n\t\n\t\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\t\n\t\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\t\n\t\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} );\n\t\n\tjQuery.fn.extend( {\n\t\tdetach: function( selector ) {\n\t\t\treturn remove( this, selector, true );\n\t\t},\n\t\n\t\tremove: function( selector ) {\n\t\t\treturn remove( this, selector );\n\t\t},\n\t\n\t\ttext: function( value ) {\n\t\t\treturn access( this, function( value ) {\n\t\t\t\treturn value === undefined ?\n\t\t\t\t\tjQuery.text( this ) :\n\t\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t}, null, value, arguments.length );\n\t\t},\n\t\n\t\tappend: function() {\n\t\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\t\ttarget.appendChild( elem );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\n\t\tprepend: function() {\n\t\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\n\t\tbefore: function() {\n\t\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\t\tif ( this.parentNode ) {\n\t\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\n\t\tafter: function() {\n\t\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\t\tif ( this.parentNode ) {\n\t\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\n\t\tempty: function() {\n\t\t\tvar elem,\n\t\t\t\ti = 0;\n\t\n\t\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\n\t\t\t\t\t// Prevent memory leaks\n\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\n\t\t\t\t\t// Remove any remaining nodes\n\t\t\t\t\telem.textContent = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn this;\n\t\t},\n\t\n\t\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\t\n\t\t\treturn this.map( function() {\n\t\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t\t} );\n\t\t},\n\t\n\t\thtml: function( value ) {\n\t\t\treturn access( this, function( value ) {\n\t\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\t\ti = 0,\n\t\t\t\t\tl = this.length;\n\t\n\t\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\t\treturn elem.innerHTML;\n\t\t\t\t}\n\t\n\t\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\t\n\t\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\t\telem = this[ i ] || {};\n\t\n\t\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\telem = 0;\n\t\n\t\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t\t} catch ( e ) {}\n\t\t\t\t}\n\t\n\t\t\t\tif ( elem ) {\n\t\t\t\t\tthis.empty().append( value );\n\t\t\t\t}\n\t\t\t}, null, value, arguments.length );\n\t\t},\n\t\n\t\treplaceWith: function() {\n\t\t\tvar ignored = [];\n\t\n\t\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\t\tvar parent = this.parentNode;\n\t\n\t\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\t\tif ( parent ) {\n\t\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t// Force callback invocation\n\t\t\t}, ignored );\n\t\t}\n\t} );\n\t\n\tjQuery.each( {\n\t\tappendTo: \"append\",\n\t\tprependTo: \"prepend\",\n\t\tinsertBefore: \"before\",\n\t\tinsertAfter: \"after\",\n\t\treplaceAll: \"replaceWith\"\n\t}, function( name, original ) {\n\t\tjQuery.fn[ name ] = function( selector ) {\n\t\t\tvar elems,\n\t\t\t\tret = [],\n\t\t\t\tinsert = jQuery( selector ),\n\t\t\t\tlast = insert.length - 1,\n\t\t\t\ti = 0;\n\t\n\t\t\tfor ( ; i <= last; i++ ) {\n\t\t\t\telems = i === last ? this : this.clone( true );\n\t\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\t\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tpush.apply( ret, elems.get() );\n\t\t\t}\n\t\n\t\t\treturn this.pushStack( ret );\n\t\t};\n\t} );\n\tvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\t\n\tvar getStyles = function( elem ) {\n\t\n\t\t\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n\t\t\t// IE throws on elements created in popups\n\t\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\t\tvar view = elem.ownerDocument.defaultView;\n\t\n\t\t\tif ( !view || !view.opener ) {\n\t\t\t\tview = window;\n\t\t\t}\n\t\n\t\t\treturn view.getComputedStyle( elem );\n\t\t};\n\t\n\tvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\n\t\n\t\n\t\n\t( function() {\n\t\n\t\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t\t// so they're executed at the same time to save the second computation.\n\t\tfunction computeStyleTests() {\n\t\n\t\t\t// This is a singleton, we need to execute it only once\n\t\t\tif ( !div ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\n\t\t\t\t\"margin-top:1px;padding:0;border:0\";\n\t\t\tdiv.style.cssText =\n\t\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\n\t\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\t\"width:60%;top:1%\";\n\t\t\tdocumentElement.appendChild( container ).appendChild( div );\n\t\n\t\t\tvar divStyle = window.getComputedStyle( div );\n\t\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\t\n\t\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\n\t\n\t\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n\t\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\t\tdiv.style.right = \"60%\";\n\t\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\n\t\n\t\t\t// Support: IE 9 - 11 only\n\t\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\n\t\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\n\t\n\t\t\t// Support: IE 9 only\n\t\t\t// Detect overflow:scroll screwiness (gh-3699)\n\t\t\tdiv.style.position = \"absolute\";\n\t\t\tscrollboxSizeVal = div.offsetWidth === 36 || \"absolute\";\n\t\n\t\t\tdocumentElement.removeChild( container );\n\t\n\t\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t\t// it will also be a sign that checks already performed\n\t\t\tdiv = null;\n\t\t}\n\t\n\t\tfunction roundPixelMeasures( measure ) {\n\t\t\treturn Math.round( parseFloat( measure ) );\n\t\t}\n\t\n\t\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\n\t\t\treliableMarginLeftVal,\n\t\t\tcontainer = document.createElement( \"div\" ),\n\t\t\tdiv = document.createElement( \"div\" );\n\t\n\t\t// Finish early in limited (non-browser) environments\n\t\tif ( !div.style ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\t// Support: IE <=9 - 11 only\n\t\t// Style of cloned element affects source element cloned (#8908)\n\t\tdiv.style.backgroundClip = \"content-box\";\n\t\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\t\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\t\n\t\tjQuery.extend( support, {\n\t\t\tboxSizingReliable: function() {\n\t\t\t\tcomputeStyleTests();\n\t\t\t\treturn boxSizingReliableVal;\n\t\t\t},\n\t\t\tpixelBoxStyles: function() {\n\t\t\t\tcomputeStyleTests();\n\t\t\t\treturn pixelBoxStylesVal;\n\t\t\t},\n\t\t\tpixelPosition: function() {\n\t\t\t\tcomputeStyleTests();\n\t\t\t\treturn pixelPositionVal;\n\t\t\t},\n\t\t\treliableMarginLeft: function() {\n\t\t\t\tcomputeStyleTests();\n\t\t\t\treturn reliableMarginLeftVal;\n\t\t\t},\n\t\t\tscrollboxSize: function() {\n\t\t\t\tcomputeStyleTests();\n\t\t\t\treturn scrollboxSizeVal;\n\t\t\t}\n\t\t} );\n\t} )();\n\t\n\t\n\tfunction curCSS( elem, name, computed ) {\n\t\tvar width, minWidth, maxWidth, ret,\n\t\n\t\t\t// Support: Firefox 51+\n\t\t\t// Retrieving style before computed somehow\n\t\t\t// fixes an issue with getting wrong values\n\t\t\t// on detached elements\n\t\t\tstyle = elem.style;\n\t\n\t\tcomputed = computed || getStyles( elem );\n\t\n\t\t// getPropertyValue is needed for:\n\t\t//   .css('filter') (IE 9 only, #12537)\n\t\t//   .css('--customProperty) (#3144)\n\t\tif ( computed ) {\n\t\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\t\n\t\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\t\tret = jQuery.style( elem, name );\n\t\t\t}\n\t\n\t\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t\t// Android Browser returns percentage for some values,\n\t\t\t// but width seems to be reliably pixels.\n\t\t\t// This is against the CSSOM draft spec:\n\t\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\t\n\t\t\t\t// Remember the original values\n\t\t\t\twidth = style.width;\n\t\t\t\tminWidth = style.minWidth;\n\t\t\t\tmaxWidth = style.maxWidth;\n\t\n\t\t\t\t// Put in the new values to get a computed value out\n\t\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\t\tret = computed.width;\n\t\n\t\t\t\t// Revert the changed values\n\t\t\t\tstyle.width = width;\n\t\t\t\tstyle.minWidth = minWidth;\n\t\t\t\tstyle.maxWidth = maxWidth;\n\t\t\t}\n\t\t}\n\t\n\t\treturn ret !== undefined ?\n\t\n\t\t\t// Support: IE <=9 - 11 only\n\t\t\t// IE returns zIndex value as an integer.\n\t\t\tret + \"\" :\n\t\t\tret;\n\t}\n\t\n\t\n\tfunction addGetHookIf( conditionFn, hookFn ) {\n\t\n\t\t// Define the hook, we'll check on the first run if it's really needed.\n\t\treturn {\n\t\t\tget: function() {\n\t\t\t\tif ( conditionFn() ) {\n\t\n\t\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t\t// to missing dependency), remove it.\n\t\t\t\t\tdelete this.get;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t\t}\n\t\t};\n\t}\n\t\n\t\n\tvar\n\t\n\t\t// Swappable if display is none or starts with table\n\t\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\t\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\t\trcustomProp = /^--/,\n\t\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\t\tcssNormalTransform = {\n\t\t\tletterSpacing: \"0\",\n\t\t\tfontWeight: \"400\"\n\t\t},\n\t\n\t\tcssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\t\temptyStyle = document.createElement( \"div\" ).style;\n\t\n\t// Return a css property mapped to a potentially vendor prefixed property\n\tfunction vendorPropName( name ) {\n\t\n\t\t// Shortcut for names that are not vendor prefixed\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t\n\t\t// Check for vendor prefixed names\n\t\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\t\ti = cssPrefixes.length;\n\t\n\t\twhile ( i-- ) {\n\t\t\tname = cssPrefixes[ i ] + capName;\n\t\t\tif ( name in emptyStyle ) {\n\t\t\t\treturn name;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Return a property mapped along what jQuery.cssProps suggests or to\n\t// a vendor prefixed property.\n\tfunction finalPropName( name ) {\n\t\tvar ret = jQuery.cssProps[ name ];\n\t\tif ( !ret ) {\n\t\t\tret = jQuery.cssProps[ name ] = vendorPropName( name ) || name;\n\t\t}\n\t\treturn ret;\n\t}\n\t\n\tfunction setPositiveNumber( elem, value, subtract ) {\n\t\n\t\t// Any relative (+/-) values have already been\n\t\t// normalized at this point\n\t\tvar matches = rcssNum.exec( value );\n\t\treturn matches ?\n\t\n\t\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\t\tvalue;\n\t}\n\t\n\tfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\n\t\tvar i = dimension === \"width\" ? 1 : 0,\n\t\t\textra = 0,\n\t\t\tdelta = 0;\n\t\n\t\t// Adjustment may not be necessary\n\t\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\t\treturn 0;\n\t\t}\n\t\n\t\tfor ( ; i < 4; i += 2 ) {\n\t\n\t\t\t// Both box models exclude margin\n\t\t\tif ( box === \"margin\" ) {\n\t\t\t\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\n\t\t\t}\n\t\n\t\t\t// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\t\t\tif ( !isBorderBox ) {\n\t\n\t\t\t\t// Add padding\n\t\t\t\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\n\t\t\t\t// For \"border\" or \"margin\", add border\n\t\t\t\tif ( box !== \"padding\" ) {\n\t\t\t\t\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\n\t\t\t\t// But still keep track of it otherwise\n\t\t\t\t} else {\n\t\t\t\t\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t\t}\n\t\n\t\t\t// If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n\t\t\t// \"padding\" or \"margin\"\n\t\t\t} else {\n\t\n\t\t\t\t// For \"content\", subtract padding\n\t\t\t\tif ( box === \"content\" ) {\n\t\t\t\t\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t\t}\n\t\n\t\t\t\t// For \"content\" or \"padding\", subtract border\n\t\t\t\tif ( box !== \"margin\" ) {\n\t\t\t\t\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Account for positive content-box scroll gutter when requested by providing computedVal\n\t\tif ( !isBorderBox && computedVal >= 0 ) {\n\t\n\t\t\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n\t\t\t// Assuming integer scroll gutter, subtract the rest and round down\n\t\t\tdelta += Math.max( 0, Math.ceil(\n\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\t\tcomputedVal -\n\t\t\t\tdelta -\n\t\t\t\textra -\n\t\t\t\t0.5\n\t\t\t) );\n\t\t}\n\t\n\t\treturn delta;\n\t}\n\t\n\tfunction getWidthOrHeight( elem, dimension, extra ) {\n\t\n\t\t// Start with computed style\n\t\tvar styles = getStyles( elem ),\n\t\t\tval = curCSS( elem, dimension, styles ),\n\t\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\tvalueIsBorderBox = isBorderBox;\n\t\n\t\t// Support: Firefox <=54\n\t\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\n\t\tif ( rnumnonpx.test( val ) ) {\n\t\t\tif ( !extra ) {\n\t\t\t\treturn val;\n\t\t\t}\n\t\t\tval = \"auto\";\n\t\t}\n\t\n\t\t// Check for style in case a browser which returns unreliable values\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\n\t\tvalueIsBorderBox = valueIsBorderBox &&\n\t\t\t( support.boxSizingReliable() || val === elem.style[ dimension ] );\n\t\n\t\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\n\t\t// This happens for inline elements with no explicit setting (gh-3571)\n\t\t// Support: Android <=4.1 - 4.3 only\n\t\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\t\tif ( val === \"auto\" ||\n\t\t\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) {\n\t\n\t\t\tval = elem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ];\n\t\n\t\t\t// offsetWidth/offsetHeight provide border-box values\n\t\t\tvalueIsBorderBox = true;\n\t\t}\n\t\n\t\t// Normalize \"\" and auto\n\t\tval = parseFloat( val ) || 0;\n\t\n\t\t// Adjust for the element's box model\n\t\treturn ( val +\n\t\t\tboxModelAdjustment(\n\t\t\t\telem,\n\t\t\t\tdimension,\n\t\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\t\tvalueIsBorderBox,\n\t\t\t\tstyles,\n\t\n\t\t\t\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\n\t\t\t\tval\n\t\t\t)\n\t\t) + \"px\";\n\t}\n\t\n\tjQuery.extend( {\n\t\n\t\t// Add in style property hooks for overriding the default\n\t\t// behavior of getting and setting a style property\n\t\tcssHooks: {\n\t\t\topacity: {\n\t\t\t\tget: function( elem, computed ) {\n\t\t\t\t\tif ( computed ) {\n\t\n\t\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t// Don't automatically add \"px\" to these possibly-unitless properties\n\t\tcssNumber: {\n\t\t\t\"animationIterationCount\": true,\n\t\t\t\"columnCount\": true,\n\t\t\t\"fillOpacity\": true,\n\t\t\t\"flexGrow\": true,\n\t\t\t\"flexShrink\": true,\n\t\t\t\"fontWeight\": true,\n\t\t\t\"lineHeight\": true,\n\t\t\t\"opacity\": true,\n\t\t\t\"order\": true,\n\t\t\t\"orphans\": true,\n\t\t\t\"widows\": true,\n\t\t\t\"zIndex\": true,\n\t\t\t\"zoom\": true\n\t\t},\n\t\n\t\t// Add in properties whose names you wish to fix before\n\t\t// setting or getting the value\n\t\tcssProps: {},\n\t\n\t\t// Get and set the style property on a DOM Node\n\t\tstyle: function( elem, name, value, extra ) {\n\t\n\t\t\t// Don't set styles on text and comment nodes\n\t\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Make sure that we're working with the right name\n\t\t\tvar ret, type, hooks,\n\t\t\t\torigName = camelCase( name ),\n\t\t\t\tisCustomProp = rcustomProp.test( name ),\n\t\t\t\tstyle = elem.style;\n\t\n\t\t\t// Make sure that we're working with the right name. We don't\n\t\t\t// want to query the value if it is a CSS custom property\n\t\t\t// since they are user-defined.\n\t\t\tif ( !isCustomProp ) {\n\t\t\t\tname = finalPropName( origName );\n\t\t\t}\n\t\n\t\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\t\n\t\t\t// Check if we're setting a value\n\t\t\tif ( value !== undefined ) {\n\t\t\t\ttype = typeof value;\n\t\n\t\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\t\n\t\t\t\t\t// Fixes bug #9237\n\t\t\t\t\ttype = \"number\";\n\t\t\t\t}\n\t\n\t\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\t\tif ( value == null || value !== value ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\t\tif ( type === \"number\" ) {\n\t\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t\t}\n\t\n\t\t\t\t// background-* props affect original clone's values\n\t\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t\t}\n\t\n\t\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\t\n\t\t\t\t\tif ( isCustomProp ) {\n\t\t\t\t\t\tstyle.setProperty( name, value );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t} else {\n\t\n\t\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\t\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\n\t\t\t\t// Otherwise just get the value from the style object\n\t\t\t\treturn style[ name ];\n\t\t\t}\n\t\t},\n\t\n\t\tcss: function( elem, name, extra, styles ) {\n\t\t\tvar val, num, hooks,\n\t\t\t\torigName = camelCase( name ),\n\t\t\t\tisCustomProp = rcustomProp.test( name );\n\t\n\t\t\t// Make sure that we're working with the right name. We don't\n\t\t\t// want to modify the value if it is a CSS custom property\n\t\t\t// since they are user-defined.\n\t\t\tif ( !isCustomProp ) {\n\t\t\t\tname = finalPropName( origName );\n\t\t\t}\n\t\n\t\t\t// Try prefixed name followed by the unprefixed name\n\t\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\t\n\t\t\t// If a hook was provided get the computed value from there\n\t\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\t\tval = hooks.get( elem, true, extra );\n\t\t\t}\n\t\n\t\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\t\tif ( val === undefined ) {\n\t\t\t\tval = curCSS( elem, name, styles );\n\t\t\t}\n\t\n\t\t\t// Convert \"normal\" to computed value\n\t\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\t\tval = cssNormalTransform[ name ];\n\t\t\t}\n\t\n\t\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\t\tif ( extra === \"\" || extra ) {\n\t\t\t\tnum = parseFloat( val );\n\t\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t\t}\n\t\n\t\t\treturn val;\n\t\t}\n\t} );\n\t\n\tjQuery.each( [ \"height\", \"width\" ], function( i, dimension ) {\n\t\tjQuery.cssHooks[ dimension ] = {\n\t\t\tget: function( elem, computed, extra ) {\n\t\t\t\tif ( computed ) {\n\t\n\t\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\t\n\t\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\t\treturn getWidthOrHeight( elem, dimension, extra );\n\t\t\t\t\t\t\t} ) :\n\t\t\t\t\t\t\tgetWidthOrHeight( elem, dimension, extra );\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tset: function( elem, value, extra ) {\n\t\t\t\tvar matches,\n\t\t\t\t\tstyles = getStyles( elem ),\n\t\t\t\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\tsubtract = extra && boxModelAdjustment(\n\t\t\t\t\t\telem,\n\t\t\t\t\t\tdimension,\n\t\t\t\t\t\textra,\n\t\t\t\t\t\tisBorderBox,\n\t\t\t\t\t\tstyles\n\t\t\t\t\t);\n\t\n\t\t\t\t// Account for unreliable border-box dimensions by comparing offset* to computed and\n\t\t\t\t// faking a content-box to get border and padding (gh-3699)\n\t\t\t\tif ( isBorderBox && support.scrollboxSize() === styles.position ) {\n\t\t\t\t\tsubtract -= Math.ceil(\n\t\t\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\t\t\t\tparseFloat( styles[ dimension ] ) -\n\t\t\t\t\t\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\n\t\t\t\t\t\t0.5\n\t\t\t\t\t);\n\t\t\t\t}\n\t\n\t\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\t\n\t\t\t\t\telem.style[ dimension ] = value;\n\t\t\t\t\tvalue = jQuery.css( elem, dimension );\n\t\t\t\t}\n\t\n\t\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t\t}\n\t\t};\n\t} );\n\t\n\tjQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t\t} )\n\t\t\t\t\t) + \"px\";\n\t\t\t}\n\t\t}\n\t);\n\t\n\t// These hooks are used by animate to expand properties\n\tjQuery.each( {\n\t\tmargin: \"\",\n\t\tpadding: \"\",\n\t\tborder: \"Width\"\n\t}, function( prefix, suffix ) {\n\t\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\t\texpand: function( value ) {\n\t\t\t\tvar i = 0,\n\t\t\t\t\texpanded = {},\n\t\n\t\t\t\t\t// Assumes a single number if not a string\n\t\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\t\n\t\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t\t}\n\t\n\t\t\t\treturn expanded;\n\t\t\t}\n\t\t};\n\t\n\t\tif ( prefix !== \"margin\" ) {\n\t\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t\t}\n\t} );\n\t\n\tjQuery.fn.extend( {\n\t\tcss: function( name, value ) {\n\t\t\treturn access( this, function( elem, name, value ) {\n\t\t\t\tvar styles, len,\n\t\t\t\t\tmap = {},\n\t\t\t\t\ti = 0;\n\t\n\t\t\t\tif ( Array.isArray( name ) ) {\n\t\t\t\t\tstyles = getStyles( elem );\n\t\t\t\t\tlen = name.length;\n\t\n\t\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn map;\n\t\t\t\t}\n\t\n\t\t\t\treturn value !== undefined ?\n\t\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\t\tjQuery.css( elem, name );\n\t\t\t}, name, value, arguments.length > 1 );\n\t\t}\n\t} );\n\t\n\t\n\tfunction Tween( elem, options, prop, end, easing ) {\n\t\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n\t}\n\tjQuery.Tween = Tween;\n\t\n\tTween.prototype = {\n\t\tconstructor: Tween,\n\t\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\t\tthis.elem = elem;\n\t\t\tthis.prop = prop;\n\t\t\tthis.easing = easing || jQuery.easing._default;\n\t\t\tthis.options = options;\n\t\t\tthis.start = this.now = this.cur();\n\t\t\tthis.end = end;\n\t\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t\t},\n\t\tcur: function() {\n\t\t\tvar hooks = Tween.propHooks[ this.prop ];\n\t\n\t\t\treturn hooks && hooks.get ?\n\t\t\t\thooks.get( this ) :\n\t\t\t\tTween.propHooks._default.get( this );\n\t\t},\n\t\trun: function( percent ) {\n\t\t\tvar eased,\n\t\t\t\thooks = Tween.propHooks[ this.prop ];\n\t\n\t\t\tif ( this.options.duration ) {\n\t\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.pos = eased = percent;\n\t\t\t}\n\t\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\t\n\t\t\tif ( this.options.step ) {\n\t\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t\t}\n\t\n\t\t\tif ( hooks && hooks.set ) {\n\t\t\t\thooks.set( this );\n\t\t\t} else {\n\t\t\t\tTween.propHooks._default.set( this );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t};\n\t\n\tTween.prototype.init.prototype = Tween.prototype;\n\t\n\tTween.propHooks = {\n\t\t_default: {\n\t\t\tget: function( tween ) {\n\t\t\t\tvar result;\n\t\n\t\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t\t// or when there is no matching style property that exists.\n\t\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t\t}\n\t\n\t\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\t\n\t\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t\t},\n\t\t\tset: function( tween ) {\n\t\n\t\t\t\t// Use step hook for back compat.\n\t\t\t\t// Use cssHook if its there.\n\t\t\t\t// Use .style if available and use plain properties where available.\n\t\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t\t} else if ( tween.elem.nodeType === 1 &&\n\t\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\n\t\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t\t} else {\n\t\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\t// Support: IE <=9 only\n\t// Panic based approach to setting things on disconnected nodes\n\tTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\t\tset: function( tween ) {\n\t\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t};\n\t\n\tjQuery.easing = {\n\t\tlinear: function( p ) {\n\t\t\treturn p;\n\t\t},\n\t\tswing: function( p ) {\n\t\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t\t},\n\t\t_default: \"swing\"\n\t};\n\t\n\tjQuery.fx = Tween.prototype.init;\n\t\n\t// Back compat <1.8 extension point\n\tjQuery.fx.step = {};\n\t\n\t\n\t\n\t\n\tvar\n\t\tfxNow, inProgress,\n\t\trfxtypes = /^(?:toggle|show|hide)$/,\n\t\trrun = /queueHooks$/;\n\t\n\tfunction schedule() {\n\t\tif ( inProgress ) {\n\t\t\tif ( document.hidden === false && window.requestAnimationFrame ) {\n\t\t\t\twindow.requestAnimationFrame( schedule );\n\t\t\t} else {\n\t\t\t\twindow.setTimeout( schedule, jQuery.fx.interval );\n\t\t\t}\n\t\n\t\t\tjQuery.fx.tick();\n\t\t}\n\t}\n\t\n\t// Animations created synchronously will run synchronously\n\tfunction createFxNow() {\n\t\twindow.setTimeout( function() {\n\t\t\tfxNow = undefined;\n\t\t} );\n\t\treturn ( fxNow = Date.now() );\n\t}\n\t\n\t// Generate parameters to create a standard animation\n\tfunction genFx( type, includeWidth ) {\n\t\tvar which,\n\t\t\ti = 0,\n\t\t\tattrs = { height: type };\n\t\n\t\t// If we include width, step value is 1 to do all cssExpand values,\n\t\t// otherwise step value is 2 to skip over Left and Right\n\t\tincludeWidth = includeWidth ? 1 : 0;\n\t\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\t\twhich = cssExpand[ i ];\n\t\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t\t}\n\t\n\t\tif ( includeWidth ) {\n\t\t\tattrs.opacity = attrs.width = type;\n\t\t}\n\t\n\t\treturn attrs;\n\t}\n\t\n\tfunction createTween( value, prop, animation ) {\n\t\tvar tween,\n\t\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\t\tindex = 0,\n\t\t\tlength = collection.length;\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\t\n\t\t\t\t// We're done with this property\n\t\t\t\treturn tween;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction defaultPrefilter( elem, props, opts ) {\n\t\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\t\tisBox = \"width\" in props || \"height\" in props,\n\t\t\tanim = this,\n\t\t\torig = {},\n\t\t\tstyle = elem.style,\n\t\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\t\n\t\t// Queue-skipping animations hijack the fx hooks\n\t\tif ( !opts.queue ) {\n\t\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\t\tif ( hooks.unqueued == null ) {\n\t\t\t\thooks.unqueued = 0;\n\t\t\t\toldfire = hooks.empty.fire;\n\t\t\t\thooks.empty.fire = function() {\n\t\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\t\toldfire();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\thooks.unqueued++;\n\t\n\t\t\tanim.always( function() {\n\t\n\t\t\t\t// Ensure the complete handler is called before this completes\n\t\t\t\tanim.always( function() {\n\t\t\t\t\thooks.unqueued--;\n\t\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\t\thooks.empty.fire();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t}\n\t\n\t\t// Detect show/hide animations\n\t\tfor ( prop in props ) {\n\t\t\tvalue = props[ prop ];\n\t\t\tif ( rfxtypes.test( value ) ) {\n\t\t\t\tdelete props[ prop ];\n\t\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\t\n\t\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\t\thidden = true;\n\t\n\t\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t\t}\n\t\t}\n\t\n\t\t// Bail out if this is a no-op like .hide().hide()\n\t\tpropTween = !jQuery.isEmptyObject( props );\n\t\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\t// Restrict \"overflow\" and \"display\" styles during box animations\n\t\tif ( isBox && elem.nodeType === 1 ) {\n\t\n\t\t\t// Support: IE <=9 - 11, Edge 12 - 15\n\t\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t\t// from identically-valued overflowX and overflowY and Edge just mirrors\n\t\t\t// the overflowX value there.\n\t\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\t\n\t\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\t\trestoreDisplay = dataShow && dataShow.display;\n\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t\t}\n\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tif ( restoreDisplay ) {\n\t\t\t\t\tdisplay = restoreDisplay;\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Animate inline elements as inline-block\n\t\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\t\n\t\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\t\tif ( !propTween ) {\n\t\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tif ( opts.overflow ) {\n\t\t\tstyle.overflow = \"hidden\";\n\t\t\tanim.always( function() {\n\t\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t\t} );\n\t\t}\n\t\n\t\t// Implement show/hide animations\n\t\tpropTween = false;\n\t\tfor ( prop in orig ) {\n\t\n\t\t\t// General show/hide setup for this element animation\n\t\t\tif ( !propTween ) {\n\t\t\t\tif ( dataShow ) {\n\t\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t\t}\n\t\n\t\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\t\tif ( toggle ) {\n\t\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t\t}\n\t\n\t\t\t\t// Show elements before animating them\n\t\t\t\tif ( hidden ) {\n\t\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\t}\n\t\n\t\t\t\t/* eslint-disable no-loop-func */\n\t\n\t\t\t\tanim.done( function() {\n\t\n\t\t\t\t/* eslint-enable no-loop-func */\n\t\n\t\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\t\tif ( !hidden ) {\n\t\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// Per-property setup\n\t\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\t\tif ( !( prop in dataShow ) ) {\n\t\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\t\tif ( hidden ) {\n\t\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\t\tpropTween.start = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction propFilter( props, specialEasing ) {\n\t\tvar index, name, easing, value, hooks;\n\t\n\t\t// camelCase, specialEasing and expand cssHook pass\n\t\tfor ( index in props ) {\n\t\t\tname = camelCase( index );\n\t\t\teasing = specialEasing[ name ];\n\t\t\tvalue = props[ index ];\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\teasing = value[ 1 ];\n\t\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t\t}\n\t\n\t\t\tif ( index !== name ) {\n\t\t\t\tprops[ name ] = value;\n\t\t\t\tdelete props[ index ];\n\t\t\t}\n\t\n\t\t\thooks = jQuery.cssHooks[ name ];\n\t\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\t\tvalue = hooks.expand( value );\n\t\t\t\tdelete props[ name ];\n\t\n\t\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\t\tfor ( index in value ) {\n\t\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tspecialEasing[ name ] = easing;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction Animation( elem, properties, options ) {\n\t\tvar result,\n\t\t\tstopped,\n\t\t\tindex = 0,\n\t\t\tlength = Animation.prefilters.length,\n\t\t\tdeferred = jQuery.Deferred().always( function() {\n\t\n\t\t\t\t// Don't match elem in the :animated selector\n\t\t\t\tdelete tick.elem;\n\t\t\t} ),\n\t\t\ttick = function() {\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\t\n\t\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\t\tpercent = 1 - temp,\n\t\t\t\t\tindex = 0,\n\t\t\t\t\tlength = animation.tweens.length;\n\t\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t\t}\n\t\n\t\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\t\n\t\t\t\t// If there's more to do, yield\n\t\t\t\tif ( percent < 1 && length ) {\n\t\t\t\t\treturn remaining;\n\t\t\t\t}\n\t\n\t\t\t\t// If this was an empty animation, synthesize a final progress notification\n\t\t\t\tif ( !length ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t}\n\t\n\t\t\t\t// Resolve the animation and report its conclusion\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tanimation = deferred.promise( {\n\t\t\t\telem: elem,\n\t\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\t\topts: jQuery.extend( true, {\n\t\t\t\t\tspecialEasing: {},\n\t\t\t\t\teasing: jQuery.easing._default\n\t\t\t\t}, options ),\n\t\t\t\toriginalProperties: properties,\n\t\t\t\toriginalOptions: options,\n\t\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\t\tduration: options.duration,\n\t\t\t\ttweens: [],\n\t\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\t\treturn tween;\n\t\t\t\t},\n\t\t\t\tstop: function( gotoEnd ) {\n\t\t\t\t\tvar index = 0,\n\t\n\t\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\t\tif ( stopped ) {\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t}\n\t\t\t\t\tstopped = true;\n\t\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t} ),\n\t\t\tprops = animation.props;\n\t\n\t\tpropFilter( props, animation.opts.specialEasing );\n\t\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\t\tif ( result ) {\n\t\t\t\tif ( isFunction( result.stop ) ) {\n\t\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\t\tresult.stop.bind( result );\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\n\t\tjQuery.map( props, createTween, animation );\n\t\n\t\tif ( isFunction( animation.opts.start ) ) {\n\t\t\tanimation.opts.start.call( elem, animation );\n\t\t}\n\t\n\t\t// Attach callbacks from options\n\t\tanimation\n\t\t\t.progress( animation.opts.progress )\n\t\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t\t.fail( animation.opts.fail )\n\t\t\t.always( animation.opts.always );\n\t\n\t\tjQuery.fx.timer(\n\t\t\tjQuery.extend( tick, {\n\t\t\t\telem: elem,\n\t\t\t\tanim: animation,\n\t\t\t\tqueue: animation.opts.queue\n\t\t\t} )\n\t\t);\n\t\n\t\treturn animation;\n\t}\n\t\n\tjQuery.Animation = jQuery.extend( Animation, {\n\t\n\t\ttweeners: {\n\t\t\t\"*\": [ function( prop, value ) {\n\t\t\t\tvar tween = this.createTween( prop, value );\n\t\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\t\treturn tween;\n\t\t\t} ]\n\t\t},\n\t\n\t\ttweener: function( props, callback ) {\n\t\t\tif ( isFunction( props ) ) {\n\t\t\t\tcallback = props;\n\t\t\t\tprops = [ \"*\" ];\n\t\t\t} else {\n\t\t\t\tprops = props.match( rnothtmlwhite );\n\t\t\t}\n\t\n\t\t\tvar prop,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = props.length;\n\t\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tprop = props[ index ];\n\t\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t\t}\n\t\t},\n\t\n\t\tprefilters: [ defaultPrefilter ],\n\t\n\t\tprefilter: function( callback, prepend ) {\n\t\t\tif ( prepend ) {\n\t\t\t\tAnimation.prefilters.unshift( callback );\n\t\t\t} else {\n\t\t\t\tAnimation.prefilters.push( callback );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\tjQuery.speed = function( speed, easing, fn ) {\n\t\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\t\tcomplete: fn || !fn && easing ||\n\t\t\t\tisFunction( speed ) && speed,\n\t\t\tduration: speed,\n\t\t\teasing: fn && easing || easing && !isFunction( easing ) && easing\n\t\t};\n\t\n\t\t// Go to the end state if fx are off\n\t\tif ( jQuery.fx.off ) {\n\t\t\topt.duration = 0;\n\t\n\t\t} else {\n\t\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\t\n\t\t\t\t} else {\n\t\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\t\tif ( opt.queue == null || opt.queue === true ) {\n\t\t\topt.queue = \"fx\";\n\t\t}\n\t\n\t\t// Queueing\n\t\topt.old = opt.complete;\n\t\n\t\topt.complete = function() {\n\t\t\tif ( isFunction( opt.old ) ) {\n\t\t\t\topt.old.call( this );\n\t\t\t}\n\t\n\t\t\tif ( opt.queue ) {\n\t\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t\t}\n\t\t};\n\t\n\t\treturn opt;\n\t};\n\t\n\tjQuery.fn.extend( {\n\t\tfadeTo: function( speed, to, easing, callback ) {\n\t\n\t\t\t// Show any hidden elements after setting opacity to 0\n\t\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\t\n\t\t\t\t// Animate to the value specified\n\t\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t\t},\n\t\tanimate: function( prop, speed, easing, callback ) {\n\t\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\t\tdoAnimation = function() {\n\t\n\t\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\t\n\t\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\t\tanim.stop( true );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tdoAnimation.finish = doAnimation;\n\t\n\t\t\treturn empty || optall.queue === false ?\n\t\t\t\tthis.each( doAnimation ) :\n\t\t\t\tthis.queue( optall.queue, doAnimation );\n\t\t},\n\t\tstop: function( type, clearQueue, gotoEnd ) {\n\t\t\tvar stopQueue = function( hooks ) {\n\t\t\t\tvar stop = hooks.stop;\n\t\t\t\tdelete hooks.stop;\n\t\t\t\tstop( gotoEnd );\n\t\t\t};\n\t\n\t\t\tif ( typeof type !== \"string\" ) {\n\t\t\t\tgotoEnd = clearQueue;\n\t\t\t\tclearQueue = type;\n\t\t\t\ttype = undefined;\n\t\t\t}\n\t\t\tif ( clearQueue && type !== false ) {\n\t\t\t\tthis.queue( type || \"fx\", [] );\n\t\t\t}\n\t\n\t\t\treturn this.each( function() {\n\t\t\t\tvar dequeue = true,\n\t\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\t\ttimers = jQuery.timers,\n\t\t\t\t\tdata = dataPriv.get( this );\n\t\n\t\t\t\tif ( index ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor ( index in data ) {\n\t\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\t\n\t\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\t\tdequeue = false;\n\t\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\tfinish: function( type ) {\n\t\t\tif ( type !== false ) {\n\t\t\t\ttype = type || \"fx\";\n\t\t\t}\n\t\t\treturn this.each( function() {\n\t\t\t\tvar index,\n\t\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\t\ttimers = jQuery.timers,\n\t\t\t\t\tlength = queue ? queue.length : 0;\n\t\n\t\t\t\t// Enable finishing flag on private data\n\t\t\t\tdata.finish = true;\n\t\n\t\t\t\t// Empty the queue first\n\t\t\t\tjQuery.queue( this, type, [] );\n\t\n\t\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\t\thooks.stop.call( this, true );\n\t\t\t\t}\n\t\n\t\t\t\t// Look for any active animations, and finish them\n\t\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Look for any animations in the old queue and finish them\n\t\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Turn off finishing flag\n\t\t\t\tdelete data.finish;\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\tjQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\t\tvar cssFn = jQuery.fn[ name ];\n\t\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\t\tcssFn.apply( this, arguments ) :\n\t\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t\t};\n\t} );\n\t\n\t// Generate shortcuts for custom animations\n\tjQuery.each( {\n\t\tslideDown: genFx( \"show\" ),\n\t\tslideUp: genFx( \"hide\" ),\n\t\tslideToggle: genFx( \"toggle\" ),\n\t\tfadeIn: { opacity: \"show\" },\n\t\tfadeOut: { opacity: \"hide\" },\n\t\tfadeToggle: { opacity: \"toggle\" }\n\t}, function( name, props ) {\n\t\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\t\treturn this.animate( props, speed, easing, callback );\n\t\t};\n\t} );\n\t\n\tjQuery.timers = [];\n\tjQuery.fx.tick = function() {\n\t\tvar timer,\n\t\t\ti = 0,\n\t\t\ttimers = jQuery.timers;\n\t\n\t\tfxNow = Date.now();\n\t\n\t\tfor ( ; i < timers.length; i++ ) {\n\t\t\ttimer = timers[ i ];\n\t\n\t\t\t// Run the timer and safely remove it when done (allowing for external removal)\n\t\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\t\ttimers.splice( i--, 1 );\n\t\t\t}\n\t\t}\n\t\n\t\tif ( !timers.length ) {\n\t\t\tjQuery.fx.stop();\n\t\t}\n\t\tfxNow = undefined;\n\t};\n\t\n\tjQuery.fx.timer = function( timer ) {\n\t\tjQuery.timers.push( timer );\n\t\tjQuery.fx.start();\n\t};\n\t\n\tjQuery.fx.interval = 13;\n\tjQuery.fx.start = function() {\n\t\tif ( inProgress ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tinProgress = true;\n\t\tschedule();\n\t};\n\t\n\tjQuery.fx.stop = function() {\n\t\tinProgress = null;\n\t};\n\t\n\tjQuery.fx.speeds = {\n\t\tslow: 600,\n\t\tfast: 200,\n\t\n\t\t// Default speed\n\t\t_default: 400\n\t};\n\t\n\t\n\t// Based off of the plugin by Clint Helfers, with permission.\n\t// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\n\tjQuery.fn.delay = function( time, type ) {\n\t\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\t\ttype = type || \"fx\";\n\t\n\t\treturn this.queue( type, function( next, hooks ) {\n\t\t\tvar timeout = window.setTimeout( next, time );\n\t\t\thooks.stop = function() {\n\t\t\t\twindow.clearTimeout( timeout );\n\t\t\t};\n\t\t} );\n\t};\n\t\n\t\n\t( function() {\n\t\tvar input = document.createElement( \"input\" ),\n\t\t\tselect = document.createElement( \"select\" ),\n\t\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\t\n\t\tinput.type = \"checkbox\";\n\t\n\t\t// Support: Android <=4.3 only\n\t\t// Default value for a checkbox should be \"on\"\n\t\tsupport.checkOn = input.value !== \"\";\n\t\n\t\t// Support: IE <=11 only\n\t\t// Must access selectedIndex to make default options select\n\t\tsupport.optSelected = opt.selected;\n\t\n\t\t// Support: IE <=11 only\n\t\t// An input loses its value after becoming a radio\n\t\tinput = document.createElement( \"input\" );\n\t\tinput.value = \"t\";\n\t\tinput.type = \"radio\";\n\t\tsupport.radioValue = input.value === \"t\";\n\t} )();\n\t\n\t\n\tvar boolHook,\n\t\tattrHandle = jQuery.expr.attrHandle;\n\t\n\tjQuery.fn.extend( {\n\t\tattr: function( name, value ) {\n\t\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t\t},\n\t\n\t\tremoveAttr: function( name ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tjQuery.removeAttr( this, name );\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\tjQuery.extend( {\n\t\tattr: function( elem, name, value ) {\n\t\t\tvar ret, hooks,\n\t\t\t\tnType = elem.nodeType;\n\t\n\t\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Fallback to prop when attributes are not supported\n\t\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\t\treturn jQuery.prop( elem, name, value );\n\t\t\t}\n\t\n\t\t\t// Attribute hooks are determined by the lowercase version\n\t\t\t// Grab necessary hook if one is defined\n\t\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t\t}\n\t\n\t\t\tif ( value !== undefined ) {\n\t\t\t\tif ( value === null ) {\n\t\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\n\t\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\t\treturn value;\n\t\t\t}\n\t\n\t\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\n\t\t\tret = jQuery.find.attr( elem, name );\n\t\n\t\t\t// Non-existent attributes return null, we normalize to undefined\n\t\t\treturn ret == null ? undefined : ret;\n\t\t},\n\t\n\t\tattrHooks: {\n\t\t\ttype: {\n\t\t\t\tset: function( elem, value ) {\n\t\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\t\tnodeName( elem, \"input\" ) ) {\n\t\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\tremoveAttr: function( elem, value ) {\n\t\t\tvar name,\n\t\t\t\ti = 0,\n\t\n\t\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\t\n\t\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\t\telem.removeAttribute( name );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t// Hooks for boolean attributes\n\tboolHook = {\n\t\tset: function( elem, value, name ) {\n\t\t\tif ( value === false ) {\n\t\n\t\t\t\t// Remove boolean attributes when set to false\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t} else {\n\t\t\t\telem.setAttribute( name, name );\n\t\t\t}\n\t\t\treturn name;\n\t\t}\n\t};\n\t\n\tjQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\t\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\t\n\t\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\t\tvar ret, handle,\n\t\t\t\tlowercaseName = name.toLowerCase();\n\t\n\t\t\tif ( !isXML ) {\n\t\n\t\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\t\tlowercaseName :\n\t\t\t\t\tnull;\n\t\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t\t}\n\t\t\treturn ret;\n\t\t};\n\t} );\n\t\n\t\n\t\n\t\n\tvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\t\trclickable = /^(?:a|area)$/i;\n\t\n\tjQuery.fn.extend( {\n\t\tprop: function( name, value ) {\n\t\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t\t},\n\t\n\t\tremoveProp: function( name ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\tjQuery.extend( {\n\t\tprop: function( elem, name, value ) {\n\t\t\tvar ret, hooks,\n\t\t\t\tnType = elem.nodeType;\n\t\n\t\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\n\t\t\t\t// Fix name and attach hooks\n\t\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\t\thooks = jQuery.propHooks[ name ];\n\t\t\t}\n\t\n\t\t\tif ( value !== undefined ) {\n\t\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\n\t\t\t\treturn ( elem[ name ] = value );\n\t\t\t}\n\t\n\t\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\n\t\t\treturn elem[ name ];\n\t\t},\n\t\n\t\tpropHooks: {\n\t\t\ttabIndex: {\n\t\t\t\tget: function( elem ) {\n\t\n\t\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\t\n\t\t\t\t\tif ( tabindex ) {\n\t\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (\n\t\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\t\telem.href\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\tpropFix: {\n\t\t\t\"for\": \"htmlFor\",\n\t\t\t\"class\": \"className\"\n\t\t}\n\t} );\n\t\n\t// Support: IE <=11 only\n\t// Accessing the selectedIndex property\n\t// forces the browser to respect setting selected\n\t// on the option\n\t// The getter ensures a default option is selected\n\t// when in an optgroup\n\t// eslint rule \"no-unused-expressions\" is disabled for this code\n\t// since it considers such accessions noop\n\tif ( !support.optSelected ) {\n\t\tjQuery.propHooks.selected = {\n\t\t\tget: function( elem ) {\n\t\n\t\t\t\t/* eslint no-unused-expressions: \"off\" */\n\t\n\t\t\t\tvar parent = elem.parentNode;\n\t\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\tset: function( elem ) {\n\t\n\t\t\t\t/* eslint no-unused-expressions: \"off\" */\n\t\n\t\t\t\tvar parent = elem.parentNode;\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.selectedIndex;\n\t\n\t\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t\n\tjQuery.each( [\n\t\t\"tabIndex\",\n\t\t\"readOnly\",\n\t\t\"maxLength\",\n\t\t\"cellSpacing\",\n\t\t\"cellPadding\",\n\t\t\"rowSpan\",\n\t\t\"colSpan\",\n\t\t\"useMap\",\n\t\t\"frameBorder\",\n\t\t\"contentEditable\"\n\t], function() {\n\t\tjQuery.propFix[ this.toLowerCase() ] = this;\n\t} );\n\t\n\t\n\t\n\t\n\t\t// Strip and collapse whitespace according to HTML spec\n\t\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\t\tfunction stripAndCollapse( value ) {\n\t\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\t\treturn tokens.join( \" \" );\n\t\t}\n\t\n\t\n\tfunction getClass( elem ) {\n\t\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n\t}\n\t\n\tfunction classesToArray( value ) {\n\t\tif ( Array.isArray( value ) ) {\n\t\t\treturn value;\n\t\t}\n\t\tif ( typeof value === \"string\" ) {\n\t\t\treturn value.match( rnothtmlwhite ) || [];\n\t\t}\n\t\treturn [];\n\t}\n\t\n\tjQuery.fn.extend( {\n\t\taddClass: function( value ) {\n\t\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\t\ti = 0;\n\t\n\t\t\tif ( isFunction( value ) ) {\n\t\t\t\treturn this.each( function( j ) {\n\t\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\tclasses = classesToArray( value );\n\t\n\t\t\tif ( classes.length ) {\n\t\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\t\tcurValue = getClass( elem );\n\t\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\t\n\t\t\t\t\tif ( cur ) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn this;\n\t\t},\n\t\n\t\tremoveClass: function( value ) {\n\t\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\t\ti = 0;\n\t\n\t\t\tif ( isFunction( value ) ) {\n\t\t\t\treturn this.each( function( j ) {\n\t\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\tif ( !arguments.length ) {\n\t\t\t\treturn this.attr( \"class\", \"\" );\n\t\t\t}\n\t\n\t\t\tclasses = classesToArray( value );\n\t\n\t\t\tif ( classes.length ) {\n\t\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\t\tcurValue = getClass( elem );\n\t\n\t\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\t\n\t\t\t\t\tif ( cur ) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\n\t\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn this;\n\t\t},\n\t\n\t\ttoggleClass: function( value, stateVal ) {\n\t\t\tvar type = typeof value,\n\t\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\n\t\n\t\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\n\t\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t\t}\n\t\n\t\t\tif ( isFunction( value ) ) {\n\t\t\t\treturn this.each( function( i ) {\n\t\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\t\tstateVal\n\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\treturn this.each( function() {\n\t\t\t\tvar className, i, self, classNames;\n\t\n\t\t\t\tif ( isValidValue ) {\n\t\n\t\t\t\t\t// Toggle individual class names\n\t\t\t\t\ti = 0;\n\t\t\t\t\tself = jQuery( this );\n\t\t\t\t\tclassNames = classesToArray( value );\n\t\n\t\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\t\n\t\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t// Toggle whole class name\n\t\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\t\tclassName = getClass( this );\n\t\t\t\t\tif ( className ) {\n\t\n\t\t\t\t\t\t// Store className if set\n\t\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\n\t\thasClass: function( selector ) {\n\t\t\tvar className, elem,\n\t\t\t\ti = 0;\n\t\n\t\t\tclassName = \" \" + selector + \" \";\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn false;\n\t\t}\n\t} );\n\t\n\t\n\t\n\t\n\tvar rreturn = /\\r/g;\n\t\n\tjQuery.fn.extend( {\n\t\tval: function( value ) {\n\t\t\tvar hooks, ret, valueIsFunction,\n\t\t\t\telem = this[ 0 ];\n\t\n\t\t\tif ( !arguments.length ) {\n\t\t\t\tif ( elem ) {\n\t\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\t\n\t\t\t\t\tif ( hooks &&\n\t\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tret = elem.value;\n\t\n\t\t\t\t\t// Handle most common string cases\n\t\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t\t}\n\t\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvalueIsFunction = isFunction( value );\n\t\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tvar val;\n\t\n\t\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tif ( valueIsFunction ) {\n\t\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t\t} else {\n\t\t\t\t\tval = value;\n\t\t\t\t}\n\t\n\t\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\t\tif ( val == null ) {\n\t\t\t\t\tval = \"\";\n\t\n\t\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\t\tval += \"\";\n\t\n\t\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\n\t\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\t\n\t\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\t\tthis.value = val;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\tjQuery.extend( {\n\t\tvalHooks: {\n\t\t\toption: {\n\t\t\t\tget: function( elem ) {\n\t\n\t\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\t\treturn val != null ?\n\t\t\t\t\t\tval :\n\t\n\t\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t\t}\n\t\t\t},\n\t\t\tselect: {\n\t\t\t\tget: function( elem ) {\n\t\t\t\t\tvar value, option, i,\n\t\t\t\t\t\toptions = elem.options,\n\t\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\t\tmax = one ? index + 1 : options.length;\n\t\n\t\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\t\ti = max;\n\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Loop through all the selected options\n\t\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\t\toption = options[ i ];\n\t\n\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\t\n\t\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\t\n\t\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\t\tvalue = jQuery( option ).val();\n\t\n\t\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn values;\n\t\t\t\t},\n\t\n\t\t\t\tset: function( elem, value ) {\n\t\t\t\t\tvar optionSet, option,\n\t\t\t\t\t\toptions = elem.options,\n\t\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\t\ti = options.length;\n\t\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\toption = options[ i ];\n\t\n\t\t\t\t\t\t/* eslint-disable no-cond-assign */\n\t\n\t\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t\t}\n\t\t\t\t\treturn values;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t// Radios and checkboxes getter/setter\n\tjQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\t\tjQuery.valHooks[ this ] = {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tif ( !support.checkOn ) {\n\t\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t\t};\n\t\t}\n\t} );\n\t\n\t\n\t\n\t\n\t// Return jQuery for attributes-only inclusion\n\t\n\t\n\tsupport.focusin = \"onfocusin\" in window;\n\t\n\t\n\tvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\t\tstopPropagationCallback = function( e ) {\n\t\t\te.stopPropagation();\n\t\t};\n\t\n\tjQuery.extend( jQuery.event, {\n\t\n\t\ttrigger: function( event, data, elem, onlyHandlers ) {\n\t\n\t\t\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\n\t\t\t\teventPath = [ elem || document ],\n\t\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\t\n\t\t\tcur = lastElement = tmp = elem = elem || document;\n\t\n\t\t\t// Don't do events on text and comment nodes\n\t\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\t\n\t\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\t\tnamespaces = type.split( \".\" );\n\t\t\t\ttype = namespaces.shift();\n\t\t\t\tnamespaces.sort();\n\t\t\t}\n\t\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\t\n\t\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\t\tevent = event[ jQuery.expando ] ?\n\t\t\t\tevent :\n\t\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\t\n\t\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\t\tevent.namespace = namespaces.join( \".\" );\n\t\t\tevent.rnamespace = event.namespace ?\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\t\tnull;\n\t\n\t\t\t// Clean up the event in case it is being reused\n\t\t\tevent.result = undefined;\n\t\t\tif ( !event.target ) {\n\t\t\t\tevent.target = elem;\n\t\t\t}\n\t\n\t\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\t\tdata = data == null ?\n\t\t\t\t[ event ] :\n\t\t\t\tjQuery.makeArray( data, [ event ] );\n\t\n\t\t\t// Allow special events to draw outside the lines\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\t\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\n\t\n\t\t\t\tbubbleType = special.delegateType || type;\n\t\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\t\tcur = cur.parentNode;\n\t\t\t\t}\n\t\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\t\teventPath.push( cur );\n\t\t\t\t\ttmp = cur;\n\t\t\t\t}\n\t\n\t\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Fire handlers on the event path\n\t\t\ti = 0;\n\t\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\t\tlastElement = cur;\n\t\t\t\tevent.type = i > 1 ?\n\t\t\t\t\tbubbleType :\n\t\t\t\t\tspecial.bindType || type;\n\t\n\t\t\t\t// jQuery handler\n\t\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\t\tif ( handle ) {\n\t\t\t\t\thandle.apply( cur, data );\n\t\t\t\t}\n\t\n\t\t\t\t// Native handler\n\t\t\t\thandle = ontype && cur[ ontype ];\n\t\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tevent.type = type;\n\t\n\t\t\t// If nobody prevented the default action, do it now\n\t\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\t\n\t\t\t\tif ( ( !special._default ||\n\t\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\t\tacceptData( elem ) ) {\n\t\n\t\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\t\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\n\t\n\t\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\t\ttmp = elem[ ontype ];\n\t\n\t\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\t\tjQuery.event.triggered = type;\n\t\n\t\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\t\tlastElement.addEventListener( type, stopPropagationCallback );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\telem[ type ]();\n\t\n\t\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\t\tlastElement.removeEventListener( type, stopPropagationCallback );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tjQuery.event.triggered = undefined;\n\t\n\t\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn event.result;\n\t\t},\n\t\n\t\t// Piggyback on a donor event to simulate a different one\n\t\t// Used only for `focus(in | out)` events\n\t\tsimulate: function( type, elem, event ) {\n\t\t\tvar e = jQuery.extend(\n\t\t\t\tnew jQuery.Event(),\n\t\t\t\tevent,\n\t\t\t\t{\n\t\t\t\t\ttype: type,\n\t\t\t\t\tisSimulated: true\n\t\t\t\t}\n\t\t\t);\n\t\n\t\t\tjQuery.event.trigger( e, null, elem );\n\t\t}\n\t\n\t} );\n\t\n\tjQuery.fn.extend( {\n\t\n\t\ttrigger: function( type, data ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tjQuery.event.trigger( type, data, this );\n\t\t\t} );\n\t\t},\n\t\ttriggerHandler: function( type, data ) {\n\t\t\tvar elem = this[ 0 ];\n\t\t\tif ( elem ) {\n\t\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t\n\t// Support: Firefox <=44\n\t// Firefox doesn't have focus(in | out) events\n\t// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n\t//\n\t// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n\t// focus(in | out) events fire after focus & blur events,\n\t// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n\t// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\n\tif ( !support.focusin ) {\n\t\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\t\n\t\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\t\tvar handler = function( event ) {\n\t\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t\t};\n\t\n\t\t\tjQuery.event.special[ fix ] = {\n\t\t\t\tsetup: function() {\n\t\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\t\n\t\t\t\t\tif ( !attaches ) {\n\t\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t\t},\n\t\t\t\tteardown: function() {\n\t\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\t\n\t\t\t\t\tif ( !attaches ) {\n\t\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\t\tdataPriv.remove( doc, fix );\n\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t} );\n\t}\n\tvar location = window.location;\n\t\n\tvar nonce = Date.now();\n\t\n\tvar rquery = ( /\\?/ );\n\t\n\t\n\t\n\t// Cross-browser xml parsing\n\tjQuery.parseXML = function( data ) {\n\t\tvar xml;\n\t\tif ( !data || typeof data !== \"string\" ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\t// Support: IE 9 - 11 only\n\t\t// IE throws on parseFromString with invalid input.\n\t\ttry {\n\t\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t\t} catch ( e ) {\n\t\t\txml = undefined;\n\t\t}\n\t\n\t\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\t\tjQuery.error( \"Invalid XML: \" + data );\n\t\t}\n\t\treturn xml;\n\t};\n\t\n\t\n\tvar\n\t\trbracket = /\\[\\]$/,\n\t\trCRLF = /\\r?\\n/g,\n\t\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\t\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\t\n\tfunction buildParams( prefix, obj, traditional, add ) {\n\t\tvar name;\n\t\n\t\tif ( Array.isArray( obj ) ) {\n\t\n\t\t\t// Serialize array item.\n\t\t\tjQuery.each( obj, function( i, v ) {\n\t\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\t\n\t\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\t\tadd( prefix, v );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\t\tbuildParams(\n\t\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\t\tv,\n\t\t\t\t\t\ttraditional,\n\t\t\t\t\t\tadd\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t} else if ( !traditional && toType( obj ) === \"object\" ) {\n\t\n\t\t\t// Serialize object item.\n\t\t\tfor ( name in obj ) {\n\t\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t\t}\n\t\n\t\t} else {\n\t\n\t\t\t// Serialize scalar item.\n\t\t\tadd( prefix, obj );\n\t\t}\n\t}\n\t\n\t// Serialize an array of form elements or a set of\n\t// key/values into a query string\n\tjQuery.param = function( a, traditional ) {\n\t\tvar prefix,\n\t\t\ts = [],\n\t\t\tadd = function( key, valueOrFunction ) {\n\t\n\t\t\t\t// If value is a function, invoke it and use its return value\n\t\t\t\tvar value = isFunction( valueOrFunction ) ?\n\t\t\t\t\tvalueOrFunction() :\n\t\t\t\t\tvalueOrFunction;\n\t\n\t\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t\t};\n\t\n\t\t// If an array was passed in, assume that it is an array of form elements.\n\t\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\t\n\t\t\t// Serialize the form elements\n\t\t\tjQuery.each( a, function() {\n\t\t\t\tadd( this.name, this.value );\n\t\t\t} );\n\t\n\t\t} else {\n\t\n\t\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t\t// did it), otherwise encode params recursively.\n\t\t\tfor ( prefix in a ) {\n\t\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t\t}\n\t\t}\n\t\n\t\t// Return the resulting serialization\n\t\treturn s.join( \"&\" );\n\t};\n\t\n\tjQuery.fn.extend( {\n\t\tserialize: function() {\n\t\t\treturn jQuery.param( this.serializeArray() );\n\t\t},\n\t\tserializeArray: function() {\n\t\t\treturn this.map( function() {\n\t\n\t\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t\t} )\n\t\t\t.filter( function() {\n\t\t\t\tvar type = this.type;\n\t\n\t\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t\t} )\n\t\t\t.map( function( i, elem ) {\n\t\t\t\tvar val = jQuery( this ).val();\n\t\n\t\t\t\tif ( val == null ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\n\t\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\n\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t} ).get();\n\t\t}\n\t} );\n\t\n\t\n\tvar\n\t\tr20 = /%20/g,\n\t\trhash = /#.*$/,\n\t\trantiCache = /([?&])_=[^&]*/,\n\t\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\t\n\t\t// #7653, #8125, #8152: local protocol detection\n\t\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\t\trnoContent = /^(?:GET|HEAD)$/,\n\t\trprotocol = /^\\/\\//,\n\t\n\t\t/* Prefilters\n\t\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t\t * 2) These are called:\n\t\t *    - BEFORE asking for a transport\n\t\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t\t * 3) key is the dataType\n\t\t * 4) the catchall symbol \"*\" can be used\n\t\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t\t */\n\t\tprefilters = {},\n\t\n\t\t/* Transports bindings\n\t\t * 1) key is the dataType\n\t\t * 2) the catchall symbol \"*\" can be used\n\t\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t\t */\n\t\ttransports = {},\n\t\n\t\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\t\tallTypes = \"*/\".concat( \"*\" ),\n\t\n\t\t// Anchor tag for parsing the document origin\n\t\toriginAnchor = document.createElement( \"a\" );\n\t\toriginAnchor.href = location.href;\n\t\n\t// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\n\tfunction addToPrefiltersOrTransports( structure ) {\n\t\n\t\t// dataTypeExpression is optional and defaults to \"*\"\n\t\treturn function( dataTypeExpression, func ) {\n\t\n\t\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\t\tfunc = dataTypeExpression;\n\t\t\t\tdataTypeExpression = \"*\";\n\t\t\t}\n\t\n\t\t\tvar dataType,\n\t\t\t\ti = 0,\n\t\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\t\n\t\t\tif ( isFunction( func ) ) {\n\t\n\t\t\t\t// For each dataType in the dataTypeExpression\n\t\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\t\n\t\t\t\t\t// Prepend if requested\n\t\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\t\n\t\t\t\t\t// Otherwise append\n\t\t\t\t\t} else {\n\t\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t\n\t// Base inspection function for prefilters and transports\n\tfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\t\n\t\tvar inspected = {},\n\t\t\tseekingTransport = ( structure === transports );\n\t\n\t\tfunction inspect( dataType ) {\n\t\t\tvar selected;\n\t\t\tinspected[ dataType ] = true;\n\t\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\t\n\t\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\t\treturn false;\n\t\t\t\t} else if ( seekingTransport ) {\n\t\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t\t}\n\t\t\t} );\n\t\t\treturn selected;\n\t\t}\n\t\n\t\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n\t}\n\t\n\t// A special extend for ajax options\n\t// that takes \"flat\" options (not to be deep extended)\n\t// Fixes #9887\n\tfunction ajaxExtend( target, src ) {\n\t\tvar key, deep,\n\t\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\t\n\t\tfor ( key in src ) {\n\t\t\tif ( src[ key ] !== undefined ) {\n\t\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t\t}\n\t\t}\n\t\tif ( deep ) {\n\t\t\tjQuery.extend( true, target, deep );\n\t\t}\n\t\n\t\treturn target;\n\t}\n\t\n\t/* Handles responses to an ajax request:\n\t * - finds the right dataType (mediates between content-type and expected dataType)\n\t * - returns the corresponding response\n\t */\n\tfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\t\n\t\tvar ct, type, finalDataType, firstDataType,\n\t\t\tcontents = s.contents,\n\t\t\tdataTypes = s.dataTypes;\n\t\n\t\t// Remove auto dataType and get content-type in the process\n\t\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\t\tdataTypes.shift();\n\t\t\tif ( ct === undefined ) {\n\t\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t\t}\n\t\t}\n\t\n\t\t// Check if we're dealing with a known content-type\n\t\tif ( ct ) {\n\t\t\tfor ( type in contents ) {\n\t\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\t\tdataTypes.unshift( type );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Check to see if we have a response for the expected dataType\n\t\tif ( dataTypes[ 0 ] in responses ) {\n\t\t\tfinalDataType = dataTypes[ 0 ];\n\t\t} else {\n\t\n\t\t\t// Try convertible dataTypes\n\t\t\tfor ( type in responses ) {\n\t\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\t\tfinalDataType = type;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif ( !firstDataType ) {\n\t\t\t\t\tfirstDataType = type;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Or just use first one\n\t\t\tfinalDataType = finalDataType || firstDataType;\n\t\t}\n\t\n\t\t// If we found a dataType\n\t\t// We add the dataType to the list if needed\n\t\t// and return the corresponding response\n\t\tif ( finalDataType ) {\n\t\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\t\tdataTypes.unshift( finalDataType );\n\t\t\t}\n\t\t\treturn responses[ finalDataType ];\n\t\t}\n\t}\n\t\n\t/* Chain conversions given the request and the original response\n\t * Also sets the responseXXX fields on the jqXHR instance\n\t */\n\tfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\t\tvar conv2, current, conv, tmp, prev,\n\t\t\tconverters = {},\n\t\n\t\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\t\tdataTypes = s.dataTypes.slice();\n\t\n\t\t// Create converters map with lowercased keys\n\t\tif ( dataTypes[ 1 ] ) {\n\t\t\tfor ( conv in s.converters ) {\n\t\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t\t}\n\t\t}\n\t\n\t\tcurrent = dataTypes.shift();\n\t\n\t\t// Convert to each sequential dataType\n\t\twhile ( current ) {\n\t\n\t\t\tif ( s.responseFields[ current ] ) {\n\t\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t\t}\n\t\n\t\t\t// Apply the dataFilter if provided\n\t\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t\t}\n\t\n\t\t\tprev = current;\n\t\t\tcurrent = dataTypes.shift();\n\t\n\t\t\tif ( current ) {\n\t\n\t\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\t\tif ( current === \"*\" ) {\n\t\n\t\t\t\t\tcurrent = prev;\n\t\n\t\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\t\n\t\t\t\t\t// Seek a direct converter\n\t\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\t\n\t\t\t\t\t// If none found, seek a pair\n\t\t\t\t\tif ( !conv ) {\n\t\t\t\t\t\tfor ( conv2 in converters ) {\n\t\n\t\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\t\n\t\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\t\tif ( conv ) {\n\t\n\t\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\t\n\t\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\t\tif ( conv !== true ) {\n\t\n\t\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn { state: \"success\", data: response };\n\t}\n\t\n\tjQuery.extend( {\n\t\n\t\t// Counter for holding the number of active queries\n\t\tactive: 0,\n\t\n\t\t// Last-Modified header cache for next request\n\t\tlastModified: {},\n\t\tetag: {},\n\t\n\t\tajaxSettings: {\n\t\t\turl: location.href,\n\t\t\ttype: \"GET\",\n\t\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\t\tglobal: true,\n\t\t\tprocessData: true,\n\t\t\tasync: true,\n\t\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\t\n\t\t\t/*\n\t\t\ttimeout: 0,\n\t\t\tdata: null,\n\t\t\tdataType: null,\n\t\t\tusername: null,\n\t\t\tpassword: null,\n\t\t\tcache: null,\n\t\t\tthrows: false,\n\t\t\ttraditional: false,\n\t\t\theaders: {},\n\t\t\t*/\n\t\n\t\t\taccepts: {\n\t\t\t\t\"*\": allTypes,\n\t\t\t\ttext: \"text/plain\",\n\t\t\t\thtml: \"text/html\",\n\t\t\t\txml: \"application/xml, text/xml\",\n\t\t\t\tjson: \"application/json, text/javascript\"\n\t\t\t},\n\t\n\t\t\tcontents: {\n\t\t\t\txml: /\\bxml\\b/,\n\t\t\t\thtml: /\\bhtml/,\n\t\t\t\tjson: /\\bjson\\b/\n\t\t\t},\n\t\n\t\t\tresponseFields: {\n\t\t\t\txml: \"responseXML\",\n\t\t\t\ttext: \"responseText\",\n\t\t\t\tjson: \"responseJSON\"\n\t\t\t},\n\t\n\t\t\t// Data converters\n\t\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\t\tconverters: {\n\t\n\t\t\t\t// Convert anything to text\n\t\t\t\t\"* text\": String,\n\t\n\t\t\t\t// Text to html (true = no transformation)\n\t\t\t\t\"text html\": true,\n\t\n\t\t\t\t// Evaluate text as a json expression\n\t\t\t\t\"text json\": JSON.parse,\n\t\n\t\t\t\t// Parse text as xml\n\t\t\t\t\"text xml\": jQuery.parseXML\n\t\t\t},\n\t\n\t\t\t// For options that shouldn't be deep extended:\n\t\t\t// you can add your own custom options here if\n\t\t\t// and when you create one that shouldn't be\n\t\t\t// deep extended (see ajaxExtend)\n\t\t\tflatOptions: {\n\t\t\t\turl: true,\n\t\t\t\tcontext: true\n\t\t\t}\n\t\t},\n\t\n\t\t// Creates a full fledged settings object into target\n\t\t// with both ajaxSettings and settings fields.\n\t\t// If target is omitted, writes into ajaxSettings.\n\t\tajaxSetup: function( target, settings ) {\n\t\t\treturn settings ?\n\t\n\t\t\t\t// Building a settings object\n\t\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\t\n\t\t\t\t// Extending ajaxSettings\n\t\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t\t},\n\t\n\t\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\t\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\t\n\t\t// Main method\n\t\tajax: function( url, options ) {\n\t\n\t\t\t// If url is an object, simulate pre-1.5 signature\n\t\t\tif ( typeof url === \"object\" ) {\n\t\t\t\toptions = url;\n\t\t\t\turl = undefined;\n\t\t\t}\n\t\n\t\t\t// Force options to be an object\n\t\t\toptions = options || {};\n\t\n\t\t\tvar transport,\n\t\n\t\t\t\t// URL without anti-cache param\n\t\t\t\tcacheURL,\n\t\n\t\t\t\t// Response headers\n\t\t\t\tresponseHeadersString,\n\t\t\t\tresponseHeaders,\n\t\n\t\t\t\t// timeout handle\n\t\t\t\ttimeoutTimer,\n\t\n\t\t\t\t// Url cleanup var\n\t\t\t\turlAnchor,\n\t\n\t\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\t\tcompleted,\n\t\n\t\t\t\t// To know if global events are to be dispatched\n\t\t\t\tfireGlobals,\n\t\n\t\t\t\t// Loop variable\n\t\t\t\ti,\n\t\n\t\t\t\t// uncached part of the url\n\t\t\t\tuncached,\n\t\n\t\t\t\t// Create the final options object\n\t\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\t\n\t\t\t\t// Callbacks context\n\t\t\t\tcallbackContext = s.context || s,\n\t\n\t\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\t\tglobalEventContext = s.context &&\n\t\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\t\tjQuery.event,\n\t\n\t\t\t\t// Deferreds\n\t\t\t\tdeferred = jQuery.Deferred(),\n\t\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\t\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode = s.statusCode || {},\n\t\n\t\t\t\t// Headers (they are sent all at once)\n\t\t\t\trequestHeaders = {},\n\t\t\t\trequestHeadersNames = {},\n\t\n\t\t\t\t// Default abort message\n\t\t\t\tstrAbort = \"canceled\",\n\t\n\t\t\t\t// Fake xhr\n\t\t\t\tjqXHR = {\n\t\t\t\t\treadyState: 0,\n\t\n\t\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\t\tvar match;\n\t\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t\t},\n\t\n\t\t\t\t\t// Raw string\n\t\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t\t},\n\t\n\t\t\t\t\t// Caches the header\n\t\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t},\n\t\n\t\t\t\t\t// Overrides response content-type header\n\t\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t},\n\t\n\t\t\t\t\t// Status-dependent callbacks\n\t\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\t\tvar code;\n\t\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\t\tif ( completed ) {\n\t\n\t\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t},\n\t\n\t\t\t\t\t// Cancel the request\n\t\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t// Attach deferreds\n\t\t\tdeferred.promise( jqXHR );\n\t\n\t\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t\t// We also use the url parameter if available\n\t\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\t\n\t\t\t// Alias method option to type as per ticket #12004\n\t\t\ts.type = options.method || options.type || s.method || s.type;\n\t\n\t\t\t// Extract dataTypes list\n\t\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\t\n\t\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\t\tif ( s.crossDomain == null ) {\n\t\t\t\turlAnchor = document.createElement( \"a\" );\n\t\n\t\t\t\t// Support: IE <=8 - 11, Edge 12 - 15\n\t\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t\t// e.g. http://example.com:80x/\n\t\t\t\ttry {\n\t\t\t\t\turlAnchor.href = s.url;\n\t\n\t\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t\t} catch ( e ) {\n\t\n\t\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\t\ts.crossDomain = true;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Convert data if not already a string\n\t\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t\t}\n\t\n\t\t\t// Apply prefilters\n\t\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\t\n\t\t\t// If request was aborted inside a prefilter, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\t\n\t\t\t// We can fire global events as of now if asked to\n\t\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\t\tfireGlobals = jQuery.event && s.global;\n\t\n\t\t\t// Watch for a new set of requests\n\t\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t\t}\n\t\n\t\t\t// Uppercase the type\n\t\t\ts.type = s.type.toUpperCase();\n\t\n\t\t\t// Determine if request has content\n\t\t\ts.hasContent = !rnoContent.test( s.type );\n\t\n\t\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t\t// and/or If-None-Match header later on\n\t\t\t// Remove hash to simplify url manipulation\n\t\t\tcacheURL = s.url.replace( rhash, \"\" );\n\t\n\t\t\t// More options handling for requests with no content\n\t\t\tif ( !s.hasContent ) {\n\t\n\t\t\t\t// Remember the hash so we can put it back\n\t\t\t\tuncached = s.url.slice( cacheURL.length );\n\t\n\t\t\t\t// If data is available and should be processed, append data to url\n\t\t\t\tif ( s.data && ( s.processData || typeof s.data === \"string\" ) ) {\n\t\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\t\n\t\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\t\tdelete s.data;\n\t\t\t\t}\n\t\n\t\t\t\t// Add or update anti-cache param if needed\n\t\t\t\tif ( s.cache === false ) {\n\t\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce++ ) + uncached;\n\t\t\t\t}\n\t\n\t\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\t\ts.url = cacheURL + uncached;\n\t\n\t\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t\t} else if ( s.data && s.processData &&\n\t\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t\t}\n\t\n\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\tif ( s.ifModified ) {\n\t\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t\t}\n\t\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Set the correct header, if data is being sent\n\t\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t\t}\n\t\n\t\t\t// Set the Accepts header for the server, depending on the dataType\n\t\t\tjqXHR.setRequestHeader(\n\t\t\t\t\"Accept\",\n\t\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\t\ts.accepts[ \"*\" ]\n\t\t\t);\n\t\n\t\t\t// Check for headers option\n\t\t\tfor ( i in s.headers ) {\n\t\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t\t}\n\t\n\t\t\t// Allow custom headers/mimetypes and early abort\n\t\t\tif ( s.beforeSend &&\n\t\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\t\n\t\t\t\t// Abort if not done already and return\n\t\t\t\treturn jqXHR.abort();\n\t\t\t}\n\t\n\t\t\t// Aborting is no longer a cancellation\n\t\t\tstrAbort = \"abort\";\n\t\n\t\t\t// Install callbacks on deferreds\n\t\t\tcompleteDeferred.add( s.complete );\n\t\t\tjqXHR.done( s.success );\n\t\t\tjqXHR.fail( s.error );\n\t\n\t\t\t// Get transport\n\t\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\t\n\t\t\t// If no transport, we auto-abort\n\t\t\tif ( !transport ) {\n\t\t\t\tdone( -1, \"No Transport\" );\n\t\t\t} else {\n\t\t\t\tjqXHR.readyState = 1;\n\t\n\t\t\t\t// Send global event\n\t\t\t\tif ( fireGlobals ) {\n\t\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t\t}\n\t\n\t\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\t\tif ( completed ) {\n\t\t\t\t\treturn jqXHR;\n\t\t\t\t}\n\t\n\t\t\t\t// Timeout\n\t\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t\t}, s.timeout );\n\t\t\t\t}\n\t\n\t\t\t\ttry {\n\t\t\t\t\tcompleted = false;\n\t\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t\t} catch ( e ) {\n\t\n\t\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Propagate others as results\n\t\t\t\t\tdone( -1, e );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Callback for when everything is done\n\t\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\t\tstatusText = nativeStatusText;\n\t\n\t\t\t\t// Ignore repeat invocations\n\t\t\t\tif ( completed ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tcompleted = true;\n\t\n\t\t\t\t// Clear timeout if it exists\n\t\t\t\tif ( timeoutTimer ) {\n\t\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t\t}\n\t\n\t\t\t\t// Dereference transport for early garbage collection\n\t\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\t\ttransport = undefined;\n\t\n\t\t\t\t// Cache response headers\n\t\t\t\tresponseHeadersString = headers || \"\";\n\t\n\t\t\t\t// Set readyState\n\t\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\t\n\t\t\t\t// Determine if successful\n\t\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\t\n\t\t\t\t// Get response data\n\t\t\t\tif ( responses ) {\n\t\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t\t}\n\t\n\t\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\t\n\t\t\t\t// If successful, handle type chaining\n\t\t\t\tif ( isSuccess ) {\n\t\n\t\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// if no content\n\t\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\t\tstatusText = \"nocontent\";\n\t\n\t\t\t\t\t// if not modified\n\t\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\t\tstatusText = \"notmodified\";\n\t\n\t\t\t\t\t// If we have data, let's convert it\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\t\terror = response.error;\n\t\t\t\t\t\tisSuccess = !error;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\t\terror = statusText;\n\t\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Set data for the fake xhr object\n\t\t\t\tjqXHR.status = status;\n\t\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\t\n\t\t\t\t// Success/Error\n\t\t\t\tif ( isSuccess ) {\n\t\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t\t}\n\t\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tjqXHR.statusCode( statusCode );\n\t\t\t\tstatusCode = undefined;\n\t\n\t\t\t\tif ( fireGlobals ) {\n\t\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t\t}\n\t\n\t\t\t\t// Complete\n\t\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\t\n\t\t\t\tif ( fireGlobals ) {\n\t\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\t\n\t\t\t\t\t// Handle the global AJAX counter\n\t\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn jqXHR;\n\t\t},\n\t\n\t\tgetJSON: function( url, data, callback ) {\n\t\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t\t},\n\t\n\t\tgetScript: function( url, callback ) {\n\t\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t\t}\n\t} );\n\t\n\tjQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\t\tjQuery[ method ] = function( url, data, callback, type ) {\n\t\n\t\t\t// Shift arguments if data argument was omitted\n\t\t\tif ( isFunction( data ) ) {\n\t\t\t\ttype = type || callback;\n\t\t\t\tcallback = data;\n\t\t\t\tdata = undefined;\n\t\t\t}\n\t\n\t\t\t// The url can be an options object (which then must have .url)\n\t\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\t\turl: url,\n\t\t\t\ttype: method,\n\t\t\t\tdataType: type,\n\t\t\t\tdata: data,\n\t\t\t\tsuccess: callback\n\t\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t\t};\n\t} );\n\t\n\t\n\tjQuery._evalUrl = function( url ) {\n\t\treturn jQuery.ajax( {\n\t\t\turl: url,\n\t\n\t\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\t\ttype: \"GET\",\n\t\t\tdataType: \"script\",\n\t\t\tcache: true,\n\t\t\tasync: false,\n\t\t\tglobal: false,\n\t\t\t\"throws\": true\n\t\t} );\n\t};\n\t\n\t\n\tjQuery.fn.extend( {\n\t\twrapAll: function( html ) {\n\t\t\tvar wrap;\n\t\n\t\t\tif ( this[ 0 ] ) {\n\t\t\t\tif ( isFunction( html ) ) {\n\t\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t\t}\n\t\n\t\t\t\t// The elements to wrap the target around\n\t\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\t\n\t\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t\t}\n\t\n\t\t\t\twrap.map( function() {\n\t\t\t\t\tvar elem = this;\n\t\n\t\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn elem;\n\t\t\t\t} ).append( this );\n\t\t\t}\n\t\n\t\t\treturn this;\n\t\t},\n\t\n\t\twrapInner: function( html ) {\n\t\t\tif ( isFunction( html ) ) {\n\t\t\t\treturn this.each( function( i ) {\n\t\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\treturn this.each( function() {\n\t\t\t\tvar self = jQuery( this ),\n\t\t\t\t\tcontents = self.contents();\n\t\n\t\t\t\tif ( contents.length ) {\n\t\t\t\t\tcontents.wrapAll( html );\n\t\n\t\t\t\t} else {\n\t\t\t\t\tself.append( html );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\n\t\twrap: function( html ) {\n\t\t\tvar htmlIsFunction = isFunction( html );\n\t\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\n\t\t\t} );\n\t\t},\n\t\n\t\tunwrap: function( selector ) {\n\t\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t\t} );\n\t\t\treturn this;\n\t\t}\n\t} );\n\t\n\t\n\tjQuery.expr.pseudos.hidden = function( elem ) {\n\t\treturn !jQuery.expr.pseudos.visible( elem );\n\t};\n\tjQuery.expr.pseudos.visible = function( elem ) {\n\t\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n\t};\n\t\n\t\n\t\n\t\n\tjQuery.ajaxSettings.xhr = function() {\n\t\ttry {\n\t\t\treturn new window.XMLHttpRequest();\n\t\t} catch ( e ) {}\n\t};\n\t\n\tvar xhrSuccessStatus = {\n\t\n\t\t\t// File protocol always yields status code 0, assume 200\n\t\t\t0: 200,\n\t\n\t\t\t// Support: IE <=9 only\n\t\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t\t1223: 204\n\t\t},\n\t\txhrSupported = jQuery.ajaxSettings.xhr();\n\t\n\tsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\n\tsupport.ajax = xhrSupported = !!xhrSupported;\n\t\n\tjQuery.ajaxTransport( function( options ) {\n\t\tvar callback, errorCallback;\n\t\n\t\t// Cross domain only allowed if supported through XMLHttpRequest\n\t\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\t\treturn {\n\t\t\t\tsend: function( headers, complete ) {\n\t\t\t\t\tvar i,\n\t\t\t\t\t\txhr = options.xhr();\n\t\n\t\t\t\t\txhr.open(\n\t\t\t\t\t\toptions.type,\n\t\t\t\t\t\toptions.url,\n\t\t\t\t\t\toptions.async,\n\t\t\t\t\t\toptions.username,\n\t\t\t\t\t\toptions.password\n\t\t\t\t\t);\n\t\n\t\t\t\t\t// Apply custom fields if provided\n\t\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Override mime type if needed\n\t\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// X-Requested-With header\n\t\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Set headers\n\t\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Callback\n\t\t\t\t\tcallback = function( type ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.ontimeout =\n\t\t\t\t\t\t\t\t\t\txhr.onreadystatechange = null;\n\t\n\t\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\t\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tcomplete(\n\t\n\t\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText,\n\t\n\t\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\n\t\t\t\t\t// Listen to events\n\t\t\t\t\txhr.onload = callback();\n\t\t\t\t\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \"error\" );\n\t\n\t\t\t\t\t// Support: IE 9 only\n\t\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t\t// to handle uncaught aborts\n\t\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t\t} else {\n\t\t\t\t\t\txhr.onreadystatechange = function() {\n\t\n\t\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\t\n\t\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Create the abort callback\n\t\t\t\t\tcallback = callback( \"abort\" );\n\t\n\t\t\t\t\ttry {\n\t\n\t\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t\t} catch ( e ) {\n\t\n\t\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\n\t\t\t\tabort: function() {\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} );\n\t\n\t\n\t\n\t\n\t// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\n\tjQuery.ajaxPrefilter( function( s ) {\n\t\tif ( s.crossDomain ) {\n\t\t\ts.contents.script = false;\n\t\t}\n\t} );\n\t\n\t// Install script dataType\n\tjQuery.ajaxSetup( {\n\t\taccepts: {\n\t\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t\t},\n\t\tcontents: {\n\t\t\tscript: /\\b(?:java|ecma)script\\b/\n\t\t},\n\t\tconverters: {\n\t\t\t\"text script\": function( text ) {\n\t\t\t\tjQuery.globalEval( text );\n\t\t\t\treturn text;\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t// Handle cache's special case and crossDomain\n\tjQuery.ajaxPrefilter( \"script\", function( s ) {\n\t\tif ( s.cache === undefined ) {\n\t\t\ts.cache = false;\n\t\t}\n\t\tif ( s.crossDomain ) {\n\t\t\ts.type = \"GET\";\n\t\t}\n\t} );\n\t\n\t// Bind script tag hack transport\n\tjQuery.ajaxTransport( \"script\", function( s ) {\n\t\n\t\t// This transport only deals with cross domain requests\n\t\tif ( s.crossDomain ) {\n\t\t\tvar script, callback;\n\t\t\treturn {\n\t\t\t\tsend: function( _, complete ) {\n\t\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\n\t\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\t\tsrc: s.url\n\t\t\t\t\t} ).on(\n\t\t\t\t\t\t\"load error\",\n\t\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\n\t\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t\t},\n\t\t\t\tabort: function() {\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} );\n\t\n\t\n\t\n\t\n\tvar oldCallbacks = [],\n\t\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\t\n\t// Default jsonp settings\n\tjQuery.ajaxSetup( {\n\t\tjsonp: \"callback\",\n\t\tjsonpCallback: function() {\n\t\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\t\tthis[ callback ] = true;\n\t\t\treturn callback;\n\t\t}\n\t} );\n\t\n\t// Detect, normalize options and install callbacks for jsonp requests\n\tjQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\t\n\t\tvar callbackName, overwritten, responseContainer,\n\t\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\t\"url\" :\n\t\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t\t);\n\t\n\t\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\t\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\t\n\t\t\t// Get callback name, remembering preexisting value associated with it\n\t\t\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\n\t\t\t\ts.jsonpCallback() :\n\t\t\t\ts.jsonpCallback;\n\t\n\t\t\t// Insert callback into url or form data\n\t\t\tif ( jsonProp ) {\n\t\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t\t} else if ( s.jsonp !== false ) {\n\t\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t\t}\n\t\n\t\t\t// Use data converter to retrieve json after script execution\n\t\t\ts.converters[ \"script json\" ] = function() {\n\t\t\t\tif ( !responseContainer ) {\n\t\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t\t}\n\t\t\t\treturn responseContainer[ 0 ];\n\t\t\t};\n\t\n\t\t\t// Force json dataType\n\t\t\ts.dataTypes[ 0 ] = \"json\";\n\t\n\t\t\t// Install callback\n\t\t\toverwritten = window[ callbackName ];\n\t\t\twindow[ callbackName ] = function() {\n\t\t\t\tresponseContainer = arguments;\n\t\t\t};\n\t\n\t\t\t// Clean-up function (fires after converters)\n\t\t\tjqXHR.always( function() {\n\t\n\t\t\t\t// If previous value didn't exist - remove it\n\t\t\t\tif ( overwritten === undefined ) {\n\t\t\t\t\tjQuery( window ).removeProp( callbackName );\n\t\n\t\t\t\t// Otherwise restore preexisting value\n\t\t\t\t} else {\n\t\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t\t}\n\t\n\t\t\t\t// Save back as free\n\t\t\t\tif ( s[ callbackName ] ) {\n\t\n\t\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\t\n\t\t\t\t\t// Save the callback name for future use\n\t\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t\t}\n\t\n\t\t\t\t// Call if it was a function and we have a response\n\t\t\t\tif ( responseContainer && isFunction( overwritten ) ) {\n\t\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t\t}\n\t\n\t\t\t\tresponseContainer = overwritten = undefined;\n\t\t\t} );\n\t\n\t\t\t// Delegate to script\n\t\t\treturn \"script\";\n\t\t}\n\t} );\n\t\n\t\n\t\n\t\n\t// Support: Safari 8 only\n\t// In Safari 8 documents created via document.implementation.createHTMLDocument\n\t// collapse sibling forms: the second one becomes a child of the first one.\n\t// Because of that, this security measure has to be disabled in Safari 8.\n\t// https://bugs.webkit.org/show_bug.cgi?id=137337\n\tsupport.createHTMLDocument = ( function() {\n\t\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\t\tbody.innerHTML = \"<form></form><form></form>\";\n\t\treturn body.childNodes.length === 2;\n\t} )();\n\t\n\t\n\t// Argument \"data\" should be string of html\n\t// context (optional): If specified, the fragment will be created in this context,\n\t// defaults to document\n\t// keepScripts (optional): If true, will include scripts passed in the html string\n\tjQuery.parseHTML = function( data, context, keepScripts ) {\n\t\tif ( typeof data !== \"string\" ) {\n\t\t\treturn [];\n\t\t}\n\t\tif ( typeof context === \"boolean\" ) {\n\t\t\tkeepScripts = context;\n\t\t\tcontext = false;\n\t\t}\n\t\n\t\tvar base, parsed, scripts;\n\t\n\t\tif ( !context ) {\n\t\n\t\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t\t// by using document.implementation\n\t\t\tif ( support.createHTMLDocument ) {\n\t\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\t\n\t\t\t\t// Set the base href for the created document\n\t\t\t\t// so any parsed elements with URLs\n\t\t\t\t// are based on the document's URL (gh-2965)\n\t\t\t\tbase = context.createElement( \"base\" );\n\t\t\t\tbase.href = document.location.href;\n\t\t\t\tcontext.head.appendChild( base );\n\t\t\t} else {\n\t\t\t\tcontext = document;\n\t\t\t}\n\t\t}\n\t\n\t\tparsed = rsingleTag.exec( data );\n\t\tscripts = !keepScripts && [];\n\t\n\t\t// Single tag\n\t\tif ( parsed ) {\n\t\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t\t}\n\t\n\t\tparsed = buildFragment( [ data ], context, scripts );\n\t\n\t\tif ( scripts && scripts.length ) {\n\t\t\tjQuery( scripts ).remove();\n\t\t}\n\t\n\t\treturn jQuery.merge( [], parsed.childNodes );\n\t};\n\t\n\t\n\t/**\n\t * Load a url into a page\n\t */\n\tjQuery.fn.load = function( url, params, callback ) {\n\t\tvar selector, type, response,\n\t\t\tself = this,\n\t\t\toff = url.indexOf( \" \" );\n\t\n\t\tif ( off > -1 ) {\n\t\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\t\turl = url.slice( 0, off );\n\t\t}\n\t\n\t\t// If it's a function\n\t\tif ( isFunction( params ) ) {\n\t\n\t\t\t// We assume that it's the callback\n\t\t\tcallback = params;\n\t\t\tparams = undefined;\n\t\n\t\t// Otherwise, build a param string\n\t\t} else if ( params && typeof params === \"object\" ) {\n\t\t\ttype = \"POST\";\n\t\t}\n\t\n\t\t// If we have elements to modify, make the request\n\t\tif ( self.length > 0 ) {\n\t\t\tjQuery.ajax( {\n\t\t\t\turl: url,\n\t\n\t\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t\t// Make value of this field explicit since\n\t\t\t\t// user can override it through ajaxSetup method\n\t\t\t\ttype: type || \"GET\",\n\t\t\t\tdataType: \"html\",\n\t\t\t\tdata: params\n\t\t\t} ).done( function( responseText ) {\n\t\n\t\t\t\t// Save response for use in complete callback\n\t\t\t\tresponse = arguments;\n\t\n\t\t\t\tself.html( selector ?\n\t\n\t\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\t\n\t\t\t\t\t// Otherwise use the full result\n\t\t\t\t\tresponseText );\n\t\n\t\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t\t// but they are ignored because response was set above.\n\t\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\t\tself.each( function() {\n\t\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t\t} );\n\t\t\t} );\n\t\t}\n\t\n\t\treturn this;\n\t};\n\t\n\t\n\t\n\t\n\t// Attach a bunch of functions for handling common AJAX events\n\tjQuery.each( [\n\t\t\"ajaxStart\",\n\t\t\"ajaxStop\",\n\t\t\"ajaxComplete\",\n\t\t\"ajaxError\",\n\t\t\"ajaxSuccess\",\n\t\t\"ajaxSend\"\n\t], function( i, type ) {\n\t\tjQuery.fn[ type ] = function( fn ) {\n\t\t\treturn this.on( type, fn );\n\t\t};\n\t} );\n\t\n\t\n\t\n\t\n\tjQuery.expr.pseudos.animated = function( elem ) {\n\t\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\t\treturn elem === fn.elem;\n\t\t} ).length;\n\t};\n\t\n\t\n\t\n\t\n\tjQuery.offset = {\n\t\tsetOffset: function( elem, options, i ) {\n\t\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\t\tcurElem = jQuery( elem ),\n\t\t\t\tprops = {};\n\t\n\t\t\t// Set position first, in-case top/left are set even on static elem\n\t\t\tif ( position === \"static\" ) {\n\t\t\t\telem.style.position = \"relative\";\n\t\t\t}\n\t\n\t\t\tcurOffset = curElem.offset();\n\t\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\t\n\t\t\t// Need to be able to calculate position if either\n\t\t\t// top or left is auto and position is either absolute or fixed\n\t\t\tif ( calculatePosition ) {\n\t\t\t\tcurPosition = curElem.position();\n\t\t\t\tcurTop = curPosition.top;\n\t\t\t\tcurLeft = curPosition.left;\n\t\n\t\t\t} else {\n\t\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t\t}\n\t\n\t\t\tif ( isFunction( options ) ) {\n\t\n\t\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t\t}\n\t\n\t\t\tif ( options.top != null ) {\n\t\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t\t}\n\t\t\tif ( options.left != null ) {\n\t\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t\t}\n\t\n\t\t\tif ( \"using\" in options ) {\n\t\t\t\toptions.using.call( elem, props );\n\t\n\t\t\t} else {\n\t\t\t\tcurElem.css( props );\n\t\t\t}\n\t\t}\n\t};\n\t\n\tjQuery.fn.extend( {\n\t\n\t\t// offset() relates an element's border box to the document origin\n\t\toffset: function( options ) {\n\t\n\t\t\t// Preserve chaining for setter\n\t\t\tif ( arguments.length ) {\n\t\t\t\treturn options === undefined ?\n\t\t\t\t\tthis :\n\t\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\tvar rect, win,\n\t\t\t\telem = this[ 0 ];\n\t\n\t\t\tif ( !elem ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n\t\t\t// Support: IE <=11 only\n\t\t\t// Running getBoundingClientRect on a\n\t\t\t// disconnected node in IE throws an error\n\t\t\tif ( !elem.getClientRects().length ) {\n\t\t\t\treturn { top: 0, left: 0 };\n\t\t\t}\n\t\n\t\t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\t\t\trect = elem.getBoundingClientRect();\n\t\t\twin = elem.ownerDocument.defaultView;\n\t\t\treturn {\n\t\t\t\ttop: rect.top + win.pageYOffset,\n\t\t\t\tleft: rect.left + win.pageXOffset\n\t\t\t};\n\t\t},\n\t\n\t\t// position() relates an element's margin box to its offset parent's padding box\n\t\t// This corresponds to the behavior of CSS absolute positioning\n\t\tposition: function() {\n\t\t\tif ( !this[ 0 ] ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar offsetParent, offset, doc,\n\t\t\t\telem = this[ 0 ],\n\t\t\t\tparentOffset = { top: 0, left: 0 };\n\t\n\t\t\t// position:fixed elements are offset from the viewport, which itself always has zero offset\n\t\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\t\n\t\t\t\t// Assume position:fixed implies availability of getBoundingClientRect\n\t\t\t\toffset = elem.getBoundingClientRect();\n\t\n\t\t\t} else {\n\t\t\t\toffset = this.offset();\n\t\n\t\t\t\t// Account for the *real* offset parent, which can be the document or its root element\n\t\t\t\t// when a statically positioned element is identified\n\t\t\t\tdoc = elem.ownerDocument;\n\t\t\t\toffsetParent = elem.offsetParent || doc.documentElement;\n\t\t\t\twhile ( offsetParent &&\n\t\t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\n\t\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\n\t\t\t\t\toffsetParent = offsetParent.parentNode;\n\t\t\t\t}\n\t\t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\n\t\n\t\t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\n\t\t\t\t\tparentOffset = jQuery( offsetParent ).offset();\n\t\t\t\t\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\n\t\t\t\t\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Subtract parent offsets and element margins\n\t\t\treturn {\n\t\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t\t};\n\t\t},\n\t\n\t\t// This method will return documentElement in the following cases:\n\t\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t\t//    documentElement of the parent window\n\t\t// 2) For the hidden or detached element\n\t\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t\t//\n\t\t// but those exceptions were never presented as a real life use-cases\n\t\t// and might be considered as more preferable results.\n\t\t//\n\t\t// This logic, however, is not guaranteed and can change at any point in the future\n\t\toffsetParent: function() {\n\t\t\treturn this.map( function() {\n\t\t\t\tvar offsetParent = this.offsetParent;\n\t\n\t\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t\t}\n\t\n\t\t\t\treturn offsetParent || documentElement;\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\t// Create scrollLeft and scrollTop methods\n\tjQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\t\tvar top = \"pageYOffset\" === prop;\n\t\n\t\tjQuery.fn[ method ] = function( val ) {\n\t\t\treturn access( this, function( elem, method, val ) {\n\t\n\t\t\t\t// Coalesce documents and windows\n\t\t\t\tvar win;\n\t\t\t\tif ( isWindow( elem ) ) {\n\t\t\t\t\twin = elem;\n\t\t\t\t} else if ( elem.nodeType === 9 ) {\n\t\t\t\t\twin = elem.defaultView;\n\t\t\t\t}\n\t\n\t\t\t\tif ( val === undefined ) {\n\t\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t\t}\n\t\n\t\t\t\tif ( win ) {\n\t\t\t\t\twin.scrollTo(\n\t\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t\t);\n\t\n\t\t\t\t} else {\n\t\t\t\t\telem[ method ] = val;\n\t\t\t\t}\n\t\t\t}, method, val, arguments.length );\n\t\t};\n\t} );\n\t\n\t// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n\t// Add the top/left cssHooks using jQuery.fn.position\n\t// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n\t// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n\t// getComputedStyle returns percent when specified for top/left/bottom/right;\n\t// rather than make the css module depend on the offset module, just check for it here\n\tjQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\t\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\t\tfunction( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\t\t\t\t\tcomputed = curCSS( elem, prop );\n\t\n\t\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\t\tcomputed;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t} );\n\t\n\t\n\t// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\n\tjQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\t\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\t\tfunction( defaultExtra, funcName ) {\n\t\n\t\t\t// Margin is only for outerHeight, outerWidth\n\t\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\t\n\t\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\t\tvar doc;\n\t\n\t\t\t\t\tif ( isWindow( elem ) ) {\n\t\n\t\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Get document width or height\n\t\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\t\tdoc = elem.documentElement;\n\t\n\t\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t\t// whichever is greatest\n\t\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn value === undefined ?\n\t\n\t\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\t\n\t\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t\t};\n\t\t} );\n\t} );\n\t\n\t\n\tjQuery.each( ( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\t\tfunction( i, name ) {\n\t\n\t\t// Handle event binding\n\t\tjQuery.fn[ name ] = function( data, fn ) {\n\t\t\treturn arguments.length > 0 ?\n\t\t\t\tthis.on( name, null, data, fn ) :\n\t\t\t\tthis.trigger( name );\n\t\t};\n\t} );\n\t\n\tjQuery.fn.extend( {\n\t\thover: function( fnOver, fnOut ) {\n\t\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t\t}\n\t} );\n\t\n\t\n\t\n\t\n\tjQuery.fn.extend( {\n\t\n\t\tbind: function( types, data, fn ) {\n\t\t\treturn this.on( types, null, data, fn );\n\t\t},\n\t\tunbind: function( types, fn ) {\n\t\t\treturn this.off( types, null, fn );\n\t\t},\n\t\n\t\tdelegate: function( selector, types, data, fn ) {\n\t\t\treturn this.on( types, selector, data, fn );\n\t\t},\n\t\tundelegate: function( selector, types, fn ) {\n\t\n\t\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\t\treturn arguments.length === 1 ?\n\t\t\t\tthis.off( selector, \"**\" ) :\n\t\t\t\tthis.off( types, selector || \"**\", fn );\n\t\t}\n\t} );\n\t\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\t// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n\t// However, it is not slated for removal any time soon\n\tjQuery.proxy = function( fn, context ) {\n\t\tvar tmp, args, proxy;\n\t\n\t\tif ( typeof context === \"string\" ) {\n\t\t\ttmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\t\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\t\n\t\t// Simulated bind\n\t\targs = slice.call( arguments, 2 );\n\t\tproxy = function() {\n\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t\t};\n\t\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\t\n\t\treturn proxy;\n\t};\n\t\n\tjQuery.holdReady = function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t};\n\tjQuery.isArray = Array.isArray;\n\tjQuery.parseJSON = JSON.parse;\n\tjQuery.nodeName = nodeName;\n\tjQuery.isFunction = isFunction;\n\tjQuery.isWindow = isWindow;\n\tjQuery.camelCase = camelCase;\n\tjQuery.type = toType;\n\t\n\tjQuery.now = Date.now;\n\t\n\tjQuery.isNumeric = function( obj ) {\n\t\n\t\t// As of jQuery 3.0, isNumeric is limited to\n\t\t// strings and numbers (primitives or objects)\n\t\t// that can be coerced to finite numbers (gh-2662)\n\t\tvar type = jQuery.type( obj );\n\t\treturn ( type === \"number\" || type === \"string\" ) &&\n\t\n\t\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t\t// subtraction forces infinities to NaN\n\t\t\t!isNaN( obj - parseFloat( obj ) );\n\t};\n\t\n\t\n\t\n\t\n\t// Register as a named AMD module, since jQuery can be concatenated with other\n\t// files that may use define, but not via a proper concatenation script that\n\t// understands anonymous AMD modules. A named AMD is safest and most robust\n\t// way to register. Lowercase jquery is used because AMD module names are\n\t// derived from file names, and jQuery is normally delivered in a lowercase\n\t// file name. Do this after creating the global so that if an AMD module wants\n\t// to call noConflict to hide this version of jQuery, it will work.\n\t\n\t// Note that for maximum portability, libraries that are not jQuery should\n\t// declare themselves as anonymous modules, and avoid setting a global if an\n\t// AMD loader is present. jQuery is a special case. For more information, see\n\t// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\t\n\tif ( true ) {\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\treturn jQuery;\n\t\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\n\t\n\t\n\t\n\t\n\tvar\n\t\n\t\t// Map over jQuery in case of overwrite\n\t\t_jQuery = window.jQuery,\n\t\n\t\t// Map over the $ in case of overwrite\n\t\t_$ = window.$;\n\t\n\tjQuery.noConflict = function( deep ) {\n\t\tif ( window.$ === jQuery ) {\n\t\t\twindow.$ = _$;\n\t\t}\n\t\n\t\tif ( deep && window.jQuery === jQuery ) {\n\t\t\twindow.jQuery = _jQuery;\n\t\t}\n\t\n\t\treturn jQuery;\n\t};\n\t\n\t// Expose jQuery and $ identifiers, even in AMD\n\t// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n\t// and CommonJS for browser emulators (#13566)\n\tif ( !noGlobal ) {\n\t\twindow.jQuery = window.$ = jQuery;\n\t}\n\t\n\t\n\t\n\t\n\treturn jQuery;\n\t} );\n\n\n/***/ }),\n\n/***/ 392:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**!\n\t * MixItUp v3.2.2\n\t * A high-performance, dependency-free library for animated filtering, sorting and more\n\t * Build 20a1a182-d7bd-4c8f-807d-b888e325e44d\n\t *\n\t * @copyright Copyright 2014-2017 KunkaLabs Limited.\n\t * @author    KunkaLabs Limited.\n\t * @link      https://www.kunkalabs.com/mixitup/\n\t *\n\t * @license   Commercial use requires a commercial license.\n\t *            https://www.kunkalabs.com/mixitup/licenses/\n\t *\n\t *            Non-commercial use permitted under same terms as CC BY-NC 3.0 license.\n\t *            http://creativecommons.org/licenses/by-nc/3.0/\n\t */\n\t\n\t(function(window) {\n\t    'use strict';\n\t\n\t    var mixitup = null,\n\t        h       = null;\n\t\n\t    (function() {\n\t        var VENDORS = ['webkit', 'moz', 'o', 'ms'],\n\t            canary  = window.document.createElement('div'),\n\t            i       = -1;\n\t\n\t        // window.requestAnimationFrame\n\t\n\t        for (i = 0; i < VENDORS.length && !window.requestAnimationFrame; i++) {\n\t            window.requestAnimationFrame = window[VENDORS[i] + 'RequestAnimationFrame'];\n\t        }\n\t\n\t        // Element.nextElementSibling\n\t\n\t        if (typeof canary.nextElementSibling === 'undefined') {\n\t            Object.defineProperty(window.Element.prototype, 'nextElementSibling', {\n\t                get: function() {\n\t                    var el = this.nextSibling;\n\t\n\t                    while (el) {\n\t                        if (el.nodeType === 1) {\n\t                            return el;\n\t                        }\n\t\n\t                        el = el.nextSibling;\n\t                    }\n\t\n\t                    return null;\n\t                }\n\t            });\n\t        }\n\t\n\t        // Element.matches\n\t\n\t        (function(ElementPrototype) {\n\t            ElementPrototype.matches =\n\t                ElementPrototype.matches ||\n\t                ElementPrototype.machesSelector ||\n\t                ElementPrototype.mozMatchesSelector ||\n\t                ElementPrototype.msMatchesSelector ||\n\t                ElementPrototype.oMatchesSelector ||\n\t                ElementPrototype.webkitMatchesSelector ||\n\t                function (selector) {\n\t                    return Array.prototype.indexOf.call(this.parentElement.querySelectorAll(selector), this) > -1;\n\t                };\n\t        })(window.Element.prototype);\n\t\n\t        // Object.keys\n\t        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n\t\n\t        if (!Object.keys) {\n\t            Object.keys = (function() {\n\t                var hasOwnProperty      = Object.prototype.hasOwnProperty,\n\t                    hasDontEnumBug      = false,\n\t                    dontEnums           = [],\n\t                    dontEnumsLength     = -1;\n\t\n\t                hasDontEnumBug = !({\n\t                    toString: null\n\t                })\n\t                    .propertyIsEnumerable('toString');\n\t\n\t                dontEnums = [\n\t                    'toString',\n\t                    'toLocaleString',\n\t                    'valueOf',\n\t                    'hasOwnProperty',\n\t                    'isPrototypeOf',\n\t                    'propertyIsEnumerable',\n\t                    'constructor'\n\t                ];\n\t\n\t                dontEnumsLength = dontEnums.length;\n\t\n\t                return function(obj) {\n\t                    var result  = [],\n\t                        prop    = '',\n\t                        i       = -1;\n\t\n\t                    if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\n\t                        throw new TypeError('Object.keys called on non-object');\n\t                    }\n\t\n\t                    for (prop in obj) {\n\t                        if (hasOwnProperty.call(obj, prop)) {\n\t                            result.push(prop);\n\t                        }\n\t                    }\n\t\n\t                    if (hasDontEnumBug) {\n\t                        for (i = 0; i < dontEnumsLength; i++) {\n\t                            if (hasOwnProperty.call(obj, dontEnums[i])) {\n\t                                result.push(dontEnums[i]);\n\t                            }\n\t                        }\n\t                    }\n\t\n\t                    return result;\n\t                };\n\t            }());\n\t        }\n\t\n\t        // Array.isArray\n\t        // https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\n\t\n\t        if (!Array.isArray) {\n\t            Array.isArray = function(arg) {\n\t                return Object.prototype.toString.call(arg) === '[object Array]';\n\t            };\n\t        }\n\t\n\t        // Object.create\n\t        // https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n\t\n\t        if (typeof Object.create !== 'function') {\n\t            Object.create = (function(undefined) {\n\t                var Temp = function() {};\n\t\n\t                return function (prototype, propertiesObject) {\n\t                    if (prototype !== Object(prototype) && prototype !== null) {\n\t                        throw TypeError('Argument must be an object, or null');\n\t                    }\n\t\n\t                    Temp.prototype = prototype || {};\n\t\n\t                    var result = new Temp();\n\t\n\t                    Temp.prototype = null;\n\t\n\t                    if (propertiesObject !== undefined) {\n\t                        Object.defineProperties(result, propertiesObject);\n\t                    }\n\t\n\t                    if (prototype === null) {\n\t                        /* jshint ignore:start */\n\t                        result.__proto__ = null;\n\t                        /* jshint ignore:end */\n\t                    }\n\t\n\t                    return result;\n\t                };\n\t            })();\n\t        }\n\t\n\t        // String.prototyoe.trim\n\t\n\t        if (!String.prototype.trim) {\n\t            String.prototype.trim = function() {\n\t                return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\t            };\n\t        }\n\t\n\t        // Array.prototype.indexOf\n\t        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\n\t\n\t        if (!Array.prototype.indexOf) {\n\t            Array.prototype.indexOf = function(searchElement) {\n\t                var n, k, t, len;\n\t\n\t                if (this === null) {\n\t                    throw new TypeError();\n\t                }\n\t\n\t                t = Object(this);\n\t\n\t                len = t.length >>> 0;\n\t\n\t                if (len === 0) {\n\t                    return -1;\n\t                }\n\t\n\t                n = 0;\n\t\n\t                if (arguments.length > 1) {\n\t                    n = Number(arguments[1]);\n\t\n\t                    if (n !== n) {\n\t                        n = 0;\n\t                    } else if (n !== 0 && n !== Infinity && n !== -Infinity) {\n\t                        n = (n > 0 || -1) * Math.floor(Math.abs(n));\n\t                    }\n\t                }\n\t\n\t                if (n >= len) {\n\t                    return -1;\n\t                }\n\t\n\t                for (k = n >= 0 ? n : Math.max(len - Math.abs(n), 0); k < len; k++) {\n\t                    if (k in t && t[k] === searchElement) {\n\t                        return k;\n\t                    }\n\t                }\n\t\n\t                return -1;\n\t            };\n\t        }\n\t\n\t        // Function.prototype.bind\n\t        // https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_objects/Function/bind\n\t\n\t        if (!Function.prototype.bind) {\n\t            Function.prototype.bind = function(oThis) {\n\t                var aArgs, self, FNOP, fBound;\n\t\n\t                if (typeof this !== 'function') {\n\t                    throw new TypeError();\n\t                }\n\t\n\t                aArgs = Array.prototype.slice.call(arguments, 1);\n\t\n\t                self = this;\n\t\n\t                FNOP = function() {};\n\t\n\t                fBound = function() {\n\t                    return self.apply(this instanceof FNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n\t                };\n\t\n\t                if (this.prototype) {\n\t                    FNOP.prototype = this.prototype;\n\t                }\n\t\n\t                fBound.prototype = new FNOP();\n\t\n\t                return fBound;\n\t            };\n\t        }\n\t\n\t        // Element.prototype.dispatchEvent\n\t\n\t        if (!window.Element.prototype.dispatchEvent) {\n\t            window.Element.prototype.dispatchEvent = function(event) {\n\t                try {\n\t                    return this.fireEvent('on' + event.type, event);\n\t                } catch (err) {}\n\t            };\n\t        }\n\t    })();\n\t\n\t    /**\n\t     * The `mixitup()` \"factory\" function creates and returns individual instances\n\t     * of MixItUp, known as \"mixers\", on which API methods can be called.\n\t     *\n\t     * When loading MixItUp via a script tag, the factory function is accessed\n\t     * via the global variable `mixitup`. When using a module loading\n\t     * system (e.g. ES2015, CommonJS, RequireJS), the factory function is\n\t     * exported into your module when you require the MixItUp library.\n\t     *\n\t     * @example\n\t     * mixitup(container [,config] [,foreignDoc])\n\t     *\n\t     * @example <caption>Example 1: Creating a mixer instance with an element reference</caption>\n\t     * var containerEl = document.querySelector('.container');\n\t     *\n\t     * var mixer = mixitup(containerEl);\n\t     *\n\t     * @example <caption>Example 2: Creating a mixer instance with a selector string</caption>\n\t     * var mixer = mixitup('.container');\n\t     *\n\t     * @example <caption>Example 3: Passing a configuration object</caption>\n\t     * var mixer = mixitup(containerEl, {\n\t     *     animation: {\n\t     *         effects: 'fade scale(0.5)'\n\t     *     }\n\t     * });\n\t     *\n\t     * @example <caption>Example 4: Passing an iframe reference</caption>\n\t     * var mixer = mixitup(containerEl, config, foreignDocument);\n\t     *\n\t     * @global\n\t     * @namespace\n\t     * @public\n\t     * @kind        function\n\t     * @since       3.0.0\n\t     * @param       {(Element|string)}  container\n\t     *      A DOM element or selector string representing the container(s) on which to instantiate MixItUp.\n\t     * @param       {object}            [config]\n\t     *      An optional \"configuration object\" used to customize the behavior of the MixItUp instance.\n\t     * @param       {object}            [foreignDoc]\n\t     *      An optional reference to a `document`, which can be used to control a MixItUp instance in an iframe.\n\t     * @return      {mixitup.Mixer}\n\t     *      A \"mixer\" object holding the MixItUp instance.\n\t     */\n\t\n\t    mixitup = function(container, config, foreignDoc) {\n\t        var el                  = null,\n\t            returnCollection    = false,\n\t            instance            = null,\n\t            facade              = null,\n\t            doc                 = null,\n\t            output              = null,\n\t            instances           = [],\n\t            id                  = '',\n\t            elements            = [],\n\t            i                   = -1;\n\t\n\t        doc = foreignDoc || window.document;\n\t\n\t        if (returnCollection = arguments[3]) {\n\t            // A non-documented 4th paramater enabling control of multiple instances\n\t\n\t            returnCollection = typeof returnCollection === 'boolean';\n\t        }\n\t\n\t        if (typeof container === 'string') {\n\t            elements = doc.querySelectorAll(container);\n\t        } else if (container && typeof container === 'object' && h.isElement(container, doc)) {\n\t            elements = [container];\n\t        } else if (container && typeof container === 'object' && container.length) {\n\t            // Although not documented, the container may also be an array-like list of\n\t            // elements such as a NodeList or jQuery collection, is returnCollection is true\n\t\n\t            elements = container;\n\t        } else {\n\t            throw new Error(mixitup.messages.errorFactoryInvalidContainer());\n\t        }\n\t\n\t        if (elements.length < 1) {\n\t            throw new Error(mixitup.messages.errorFactoryContainerNotFound());\n\t        }\n\t\n\t        for (i = 0; el = elements[i]; i++) {\n\t            if (i > 0 && !returnCollection) break;\n\t\n\t            if (!el.id) {\n\t                id = 'MixItUp' + h.randomHex();\n\t\n\t                el.id = id;\n\t            } else {\n\t                id = el.id;\n\t            }\n\t\n\t            if (mixitup.instances[id] instanceof mixitup.Mixer) {\n\t                instance = mixitup.instances[id];\n\t\n\t                if (!config || (config && config.debug && config.debug.showWarnings !== false)) {\n\t                    console.warn(mixitup.messages.warningFactoryPreexistingInstance());\n\t                }\n\t            } else {\n\t                instance = new mixitup.Mixer();\n\t\n\t                instance.attach(el, doc, id, config);\n\t\n\t                mixitup.instances[id] = instance;\n\t            }\n\t\n\t            facade = new mixitup.Facade(instance);\n\t\n\t            if (config && config.debug && config.debug.enable) {\n\t                instances.push(instance);\n\t            } else {\n\t                instances.push(facade);\n\t            }\n\t        }\n\t\n\t        if (returnCollection) {\n\t            output = new mixitup.Collection(instances);\n\t        } else {\n\t            // Return the first instance regardless\n\t\n\t            output = instances[0];\n\t        }\n\t\n\t        return output;\n\t    };\n\t\n\t    /**\n\t     * The `.use()` static method is used to extend the functionality of mixitup with compatible\n\t     * extensions and libraries in an environment with modular scoping e.g. ES2015, CommonJS, or RequireJS.\n\t     *\n\t     * You need only call the `.use()` function once per project, per extension, as module loaders\n\t     * will cache a single reference to MixItUp inclusive of all changes made.\n\t     *\n\t     * @example\n\t     * mixitup.use(extension)\n\t     *\n\t     * @example <caption>Example 1: Extending MixItUp with the Pagination Extension</caption>\n\t     *\n\t     * import mixitup from 'mixitup';\n\t     * import mixitupPagination from 'mixitup-pagination';\n\t     *\n\t     * mixitup.use(mixitupPagination);\n\t     *\n\t     * // All mixers created by the factory function in all modules will now\n\t     * // have pagination functionality\n\t     *\n\t     * var mixer = mixitup('.container');\n\t     *\n\t     * @public\n\t     * @name     use\n\t     * @memberof mixitup\n\t     * @kind     function\n\t     * @static\n\t     * @since    3.0.0\n\t     * @param    {*}  extension   A reference to the extension or library to be used.\n\t     * @return   {void}\n\t     */\n\t\n\t    mixitup.use = function(extension) {\n\t        mixitup.Base.prototype.callActions.call(mixitup, 'beforeUse', arguments);\n\t\n\t        // Call the extension's factory function, passing\n\t        // the mixitup factory as a paramater\n\t\n\t        if (typeof extension === 'function' && extension.TYPE === 'mixitup-extension') {\n\t            // Mixitup extension\n\t\n\t            if (typeof mixitup.extensions[extension.NAME] === 'undefined') {\n\t                extension(mixitup);\n\t\n\t                mixitup.extensions[extension.NAME] = extension;\n\t            }\n\t        } else if (extension.fn && extension.fn.jquery) {\n\t            // jQuery\n\t\n\t            mixitup.libraries.$ = extension;\n\t        }\n\t\n\t        mixitup.Base.prototype.callActions.call(mixitup, 'afterUse', arguments);\n\t    };\n\t\n\t    mixitup.instances   = {};\n\t    mixitup.extensions  = {};\n\t    mixitup.libraries   = {};\n\t\n\t    /**\n\t     * @private\n\t     */\n\t\n\t    h = {\n\t\n\t        /**\n\t         * @private\n\t         * @param   {HTMLElement}   el\n\t         * @param   {string}        cls\n\t         * @return  {boolean}\n\t         */\n\t\n\t        hasClass: function(el, cls) {\n\t            return !!el.className.match(new RegExp('(\\\\s|^)' + cls + '(\\\\s|$)'));\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {HTMLElement}   el\n\t         * @param   {string}        cls\n\t         * @return  {void}\n\t         */\n\t\n\t        addClass: function(el, cls) {\n\t            if (!this.hasClass(el, cls)) el.className += el.className ? ' ' + cls : cls;\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {HTMLElement}   el\n\t         * @param   {string}        cls\n\t         * @return  {void}\n\t         */\n\t\n\t        removeClass: function(el, cls) {\n\t            if (this.hasClass(el, cls)) {\n\t                var reg = new RegExp('(\\\\s|^)' + cls + '(\\\\s|$)');\n\t\n\t                el.className = el.className.replace(reg, ' ').trim();\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Merges the properties of the source object onto the\n\t         * target object. Alters the target object.\n\t         *\n\t         * @private\n\t         * @param   {object}    destination\n\t         * @param   {object}    source\n\t         * @param   {boolean}   [deep=false]\n\t         * @param   {boolean}   [handleErrors=false]\n\t         * @return  {void}\n\t         */\n\t\n\t        extend: function(destination, source, deep, handleErrors) {\n\t            var sourceKeys  = [],\n\t                key         = '',\n\t                i           = -1;\n\t\n\t            deep = deep || false;\n\t            handleErrors = handleErrors || false;\n\t\n\t            try {\n\t                if (Array.isArray(source)) {\n\t                    for (i = 0; i < source.length; i++) {\n\t                        sourceKeys.push(i);\n\t                    }\n\t                } else if (source) {\n\t                    sourceKeys = Object.keys(source);\n\t                }\n\t\n\t                for (i = 0; i < sourceKeys.length; i++) {\n\t                    key = sourceKeys[i];\n\t\n\t                    if (!deep || typeof source[key] !== 'object' || this.isElement(source[key])) {\n\t                        // All non-object properties, or all properties if shallow extend\n\t\n\t                        destination[key] = source[key];\n\t                    } else if (Array.isArray(source[key])) {\n\t                        // Arrays\n\t\n\t                        if (!destination[key]) {\n\t                            destination[key] = [];\n\t                        }\n\t\n\t                        this.extend(destination[key], source[key], deep, handleErrors);\n\t                    } else {\n\t                        // Objects\n\t\n\t                        if (!destination[key]) {\n\t                            destination[key] = {};\n\t                        }\n\t\n\t                        this.extend(destination[key], source[key], deep, handleErrors);\n\t                    }\n\t                }\n\t            } catch(err) {\n\t                if (handleErrors) {\n\t                    this.handleExtendError(err, destination);\n\t                } else {\n\t                    throw err;\n\t                }\n\t            }\n\t\n\t            return destination;\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {Error}  err\n\t         * @param   {object} destination\n\t         * @return  {void}\n\t         */\n\t\n\t        handleExtendError: function(err, destination) {\n\t            var re                  = /property \"?(\\w*)\"?[,:] object/i,\n\t                matches             = null,\n\t                erroneous           = '',\n\t                message             = '',\n\t                suggestion          = '',\n\t                probableMatch       = '',\n\t                key                 = '',\n\t                mostMatchingChars   = -1,\n\t                i                   = -1;\n\t\n\t            if (err instanceof TypeError && (matches = re.exec(err.message))) {\n\t                erroneous = matches[1];\n\t\n\t                for (key in destination) {\n\t                    i = 0;\n\t\n\t                    while (i < erroneous.length && erroneous.charAt(i) === key.charAt(i)) {\n\t                        i++;\n\t                    }\n\t\n\t                    if (i > mostMatchingChars) {\n\t                        mostMatchingChars = i;\n\t                        probableMatch = key;\n\t                    }\n\t                }\n\t\n\t                if (mostMatchingChars > 1) {\n\t                    suggestion = mixitup.messages.errorConfigInvalidPropertySuggestion({\n\t                        probableMatch: probableMatch\n\t                    });\n\t                }\n\t\n\t                message = mixitup.messages.errorConfigInvalidProperty({\n\t                    erroneous: erroneous,\n\t                    suggestion: suggestion\n\t                });\n\t\n\t                throw new TypeError(message);\n\t            }\n\t\n\t            throw err;\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {string} str\n\t         * @return  {function}\n\t         */\n\t\n\t        template: function(str) {\n\t            var re          = /\\${([\\w]*)}/g,\n\t                dynamics    = {},\n\t                matches     = null;\n\t\n\t            while ((matches = re.exec(str))) {\n\t                dynamics[matches[1]] = new RegExp('\\\\${' + matches[1] + '}', 'g');\n\t            }\n\t\n\t            return function(data) {\n\t                var key     = '',\n\t                    output  = str;\n\t\n\t                data = data || {};\n\t\n\t                for (key in dynamics) {\n\t                    output = output.replace(dynamics[key], typeof data[key] !== 'undefined' ? data[key] : '');\n\t                }\n\t\n\t                return output;\n\t            };\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {HTMLElement}   el\n\t         * @param   {string}        type\n\t         * @param   {function}      fn\n\t         * @param   {boolean}       useCapture\n\t         * @return  {void}\n\t         */\n\t\n\t        on: function(el, type, fn, useCapture) {\n\t            if (!el) return;\n\t\n\t            if (el.addEventListener) {\n\t                el.addEventListener(type, fn, useCapture);\n\t            } else if (el.attachEvent) {\n\t                el['e' + type + fn] = fn;\n\t\n\t                el[type + fn] = function() {\n\t                    el['e' + type + fn](window.event);\n\t                };\n\t\n\t                el.attachEvent('on' + type, el[type + fn]);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {HTMLElement}   el\n\t         * @param   {string}        type\n\t         * @param   {function}      fn\n\t         * @return  {void}\n\t         */\n\t\n\t        off: function(el, type, fn) {\n\t            if (!el) return;\n\t\n\t            if (el.removeEventListener) {\n\t                el.removeEventListener(type, fn, false);\n\t            } else if (el.detachEvent) {\n\t                el.detachEvent('on' + type, el[type + fn]);\n\t                el[type + fn] = null;\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {string}      eventType\n\t         * @param   {object}      detail\n\t         * @param   {Document}    [doc]\n\t         * @return  {CustomEvent}\n\t         */\n\t\n\t        getCustomEvent: function(eventType, detail, doc) {\n\t            var event = null;\n\t\n\t            doc = doc || window.document;\n\t\n\t            if (typeof window.CustomEvent === 'function') {\n\t                event = new window.CustomEvent(eventType, {\n\t                    detail: detail,\n\t                    bubbles: true,\n\t                    cancelable: true\n\t                });\n\t            } else if (typeof doc.createEvent === 'function') {\n\t                event = doc.createEvent('CustomEvent');\n\t                event.initCustomEvent(eventType, true, true, detail);\n\t            } else {\n\t                event = doc.createEventObject(),\n\t                event.type = eventType;\n\t\n\t                event.returnValue = false;\n\t                event.cancelBubble = false;\n\t                event.detail = detail;\n\t            }\n\t\n\t            return event;\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {Event} e\n\t         * @return  {Event}\n\t         */\n\t\n\t        getOriginalEvent: function(e) {\n\t            if (e.touches && e.touches.length) {\n\t                return e.touches[0];\n\t            } else if (e.changedTouches && e.changedTouches.length) {\n\t                return e.changedTouches[0];\n\t            } else {\n\t                return e;\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {HTMLElement}   el\n\t         * @param   {string}        selector\n\t         * @return  {Number}\n\t         */\n\t\n\t        index: function(el, selector) {\n\t            var i = 0;\n\t\n\t            while ((el = el.previousElementSibling) !== null) {\n\t                if (!selector || el.matches(selector)) {\n\t                    ++i;\n\t                }\n\t            }\n\t\n\t            return i;\n\t        },\n\t\n\t        /**\n\t         * Converts a dash or snake-case string to camel case.\n\t         *\n\t         * @private\n\t         * @param   {string}    str\n\t         * @param   {boolean}   [isPascal]\n\t         * @return  {string}\n\t         */\n\t\n\t        camelCase: function(str) {\n\t            return str.toLowerCase().replace(/([_-][a-z])/g, function($1) {\n\t                return $1.toUpperCase().replace(/[_-]/, '');\n\t            });\n\t        },\n\t\n\t        /**\n\t         * Converts a dash or snake-case string to pascal case.\n\t         *\n\t         * @private\n\t         * @param   {string}    str\n\t         * @param   {boolean}   [isPascal]\n\t         * @return  {string}\n\t         */\n\t\n\t        pascalCase: function(str) {\n\t            return (str = this.camelCase(str)).charAt(0).toUpperCase() + str.slice(1);\n\t        },\n\t\n\t        /**\n\t         * Converts a camel or pascal-case string to dash case.\n\t         *\n\t         * @private\n\t         * @param   {string}    str\n\t         * @return  {string}\n\t         */\n\t\n\t        dashCase: function(str) {\n\t            return str.replace(/([A-Z])/g, '-$1').replace(/^-/, '').toLowerCase();\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {HTMLElement}       el\n\t         * @param   {HTMLHtmlElement}   [doc]\n\t         * @return  {boolean}\n\t         */\n\t\n\t        isElement: function(el, doc) {\n\t            doc = doc || window.document;\n\t\n\t            if (\n\t                window.HTMLElement &&\n\t                el instanceof window.HTMLElement\n\t            ) {\n\t                return true;\n\t            } else if (\n\t                doc.defaultView &&\n\t                doc.defaultView.HTMLElement &&\n\t                el instanceof doc.defaultView.HTMLElement\n\t            ) {\n\t                return true;\n\t            } else {\n\t                return (\n\t                    el !== null &&\n\t                    el.nodeType === 1 &&\n\t                    typeof el.nodeName === 'string'\n\t                );\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {string}            htmlString\n\t         * @param   {HTMLHtmlElement}   [doc]\n\t         * @return  {DocumentFragment}\n\t         */\n\t\n\t        createElement: function(htmlString, doc) {\n\t            var frag = null,\n\t                temp = null;\n\t\n\t            doc = doc || window.document;\n\t\n\t            frag = doc.createDocumentFragment();\n\t            temp = doc.createElement('div');\n\t\n\t            temp.innerHTML = htmlString.trim();\n\t\n\t            while (temp.firstChild) {\n\t                frag.appendChild(temp.firstChild);\n\t            }\n\t\n\t            return frag;\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {Node} node\n\t         * @return  {void}\n\t         */\n\t\n\t        removeWhitespace: function(node) {\n\t            var deleting;\n\t\n\t            while (node && node.nodeName === '#text') {\n\t                deleting = node;\n\t\n\t                node = node.previousSibling;\n\t\n\t                deleting.parentElement && deleting.parentElement.removeChild(deleting);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {Array<*>}  a\n\t         * @param   {Array<*>}  b\n\t         * @return  {boolean}\n\t         */\n\t\n\t        isEqualArray: function(a, b) {\n\t            var i = a.length;\n\t\n\t            if (i !== b.length) return false;\n\t\n\t            while (i--) {\n\t                if (a[i] !== b[i]) return false;\n\t            }\n\t\n\t            return true;\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {object}  a\n\t         * @param   {object}  b\n\t         * @return  {boolean}\n\t         */\n\t\n\t        deepEquals: function(a, b) {\n\t            var key;\n\t\n\t            if (typeof a === 'object' && a && typeof b === 'object' && b) {\n\t                if (Object.keys(a).length !== Object.keys(b).length) return false;\n\t\n\t                for (key in a) {\n\t                    if (!b.hasOwnProperty(key) || !this.deepEquals(a[key], b[key])) return false;\n\t                }\n\t            } else if (a !== b) {\n\t                return false;\n\t            }\n\t\n\t            return true;\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {Array<*>}  oldArray\n\t         * @return  {Array<*>}\n\t         */\n\t\n\t        arrayShuffle: function(oldArray) {\n\t            var newArray    = oldArray.slice(),\n\t                len         = newArray.length,\n\t                i           = len,\n\t                p           = -1,\n\t                t           = [];\n\t\n\t            while (i--) {\n\t                p = ~~(Math.random() * len);\n\t                t = newArray[i];\n\t\n\t                newArray[i] = newArray[p];\n\t                newArray[p] = t;\n\t            }\n\t\n\t            return newArray;\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {object}    list\n\t         */\n\t\n\t        arrayFromList: function(list) {\n\t            var output, i;\n\t\n\t            try {\n\t                return Array.prototype.slice.call(list);\n\t            } catch(err) {\n\t                output = [];\n\t\n\t                for (i = 0; i < list.length; i++) {\n\t                    output.push(list[i]);\n\t                }\n\t\n\t                return output;\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {function}  func\n\t         * @param   {Number}    wait\n\t         * @param   {boolean}   immediate\n\t         * @return  {function}\n\t         */\n\t\n\t        debounce: function(func, wait, immediate) {\n\t            var timeout;\n\t\n\t            return function() {\n\t                var self     = this,\n\t                    args     = arguments,\n\t                    callNow  = immediate && !timeout,\n\t                    later    = null;\n\t\n\t                later = function() {\n\t                    timeout  = null;\n\t\n\t                    if (!immediate) {\n\t                        func.apply(self, args);\n\t                    }\n\t                };\n\t\n\t                clearTimeout(timeout);\n\t\n\t                timeout = setTimeout(later, wait);\n\t\n\t                if (callNow) func.apply(self, args);\n\t            };\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {HTMLElement}   element\n\t         * @return  {object}\n\t         */\n\t\n\t        position: function(element) {\n\t            var xPosition       = 0,\n\t                yPosition       = 0,\n\t                offsetParent    = element;\n\t\n\t            while (element) {\n\t                xPosition -= element.scrollLeft;\n\t                yPosition -= element.scrollTop;\n\t\n\t                if (element === offsetParent) {\n\t                    xPosition += element.offsetLeft;\n\t                    yPosition += element.offsetTop;\n\t\n\t                    offsetParent = element.offsetParent;\n\t                }\n\t\n\t                element = element.parentElement;\n\t            }\n\t\n\t            return {\n\t                x: xPosition,\n\t                y: yPosition\n\t            };\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {object}    node1\n\t         * @param   {object}    node2\n\t         * @return  {Number}\n\t         */\n\t\n\t        getHypotenuse: function(node1, node2) {\n\t            var distanceX = node1.x - node2.x,\n\t                distanceY = node1.y - node2.y;\n\t\n\t            distanceX = distanceX < 0 ? distanceX * -1 : distanceX,\n\t            distanceY = distanceY < 0 ? distanceY * -1 : distanceY;\n\t\n\t            return Math.sqrt(Math.pow(distanceX, 2) + Math.pow(distanceY, 2));\n\t        },\n\t\n\t        /**\n\t         * Calcuates the area of intersection between two rectangles and expresses it as\n\t         * a ratio in comparison to the area of the first rectangle.\n\t         *\n\t         * @private\n\t         * @param   {Rect}  box1\n\t         * @param   {Rect}  box2\n\t         * @return  {number}\n\t         */\n\t\n\t        getIntersectionRatio: function(box1, box2) {\n\t            var controlArea         = box1.width * box1.height,\n\t                intersectionX       = -1,\n\t                intersectionY       = -1,\n\t                intersectionArea    = -1,\n\t                ratio               = -1;\n\t\n\t            intersectionX =\n\t                Math.max(0, Math.min(box1.left + box1.width, box2.left + box2.width) - Math.max(box1.left, box2.left));\n\t\n\t            intersectionY =\n\t                Math.max(0, Math.min(box1.top + box1.height, box2.top + box2.height) - Math.max(box1.top, box2.top));\n\t\n\t            intersectionArea = intersectionY * intersectionX;\n\t\n\t            ratio = intersectionArea / controlArea;\n\t\n\t            return ratio;\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {object}            el\n\t         * @param   {string}            selector\n\t         * @param   {boolean}           [includeSelf]\n\t         * @param   {HTMLHtmlElement}   [doc]\n\t         * @return  {Element|null}\n\t         */\n\t\n\t        closestParent: function(el, selector, includeSelf, doc) {\n\t            var parent  = el.parentNode;\n\t\n\t            doc = doc || window.document;\n\t\n\t            if (includeSelf && el.matches(selector)) {\n\t                return el;\n\t            }\n\t\n\t            while (parent && parent != doc.body) {\n\t                if (parent.matches && parent.matches(selector)) {\n\t                    return parent;\n\t                } else if (parent.parentNode) {\n\t                    parent = parent.parentNode;\n\t                } else {\n\t                    return null;\n\t                }\n\t            }\n\t\n\t            return null;\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {HTMLElement}       el\n\t         * @param   {string}            selector\n\t         * @param   {HTMLHtmlElement}   [doc]\n\t         * @return  {NodeList}\n\t         */\n\t\n\t        children: function(el, selector, doc) {\n\t            var children    = [],\n\t                tempId      = '';\n\t\n\t            doc = doc || window.doc;\n\t\n\t            if (el) {\n\t                if (!el.id) {\n\t                    tempId = 'Temp' + this.randomHexKey();\n\t\n\t                    el.id = tempId;\n\t                }\n\t\n\t                children = doc.querySelectorAll('#' + el.id + ' > ' + selector);\n\t\n\t                if (tempId) {\n\t                    el.removeAttribute('id');\n\t                }\n\t            }\n\t\n\t            return children;\n\t        },\n\t\n\t        /**\n\t         * Creates a clone of a provided array, with any empty strings removed.\n\t         *\n\t         * @private\n\t         * @param   {Array<*>} originalArray\n\t         * @return  {Array<*>}\n\t         */\n\t\n\t        clean: function(originalArray) {\n\t            var cleanArray = [],\n\t                i = -1;\n\t\n\t            for (i = 0; i < originalArray.length; i++) {\n\t                if (originalArray[i] !== '') {\n\t                    cleanArray.push(originalArray[i]);\n\t                }\n\t            }\n\t\n\t            return cleanArray;\n\t        },\n\t\n\t        /**\n\t         * Abstracts an ES6 promise into a q-like deferred interface for storage and deferred resolution.\n\t         *\n\t         * @private\n\t         * @param  {object} libraries\n\t         * @return {h.Deferred}\n\t         */\n\t\n\t        defer: function(libraries) {\n\t            var deferred       = null,\n\t                promiseWrapper = null,\n\t                $              = null;\n\t\n\t            promiseWrapper = new this.Deferred();\n\t\n\t            if (mixitup.features.has.promises) {\n\t                // ES6 native promise or polyfill\n\t\n\t                promiseWrapper.promise = new Promise(function(resolve, reject) {\n\t                    promiseWrapper.resolve = resolve;\n\t                    promiseWrapper.reject  = reject;\n\t                });\n\t            } else if (($ = (window.jQuery || libraries.$)) && typeof $.Deferred === 'function') {\n\t                // jQuery\n\t\n\t                deferred = $.Deferred();\n\t\n\t                promiseWrapper.promise = deferred.promise();\n\t                promiseWrapper.resolve = deferred.resolve;\n\t                promiseWrapper.reject  = deferred.reject;\n\t            } else if (window.console) {\n\t                // No implementation\n\t\n\t                console.warn(mixitup.messages.warningNoPromiseImplementation());\n\t            }\n\t\n\t            return promiseWrapper;\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {Array<Promise>}    tasks\n\t         * @param   {object}            libraries\n\t         * @return  {Promise<Array>}\n\t         */\n\t\n\t        all: function(tasks, libraries) {\n\t            var $ = null;\n\t\n\t            if (mixitup.features.has.promises) {\n\t                return Promise.all(tasks);\n\t            } else if (($ = (window.jQuery || libraries.$)) && typeof $.when === 'function') {\n\t                return $.when.apply($, tasks)\n\t                    .done(function() {\n\t                        // jQuery when returns spread arguments rather than an array or resolutions\n\t\n\t                        return arguments;\n\t                    });\n\t            }\n\t\n\t            // No implementation\n\t\n\t            if (window.console) {\n\t                console.warn(mixitup.messages.warningNoPromiseImplementation());\n\t            }\n\t\n\t            return [];\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {HTMLElement}   el\n\t         * @param   {string}        property\n\t         * @param   {Array<string>} vendors\n\t         * @return  {string}\n\t         */\n\t\n\t        getPrefix: function(el, property, vendors) {\n\t            var i       = -1,\n\t                prefix  = '';\n\t\n\t            if (h.dashCase(property) in el.style) return '';\n\t\n\t            for (i = 0; prefix = vendors[i]; i++) {\n\t                if (prefix + property in el.style) {\n\t                    return prefix.toLowerCase();\n\t                }\n\t            }\n\t\n\t            return 'unsupported';\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @return  {string}\n\t         */\n\t\n\t        randomHex: function() {\n\t            return ('00000' + (Math.random() * 16777216 << 0).toString(16)).substr(-6).toUpperCase();\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {HTMLDocument}  [doc]\n\t         * @return  {object}\n\t         */\n\t\n\t        getDocumentState: function(doc) {\n\t            doc = typeof doc.body === 'object' ? doc : window.document;\n\t\n\t            return {\n\t                scrollTop: window.pageYOffset,\n\t                scrollLeft: window.pageXOffset,\n\t                docHeight: doc.documentElement.scrollHeight,\n\t                docWidth: doc.documentElement.scrollWidth,\n\t                viewportHeight: doc.documentElement.clientHeight,\n\t                viewportWidth: doc.documentElement.clientWidth\n\t            };\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {object}    obj\n\t         * @param   {function}  fn\n\t         * @return  {function}\n\t         */\n\t\n\t        bind: function(obj, fn) {\n\t            return function() {\n\t                return fn.apply(obj, arguments);\n\t            };\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {HTMLElement}   el\n\t         * @return  {boolean}\n\t         */\n\t\n\t        isVisible: function(el) {\n\t            var styles = null;\n\t\n\t            if (el.offsetParent) return true;\n\t\n\t            styles = window.getComputedStyle(el);\n\t\n\t            if (\n\t                styles.position === 'fixed' &&\n\t                styles.visibility !== 'hidden' &&\n\t                styles.opacity !== '0'\n\t            ) {\n\t                // Fixed elements report no offsetParent,\n\t                // but may still be invisible\n\t\n\t                return true;\n\t            }\n\t\n\t            return false;\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {object}    obj\n\t         */\n\t\n\t        seal: function(obj) {\n\t            if (typeof Object.seal === 'function') {\n\t                Object.seal(obj);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {object}    obj\n\t         */\n\t\n\t        freeze: function(obj) {\n\t            if (typeof Object.freeze === 'function') {\n\t                Object.freeze(obj);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {string}    control\n\t         * @param   {string}    specimen\n\t         * @return  {boolean}\n\t         */\n\t\n\t        compareVersions: function(control, specimen) {\n\t            var controlParts    = control.split('.'),\n\t                specimenParts   = specimen.split('.'),\n\t                controlPart     = -1,\n\t                specimenPart    = -1,\n\t                i               = -1;\n\t\n\t            for (i = 0; i < controlParts.length; i++) {\n\t                controlPart     = parseInt(controlParts[i].replace(/[^\\d.]/g, ''));\n\t                specimenPart    = parseInt(specimenParts[i].replace(/[^\\d.]/g, '') || 0);\n\t\n\t                if (specimenPart < controlPart) {\n\t                    return false;\n\t                } else if (specimenPart > controlPart) {\n\t                    return true;\n\t                }\n\t            }\n\t\n\t            return true;\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @constructor\n\t         */\n\t\n\t        Deferred: function() {\n\t            this.promise    = null;\n\t            this.resolve    = null;\n\t            this.reject     = null;\n\t            this.id         = h.randomHex();\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {object}  obj\n\t         * @return  {boolean}\n\t         */\n\t\n\t        isEmptyObject: function(obj) {\n\t            var key = '';\n\t\n\t            if (typeof Object.keys === 'function') {\n\t                return Object.keys(obj).length === 0;\n\t            }\n\t\n\t            for (key in obj) {\n\t                if (obj.hasOwnProperty(key)) {\n\t                    return false;\n\t                }\n\t            }\n\t\n\t            return true;\n\t        },\n\t\n\t        /**\n\t         * @param   {mixitup.Config.ClassNames}   classNames\n\t         * @param   {string}                      elementName\n\t         * @param   {string}                      [modifier]\n\t         * @return  {string}\n\t         */\n\t\n\t        getClassname: function(classNames, elementName, modifier) {\n\t            var classname = '';\n\t\n\t            classname += classNames.block;\n\t\n\t            if (classname.length) {\n\t                classname += classNames.delineatorElement;\n\t            }\n\t\n\t            classname += classNames['element' + this.pascalCase(elementName)];\n\t\n\t            if (!modifier) return classname;\n\t\n\t            if (classname.length) {\n\t                classname += classNames.delineatorModifier;\n\t            }\n\t\n\t            classname += modifier;\n\t\n\t            return classname;\n\t        },\n\t\n\t        /**\n\t         * Returns the value of a property on a given object via its string key.\n\t         *\n\t         * @param   {object}    obj\n\t         * @param   {string}    stringKey\n\t         * @return  {*} value\n\t         */\n\t\n\t        getProperty: function(obj, stringKey) {\n\t            var parts           = stringKey.split('.'),\n\t                returnCurrent   = null,\n\t                current         = '',\n\t                i               = 0;\n\t\n\t            if (!stringKey) {\n\t                return obj;\n\t            }\n\t\n\t            returnCurrent = function(obj) {\n\t                if (!obj) {\n\t                    return null;\n\t                } else {\n\t                    return obj[current];\n\t                }\n\t            };\n\t\n\t            while (i < parts.length) {\n\t                current = parts[i];\n\t\n\t                obj = returnCurrent(obj);\n\t\n\t                i++;\n\t            }\n\t\n\t            if (typeof obj !== 'undefined') {\n\t                return obj;\n\t            } else {\n\t                return null;\n\t            }\n\t        }\n\t    };\n\t\n\t    mixitup.h = h;\n\t\n\t    /**\n\t     * The Base class adds instance methods to all other extensible MixItUp classes,\n\t     * enabling the calling of any registered hooks.\n\t     *\n\t     * @constructor\n\t     * @namespace\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.Base = function() {};\n\t\n\t    mixitup.Base.prototype = {\n\t        constructor: mixitup.Base,\n\t\n\t        /**\n\t         * Calls any registered hooks for the provided action.\n\t         *\n\t         * @memberof    mixitup.Base\n\t         * @private\n\t         * @instance\n\t         * @since       2.0.0\n\t         * @param       {string}    actionName\n\t         * @param       {Array<*>}  args\n\t         * @return      {void}\n\t         */\n\t\n\t        callActions: function(actionName, args) {\n\t            var self            = this,\n\t                hooks           = self.constructor.actions[actionName],\n\t                extensionName   = '';\n\t\n\t            if (!hooks || h.isEmptyObject(hooks)) return;\n\t\n\t            for (extensionName in hooks) {\n\t                hooks[extensionName].apply(self, args);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Calls any registered hooks for the provided filter.\n\t         *\n\t         * @memberof    mixitup.Base\n\t         * @private\n\t         * @instance\n\t         * @since       2.0.0\n\t         * @param       {string}    filterName\n\t         * @param       {*}         input\n\t         * @param       {Array<*>}  args\n\t         * @return      {*}\n\t         */\n\t\n\t        callFilters: function(filterName, input, args) {\n\t            var self            = this,\n\t                hooks           = self.constructor.filters[filterName],\n\t                output          = input,\n\t                extensionName   = '';\n\t\n\t            if (!hooks || h.isEmptyObject(hooks)) return output;\n\t\n\t            args = args || [];\n\t\n\t            for (extensionName in hooks) {\n\t                args = h.arrayFromList(args);\n\t\n\t                args.unshift(output);\n\t\n\t                output = hooks[extensionName].apply(self, args);\n\t            }\n\t\n\t            return output;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * The BaseStatic class holds a set of static methods which are then added to all other\n\t     * extensible MixItUp classes as a means of integrating extensions via the addition of new\n\t     * methods and/or actions and hooks.\n\t     *\n\t     * @constructor\n\t     * @namespace\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.BaseStatic = function() {\n\t        this.actions = {};\n\t        this.filters = {};\n\t\n\t        /**\n\t         * Performs a shallow extend on the class's prototype, adding one or more new members to\n\t         * the class in a single operation.\n\t         *\n\t         * @memberof    mixitup.BaseStatic\n\t         * @public\n\t         * @static\n\t         * @since       2.1.0\n\t         * @param       {object} extension\n\t         * @return      {void}\n\t         */\n\t\n\t        this.extend = function(extension) {\n\t            h.extend(this.prototype, extension);\n\t        };\n\t\n\t        /**\n\t         * Registers a function to be called on the action hook of the provided name.\n\t         *\n\t         * @memberof    mixitup.BaseStatic\n\t         * @public\n\t         * @static\n\t         * @since       2.1.0\n\t         * @param       {string}    hookName\n\t         * @param       {string}    extensionName\n\t         * @param       {function}  func\n\t         * @return      {void}\n\t         */\n\t\n\t        this.registerAction = function(hookName, extensionName, func) {\n\t            (this.actions[hookName] = this.actions[hookName] || {})[extensionName] = func;\n\t        };\n\t\n\t        /**\n\t         * Registers a function to be called on the filter of the provided name.\n\t         *\n\t         * @memberof    mixitup.BaseStatic\n\t         * @public\n\t         * @static\n\t         * @since       2.1.0\n\t         * @param       {string}    hookName\n\t         * @param       {string}    extensionName\n\t         * @param       {function}  func\n\t         * @return      {void}\n\t         */\n\t\n\t        this.registerFilter = function(hookName, extensionName, func) {\n\t            (this.filters[hookName] = this.filters[hookName] || {})[extensionName] = func;\n\t        };\n\t    };\n\t\n\t    /**\n\t     * The `mixitup.Features` class performs all feature and CSS prefix detection\n\t     * neccessary for MixItUp to function correctly, as well as storing various\n\t     * string and array constants. All feature decection is on evaluation of the\n\t     * library and stored in a singleton instance for use by other internal classes.\n\t     *\n\t     * @constructor\n\t     * @namespace\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.Features = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        this.boxSizingPrefix            = '';\n\t        this.transformPrefix            = '';\n\t        this.transitionPrefix           = '';\n\t\n\t        this.boxSizingPrefix            = '';\n\t        this.transformProp              = '';\n\t        this.transformRule              = '';\n\t        this.transitionProp             = '';\n\t        this.perspectiveProp            = '';\n\t        this.perspectiveOriginProp      = '';\n\t\n\t        this.has                        = new mixitup.Has();\n\t\n\t        this.canary                     = null;\n\t\n\t        this.BOX_SIZING_PROP            = 'boxSizing';\n\t        this.TRANSITION_PROP            = 'transition';\n\t        this.TRANSFORM_PROP             = 'transform';\n\t        this.PERSPECTIVE_PROP           = 'perspective';\n\t        this.PERSPECTIVE_ORIGIN_PROP    = 'perspectiveOrigin';\n\t        this.VENDORS                    = ['Webkit', 'moz', 'O', 'ms'];\n\t\n\t        this.TWEENABLE = [\n\t            'opacity',\n\t            'width', 'height',\n\t            'marginRight', 'marginBottom',\n\t            'x', 'y',\n\t            'scale',\n\t            'translateX', 'translateY', 'translateZ',\n\t            'rotateX', 'rotateY', 'rotateZ'\n\t        ];\n\t\n\t        this.callActions('afterConstruct');\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.Features);\n\t\n\t    mixitup.Features.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    h.extend(mixitup.Features.prototype,\n\t    /** @lends mixitup.Features */\n\t    {\n\t        constructor: mixitup.Features,\n\t\n\t        /**\n\t         * @private\n\t         * @return  {void}\n\t         */\n\t\n\t        init: function() {\n\t            var self = this;\n\t\n\t            self.callActions('beforeInit', arguments);\n\t\n\t            self.canary = document.createElement('div');\n\t\n\t            self.setPrefixes();\n\t            self.runTests();\n\t\n\t            self.callActions('beforeInit', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @return  {void}\n\t         */\n\t\n\t        runTests: function() {\n\t            var self = this;\n\t\n\t            self.callActions('beforeRunTests', arguments);\n\t\n\t            self.has.promises       = typeof window.Promise === 'function';\n\t            self.has.transitions    = self.transitionPrefix !== 'unsupported';\n\t\n\t            self.callActions('afterRunTests', arguments);\n\t\n\t            h.freeze(self.has);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @return  {void}\n\t         */\n\t\n\t        setPrefixes: function() {\n\t            var self = this;\n\t\n\t            self.callActions('beforeSetPrefixes', arguments);\n\t\n\t            self.transitionPrefix   = h.getPrefix(self.canary, 'Transition', self.VENDORS);\n\t            self.transformPrefix    = h.getPrefix(self.canary, 'Transform', self.VENDORS);\n\t            self.boxSizingPrefix    = h.getPrefix(self.canary, 'BoxSizing', self.VENDORS);\n\t\n\t            self.boxSizingProp = self.boxSizingPrefix ?\n\t                self.boxSizingPrefix + h.pascalCase(self.BOX_SIZING_PROP) : self.BOX_SIZING_PROP;\n\t\n\t            self.transitionProp = self.transitionPrefix ?\n\t                self.transitionPrefix + h.pascalCase(self.TRANSITION_PROP) : self.TRANSITION_PROP;\n\t\n\t            self.transformProp = self.transformPrefix ?\n\t                self.transformPrefix + h.pascalCase(self.TRANSFORM_PROP) : self.TRANSFORM_PROP;\n\t\n\t            self.transformRule = self.transformPrefix ?\n\t                '-' + self.transformPrefix + '-' + self.TRANSFORM_PROP : self.TRANSFORM_PROP;\n\t\n\t            self.perspectiveProp = self.transformPrefix ?\n\t                self.transformPrefix + h.pascalCase(self.PERSPECTIVE_PROP) : self.PERSPECTIVE_PROP;\n\t\n\t            self.perspectiveOriginProp = self.transformPrefix ?\n\t                self.transformPrefix + h.pascalCase(self.PERSPECTIVE_ORIGIN_PROP) :\n\t                self.PERSPECTIVE_ORIGIN_PROP;\n\t\n\t            self.callActions('afterSetPrefixes', arguments);\n\t        }\n\t    });\n\t\n\t    /**\n\t     * @constructor\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.Has = function() {\n\t        this.transitions    = false;\n\t        this.promises       = false;\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    // Assign a singleton instance to `mixitup.features` and initialise:\n\t\n\t    mixitup.features = new mixitup.Features();\n\t\n\t    mixitup.features.init();\n\t\n\t    /**\n\t     * A group of properties defining the mixer's animation and effects settings.\n\t     *\n\t     * @constructor\n\t     * @memberof    mixitup.Config\n\t     * @name        animation\n\t     * @namespace\n\t     * @public\n\t     * @since       2.0.0\n\t     */\n\t\n\t    mixitup.ConfigAnimation = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        /**\n\t         * A boolean dictating whether or not animation should be enabled for the MixItUp instance.\n\t         * If `false`, all operations will occur instantly and syncronously, although callback\n\t         * functions and any returned promises will still be fulfilled.\n\t         *\n\t         * @example <caption>Example: Create a mixer with all animations disabled</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     animation: {\n\t         *         enable: false\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        enable\n\t         * @memberof    mixitup.Config.animation\n\t         * @instance\n\t         * @type        {boolean}\n\t         * @default     true\n\t         */\n\t\n\t        this.enable = true;\n\t\n\t        /**\n\t         * A string of one or more space-seperated properties to which transitions will be\n\t         * applied for all filtering animations.\n\t         *\n\t         * Properties can be listed any order or combination, although they will be applied in a specific\n\t         * predefined order to produce consistent results.\n\t         *\n\t         * To learn more about available effects, experiment with our <a href=\"https://www.kunkalabs.com/mixitup/\">\n\t         * sandbox demo</a> and try out the \"Export config\" button in the Animation options drop down.\n\t         *\n\t         * @example <caption>Example: Apply \"fade\" and \"translateZ\" effects to all animations</caption>\n\t         * // As targets are filtered in and out, they will fade between\n\t         * // opacity 1 and 0 and transform between translateZ(-100px) and\n\t         * // translateZ(0).\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     animation: {\n\t         *         effects: 'fade translateZ(-100px)'\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        effects\n\t         * @memberof    mixitup.Config.animation\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     'fade scale'\n\t         */\n\t\n\t        this.effects = 'fade scale';\n\t\n\t        /**\n\t         * A string of one or more space-seperated effects to be applied only to filter-in\n\t         * animations, overriding `config.animation.effects` if set.\n\t         *\n\t         * @example <caption>Example: Apply downwards vertical translate to targets being filtered in</caption>\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     animation: {\n\t         *         effectsIn: 'fade translateY(-100%)'\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        effectsIn\n\t         * @memberof    mixitup.Config.animation\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     ''\n\t         */\n\t\n\t        this.effectsIn = '';\n\t\n\t        /**\n\t         * A string of one or more space-seperated effects to be applied only to filter-out\n\t         * animations, overriding `config.animation.effects` if set.\n\t         *\n\t         * @example <caption>Example: Apply upwards vertical translate to targets being filtered out</caption>\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     animation: {\n\t         *         effectsOut: 'fade translateY(-100%)'\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        effectsOut\n\t         * @memberof    mixitup.Config.animation\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     ''\n\t         */\n\t\n\t        this.effectsOut = '';\n\t\n\t        /**\n\t         * An integer dictating the duration of all MixItUp animations in milliseconds, not\n\t         * including any additional delay apllied via the `'stagger'` effect.\n\t         *\n\t         * @example <caption>Example: Apply an animation duration of 200ms to all mixitup animations</caption>\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     animation: {\n\t         *         duration: 200\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        duration\n\t         * @memberof    mixitup.Config.animation\n\t         * @instance\n\t         * @type        {number}\n\t         * @default     600\n\t         */\n\t\n\t        this.duration = 600;\n\t\n\t        /**\n\t         * A valid CSS3 transition-timing function or shorthand. For a full list of accepted\n\t         * values, visit <a href=\"http://easings.net\" target=\"_blank\">easings.net</a>.\n\t         *\n\t         * @example <caption>Example 1: Apply \"ease-in-out\" easing to all animations</caption>\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     animation: {\n\t         *         easing: 'ease-in-out'\n\t         *     }\n\t         * });\n\t         *\n\t         * @example <caption>Example 2: Apply a custom \"cubic-bezier\" easing function to all animations</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     animation: {\n\t         *         easing: 'cubic-bezier(0.645, 0.045, 0.355, 1)'\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        easing\n\t         * @memberof    mixitup.Config.animation\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     'ease'\n\t         */\n\t\n\t        this.easing = 'ease';\n\t\n\t        /**\n\t         * A boolean dictating whether or not to apply perspective to the MixItUp container\n\t         * during animations. By default, perspective is always applied and creates the\n\t         * illusion of three-dimensional space for effects such as `translateZ`, `rotateX`,\n\t         * and `rotateY`.\n\t         *\n\t         * You may wish to disable this and define your own perspective settings via CSS.\n\t         *\n\t         * @example <caption>Example: Prevent perspective from being applied to any 3D transforms</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     animation: {\n\t         *         applyPerspective: false\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        applyPerspective\n\t         * @memberof    mixitup.Config.animation\n\t         * @instance\n\t         * @type        {bolean}\n\t         * @default     true\n\t         */\n\t\n\t        this.applyPerspective = true;\n\t\n\t        /**\n\t         * The perspective distance value to be applied to the container during animations,\n\t         * affecting any 3D-transform-based effects.\n\t         *\n\t         * @example <caption>Example: Set a perspective distance of 2000px</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     animation: {\n\t         *         effects: 'rotateY(-25deg)',\n\t         *         perspectiveDistance: '2000px'\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        perspectiveDistance\n\t         * @memberof    mixitup.Config.animation\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     '3000px'\n\t         */\n\t\n\t        this.perspectiveDistance = '3000px';\n\t\n\t        /**\n\t         * The perspective-origin value to be applied to the container during animations,\n\t         * affecting any 3D-transform-based effects.\n\t         *\n\t         * @example <caption>Example: Set a perspective origin in the top-right of the container</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     animation: {\n\t         *         effects: 'transateZ(-200px)',\n\t         *         perspectiveOrigin: '100% 0'\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        perspectiveOrigin\n\t         * @memberof    mixitup.Config.animation\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     '50% 50%'\n\t         */\n\t\n\t        this.perspectiveOrigin = '50% 50%';\n\t\n\t        /**\n\t         * A boolean dictating whether or not to enable the queuing of operations.\n\t         *\n\t         * If `true` (default), and a control is clicked or an API call is made while another\n\t         * operation is progress, the operation will go into the queue and will be automatically exectuted\n\t         * when the previous operaitons is finished.\n\t         *\n\t         * If `false`, any requested operations will be ignored, and the `onMixBusy` callback and `mixBusy`\n\t         * event will be fired. If `debug.showWarnings` is enabled, a console warning will also occur.\n\t         *\n\t         * @example <caption>Example: Disable queuing</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     animation: {\n\t         *         queue: false\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        queue\n\t         * @memberof    mixitup.Config.animation\n\t         * @instance\n\t         * @type        {boolean}\n\t         * @default     true\n\t         */\n\t\n\t        this.queue = true;\n\t\n\t        /**\n\t         * An integer dictacting the maximum number of operations allowed in the queue at\n\t         * any time, when queuing is enabled.\n\t         *\n\t         * @example <caption>Example: Allow a maximum of 5 operations in the queue at any time</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     animation: {\n\t         *         queueLimit: 5\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        queueLimit\n\t         * @memberof    mixitup.Config.animation\n\t         * @instance\n\t         * @type        {number}\n\t         * @default     3\n\t         */\n\t\n\t        this.queueLimit = 3;\n\t\n\t        /**\n\t         * A boolean dictating whether or not to transition the height and width of the\n\t         * container as elements are filtered in and out. If disabled, the container height\n\t         * will change abruptly.\n\t         *\n\t         * It may be desirable to disable this on mobile devices as the CSS `height` and\n\t         * `width` properties do not receive GPU-acceleration and can therefore cause stuttering.\n\t         *\n\t         * @example <caption>Example 1: Disable the transitioning of the container height and/or width</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     animation: {\n\t         *         animateResizeContainer: false\n\t         *     }\n\t         * });\n\t         *\n\t         * @example <caption>Example 2: Disable the transitioning of the container height and/or width for mobile devices only</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     animation: {\n\t         *         animateResizeContainer: myFeatureTests.isMobile ? false : true\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        animateResizeContainer\n\t         * @memberof    mixitup.Config.animation\n\t         * @instance\n\t         * @type        {boolean}\n\t         * @default     true\n\t         */\n\t\n\t        this.animateResizeContainer = true;\n\t\n\t        /**\n\t         * A boolean dictating whether or not to transition the height and width of target\n\t         * elements as they change throughout the course of an animation.\n\t         *\n\t         * This is often a must for flex-box grid layouts where the size of target elements may change\n\t         * depending on final their position in relation to their siblings, or for `.changeLayout()`\n\t         * operations where the size of targets change between layouts.\n\t         *\n\t         * NB: This feature requires additional calculations and manipulation to non-hardware-accelerated\n\t         * properties which may adversely affect performance on slower devices, and is therefore\n\t         * disabled by default.\n\t         *\n\t         * @example <caption>Example: Enable the transitioning of target widths and heights</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     animation: {\n\t         *         animateResizeTargets: true\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        animateResizeTargets\n\t         * @memberof    mixitup.Config.animation\n\t         * @instance\n\t         * @type        {boolean}\n\t         * @default     false\n\t         */\n\t\n\t        this.animateResizeTargets = false;\n\t\n\t        /**\n\t         * A custom function used to manipulate the order in which the stagger delay is\n\t         * incremented when using the ‘stagger’ effect.\n\t         *\n\t         * When using the 'stagger' effect, the delay applied to each target element is incremented\n\t         * based on its index. You may create a custom function to manipulate the order in which the\n\t         * delay is incremented and create engaging non-linear stagger effects.\n\t         *\n\t         * The function receives the index of the target element as a parameter, and must\n\t         * return an integer which serves as the multiplier for the stagger delay.\n\t         *\n\t         * @example <caption>Example 1: Stagger target elements by column in a 3-column grid</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     animation: {\n\t         *         effects: 'fade stagger(100ms)',\n\t         *         staggerSequence: function(i) {\n\t         *             return i % 3;\n\t         *         }\n\t         *     }\n\t         * });\n\t         *\n\t         * @example <caption>Example 2: Using an algorithm to produce a more complex sequence</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     animation: {\n\t         *         effects: 'fade stagger(100ms)',\n\t         *         staggerSequence: function(i) {\n\t         *             return (2*i) - (5*((i/3) - ((1/3) * (i%3))));\n\t         *         }\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        staggerSequence\n\t         * @memberof    mixitup.Config.animation\n\t         * @instance\n\t         * @type        {function}\n\t         * @default     null\n\t         */\n\t\n\t        this.staggerSequence = null;\n\t\n\t        /**\n\t         * A boolean dictating whether or not to reverse the direction of `translate`\n\t         * and `rotate` transforms for elements being filtered out.\n\t         *\n\t         * It can be used to create carousel-like animations where elements enter and exit\n\t         * from opposite directions. If enabled, the effect `translateX(-100%)` for elements\n\t         * being filtered in would become `translateX(100%)` for targets being filtered out.\n\t         *\n\t         * This functionality can also be achieved by providing seperate effects\n\t         * strings for `config.animation.effectsIn` and `config.animation.effectsOut`.\n\t         *\n\t         * @example <caption>Example: Reverse the desired direction on any translate/rotate effect for targets being filtered out</caption>\n\t         * // Elements being filtered in will be translated from '100%' to '0' while\n\t         * // elements being filtered out will be translated from 0 to '-100%'\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     animation: {\n\t         *         effects: 'fade translateX(100%)',\n\t         *         reverseOut: true,\n\t         *         nudge: false // Disable nudging to create a carousel-like effect\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        reverseOut\n\t         * @memberof    mixitup.Config.animation\n\t         * @instance\n\t         * @type        {boolean}\n\t         * @default     false\n\t         */\n\t\n\t        this.reverseOut = false;\n\t\n\t        /**\n\t         * A boolean dictating whether or not to \"nudge\" the animation path of targets\n\t         * when they are being filtered in and out simulatenously.\n\t         *\n\t         * This has been the default behavior of MixItUp since version 1, but it\n\t         * may be desirable to disable this effect when filtering directly from\n\t         * one exclusive set of targets to a different exclusive set of targets,\n\t         * to create a carousel-like effect, or a generally more subtle animation.\n\t         *\n\t         * @example <caption>Example: Disable the \"nudging\" of targets being filtered in and out simulatenously</caption>\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     animation: {\n\t         *         nudge: false\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        nudge\n\t         * @memberof    mixitup.Config.animation\n\t         * @instance\n\t         * @type        {boolean}\n\t         * @default     true\n\t         */\n\t\n\t        this.nudge = true;\n\t\n\t        /**\n\t         * A boolean dictating whether or not to clamp the height of the container while MixItUp's\n\t         * geometry tests are carried out before an operation.\n\t         *\n\t         * To prevent scroll-bar flicker, clamping is turned on by default. But in the case where the\n\t         * height of the container might affect its vertical positioning in the viewport\n\t         * (e.g. a vertically-centered container), this should be turned off to ensure accurate\n\t         * test results and a smooth animation.\n\t         *\n\t         * @example <caption>Example: Disable container height-clamping</caption>\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     animation: {\n\t         *         clampHeight: false\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        clampHeight\n\t         * @memberof    mixitup.Config.animation\n\t         * @instance\n\t         * @type        {boolean}\n\t         * @default     true\n\t         */\n\t\n\t        this.clampHeight = true;\n\t\n\t        /**\n\t         * A boolean dictating whether or not to clamp the width of the container while MixItUp's\n\t         * geometry tests are carried out before an operation.\n\t         *\n\t         * To prevent scroll-bar flicker, clamping is turned on by default. But in the case where the\n\t         * width of the container might affect its horitzontal positioning in the viewport\n\t         * (e.g. a horizontall-centered container), this should be turned off to ensure accurate\n\t         * test results and a smooth animation.\n\t         *\n\t         * @example <caption>Example: Disable container width-clamping</caption>\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     animation: {\n\t         *         clampWidth: false\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        clampWidth\n\t         * @memberof    mixitup.Config.animation\n\t         * @instance\n\t         * @type        {boolean}\n\t         * @default     true\n\t         */\n\t\n\t        this.clampWidth = true;\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.ConfigAnimation);\n\t\n\t    mixitup.ConfigAnimation.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.ConfigAnimation.prototype.constructor = mixitup.ConfigAnimation;\n\t\n\t    /**\n\t     * A group of properties relating to the behavior of the Mixer.\n\t     *\n\t     * @constructor\n\t     * @memberof    mixitup.Config\n\t     * @name        behavior\n\t     * @namespace\n\t     * @public\n\t     * @since       3.1.12\n\t     */\n\t\n\t    mixitup.ConfigBehavior = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        /**\n\t         * A boolean dictating whether to allow \"live\" sorting of the mixer.\n\t         *\n\t         * Because of the expensive nature of sorting, MixItUp makes use of several\n\t         * internal optimizations to skip redundant sorting operations, such as when\n\t         * the newly requested sort command is the same as the active one. The caveat\n\t         * to this optimization is that \"live\" edits to the value of a target's sorting\n\t         * attribute will be ignored when requesting a re-sort by the same attribute.\n\t         *\n\t         * By setting to `behavior.liveSort` to `true`, the mixer will always re-sort\n\t         * regardless of whether or not the sorting attribute and order have changed.\n\t         *\n\t         * @example <caption>Example: Enabling `liveSort` to allow for re-sorting</caption>\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     behavior: {\n\t         *         liveSort: true\n\t         *     },\n\t         *     load: {\n\t         *         sort: 'edited:desc'\n\t         *     }\n\t         * });\n\t         *\n\t         * var target = containerEl.children[3];\n\t         *\n\t         * console.log(target.getAttribute('data-edited')); // '2015-04-24'\n\t         *\n\t         * target.setAttribute('data-edited', '2017-08-10'); // Update the target's edited date\n\t         *\n\t         * mixer.sort('edited:desc')\n\t         *     .then(function(state) {\n\t         *         // The target is now at the top of the list\n\t         *\n\t         *         console.log(state.targets[0] === target); // true\n\t         *     });\n\t         *\n\t         * @name        liveSort\n\t         * @memberof    mixitup.Config.behavior\n\t         * @instance\n\t         * @type        {boolean}\n\t         * @default     false\n\t         */\n\t\n\t        this.liveSort = false;\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.ConfigBehavior);\n\t\n\t    mixitup.ConfigBehavior.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.ConfigBehavior.prototype.constructor = mixitup.ConfigBehavior;\n\t\n\t    /**\n\t     * A group of optional callback functions to be invoked at various\n\t     * points within the lifecycle of a mixer operation.\n\t     *\n\t     * Each function is analogous to an event of the same name triggered from the\n\t     * container element, and is invoked immediately after it.\n\t     *\n\t     * All callback functions receive the current `state` object as their first\n\t     * argument, as well as other more specific arguments described below.\n\t     *\n\t     * @constructor\n\t     * @memberof    mixitup.Config\n\t     * @name        callbacks\n\t     * @namespace\n\t     * @public\n\t     * @since       2.0.0\n\t     */\n\t\n\t    mixitup.ConfigCallbacks = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        /**\n\t         * A callback function invoked immediately after any MixItUp operation is requested\n\t         * and before animations have begun.\n\t         *\n\t         * A second `futureState` argument is passed to the function which represents the final\n\t         * state of the mixer once the requested operation has completed.\n\t         *\n\t         * @example <caption>Example: Adding an `onMixStart` callback function</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     callbacks: {\n\t         *         onMixStart: function(state, futureState) {\n\t         *              console.log('Starting operation...');\n\t         *         }\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        onMixStart\n\t         * @memberof    mixitup.Config.callbacks\n\t         * @instance\n\t         * @type        {function}\n\t         * @default     null\n\t         */\n\t\n\t        this.onMixStart = null;\n\t\n\t        /**\n\t         * A callback function invoked when a MixItUp operation is requested while another\n\t         * operation is in progress, and the animation queue is full, or queueing\n\t         * is disabled.\n\t         *\n\t         * @example <caption>Example: Adding an `onMixBusy` callback function</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     callbacks: {\n\t         *         onMixBusy: function(state) {\n\t         *              console.log('Mixer busy');\n\t         *         }\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        onMixBusy\n\t         * @memberof    mixitup.Config.callbacks\n\t         * @instance\n\t         * @type        {function}\n\t         * @default     null\n\t         */\n\t\n\t        this.onMixBusy  = null;\n\t\n\t        /**\n\t         * A callback function invoked after any MixItUp operation has completed, and the\n\t         * state has been updated.\n\t         *\n\t         * @example <caption>Example: Adding an `onMixEnd` callback function</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     callbacks: {\n\t         *         onMixEnd: function(state) {\n\t         *              console.log('Operation complete');\n\t         *         }\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        onMixEnd\n\t         * @memberof    mixitup.Config.callbacks\n\t         * @instance\n\t         * @type        {function}\n\t         * @default     null\n\t         */\n\t\n\t        this.onMixEnd   = null;\n\t\n\t        /**\n\t         * A callback function invoked whenever an operation \"fails\", i.e. no targets\n\t         * could be found matching the requested filter.\n\t         *\n\t         * @example <caption>Example: Adding an `onMixFail` callback function</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     callbacks: {\n\t         *         onMixFail: function(state) {\n\t         *              console.log('No items could be found matching the requested filter');\n\t         *         }\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        onMixFail\n\t         * @memberof    mixitup.Config.callbacks\n\t         * @instance\n\t         * @type        {function}\n\t         * @default     null\n\t         */\n\t\n\t        this.onMixFail  = null;\n\t\n\t        /**\n\t         * A callback function invoked whenever a MixItUp control is clicked, and before its\n\t         * respective operation is requested.\n\t         *\n\t         * The clicked element is assigned to the `this` keyword within the function. The original\n\t         * click event is passed to the function as the second argument, which can be useful if\n\t         * using `<a>` tags as controls where the default behavior needs to be prevented.\n\t         *\n\t         * Returning `false` from the callback will prevent the control click from triggering\n\t         * an operation.\n\t         *\n\t         * @example <caption>Example 1: Adding an `onMixClick` callback function</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     callbacks: {\n\t         *         onMixClick: function(state, originalEvent) {\n\t         *              console.log('The control \"' + this.innerText + '\" was clicked');\n\t         *         }\n\t         *     }\n\t         * });\n\t         *\n\t         * @example <caption>Example 2: Using `onMixClick` to manipulate the original click event</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     callbacks: {\n\t         *         onMixClick: function(state, originalEvent) {\n\t         *              // Prevent original click event from bubbling up:\n\t         *              originalEvent.stopPropagation();\n\t         *\n\t         *              // Prevent default behavior of clicked element:\n\t         *              originalEvent.preventDefault();\n\t         *         }\n\t         *     }\n\t         * });\n\t         *\n\t         * @example <caption>Example 3: Using `onMixClick` to conditionally cancel operations</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     callbacks: {\n\t         *         onMixClick: function(state, originalEvent) {\n\t         *              // Perform some conditional check:\n\t         *\n\t         *              if (myApp.isLoading) {\n\t         *                  // By returning false, we can prevent the control click from triggering an operation.\n\t         *\n\t         *                  return false;\n\t         *              }\n\t         *         }\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        onMixClick\n\t         * @memberof    mixitup.Config.callbacks\n\t         * @instance\n\t         * @type        {function}\n\t         * @default     null\n\t         */\n\t\n\t        this.onMixClick = null;\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.ConfigCallbacks);\n\t\n\t    mixitup.ConfigCallbacks.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.ConfigCallbacks.prototype.constructor = mixitup.ConfigCallbacks;\n\t\n\t    /**\n\t     * A group of properties relating to clickable control elements.\n\t     *\n\t     * @constructor\n\t     * @memberof    mixitup.Config\n\t     * @name        controls\n\t     * @namespace\n\t     * @public\n\t     * @since       2.0.0\n\t     */\n\t\n\t    mixitup.ConfigControls = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        /**\n\t         * A boolean dictating whether or not controls should be enabled for the mixer instance.\n\t         *\n\t         * If `true` (default behavior), MixItUp will search the DOM for any clickable elements with\n\t         * `data-filter`, `data-sort` or `data-toggle` attributes, and bind them for click events.\n\t         *\n\t         * If `false`, no click handlers will be bound, and all functionality must therefore be performed\n\t         * via the mixer's API methods.\n\t         *\n\t         * If you do not intend to use the default controls, setting this property to `false` will\n\t         * marginally improve the startup time of your mixer instance, and will also prevent any other active\n\t         * mixer instances in the DOM which are bound to controls from controlling the instance.\n\t         *\n\t         * @example <caption>Example: Disabling controls</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     controls: {\n\t         *         enable: false\n\t         *     }\n\t         * });\n\t         *\n\t         * // With the default controls disabled, we can only control\n\t         * // the mixer via its API methods, e.g.:\n\t         *\n\t         * mixer.filter('.cat-1');\n\t         *\n\t         * @name        enable\n\t         * @memberof    mixitup.Config.controls\n\t         * @instance\n\t         * @type        {boolean}\n\t         * @default     true\n\t         */\n\t\n\t        this.enable = true;\n\t\n\t        /**\n\t         * A boolean dictating whether or not to use event delegation when binding click events\n\t         * to the default controls.\n\t         *\n\t         * If `false` (default behavior), each control button in the DOM will be found and\n\t         * individually bound when a mixer is instantiated, with their corresponding actions\n\t         * cached for performance.\n\t         *\n\t         * If `true`, a single click handler will be applied to the `window` (or container element - see\n\t         * `config.controls.scope`), and any click events triggered by elements with `data-filter`,\n\t         * `data-sort` or `data-toggle` attributes present will be handled as they propagate upwards.\n\t         *\n\t         * If you require a user interface where control buttons may be added, removed, or changed during the\n\t         * lifetime of a mixer, `controls.live` should be set to `true`. There is a marginal but unavoidable\n\t         * performance deficit when using live controls, as the value of each control button must be read\n\t         * from the DOM in real time once the click event has propagated.\n\t         *\n\t         * @example <caption>Example: Setting live controls</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     controls: {\n\t         *         live: true\n\t         *     }\n\t         * });\n\t         *\n\t         * // Control buttons can now be added, remove and changed without breaking\n\t         * // the mixer's UI\n\t         *\n\t         * @name        live\n\t         * @memberof    mixitup.Config.controls\n\t         * @instance\n\t         * @type        {boolean}\n\t         * @default     true\n\t         */\n\t\n\t        this.live = false;\n\t\n\t        /**\n\t         * A string dictating the \"scope\" to use when binding or querying the default controls. The available\n\t         * values are `'global'` or `'local'`.\n\t         *\n\t         * When set to `'global'` (default behavior), MixItUp will query the entire document for control buttons\n\t         * to bind, or delegate click events from (see `config.controls.live`).\n\t         *\n\t         * When set to `'local'`, MixItUp will only query (or bind click events to) its own container element.\n\t         * This may be desireable if you require multiple active mixer instances within the same document, with\n\t         * controls that would otherwise intefere with each other if scoped globally.\n\t         *\n\t         * Conversely, if you wish to control multiple instances with a single UI, you would create one\n\t         * set of controls and keep the controls scope of each mixer set to `global`.\n\t         *\n\t         * @example <caption>Example: Setting 'local' scoped controls</caption>\n\t         * var mixerOne = mixitup(containerOne, {\n\t         *     controls: {\n\t         *         scope: 'local'\n\t         *     }\n\t         * });\n\t         *\n\t         * var mixerTwo = mixitup(containerTwo, {\n\t         *     controls: {\n\t         *         scope: 'local'\n\t         *     }\n\t         * });\n\t         *\n\t         * // Both mixers can now exist within the same document with\n\t         * // isolated controls placed within their container elements.\n\t         *\n\t         * @name        scope\n\t         * @memberof    mixitup.Config.controls\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     'global'\n\t         */\n\t\n\t        this.scope = 'global'; // enum: ['local' ,'global']\n\t\n\t        /**\n\t         * A string dictating the type of logic to apply when concatenating the filter selectors of\n\t         * active toggle buttons (i.e. any clickable element with a `data-toggle` attribute).\n\t         *\n\t         * If set to `'or'` (default behavior), selectors will be concatenated together as\n\t         * a comma-seperated list. For example:\n\t         *\n\t         * `'.cat-1, .cat-2'` (shows any elements matching `'.cat-1'` OR `'.cat-2'`)\n\t         *\n\t         * If set to `'and'`, selectors will be directly concatenated together. For example:\n\t         *\n\t         * `'.cat-1.cat-2'` (shows any elements which match both `'.cat-1'` AND `'.cat-2'`)\n\t         *\n\t         * @example <caption>Example: Setting \"and\" toggle logic</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     controls: {\n\t         *         toggleLogic: 'and'\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        toggleLogic\n\t         * @memberof    mixitup.Config.controls\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     'or'\n\t         */\n\t\n\t        this.toggleLogic = 'or'; // enum: ['or', 'and']\n\t\n\t        /**\n\t         * A string dictating the filter behavior when all toggles are inactive.\n\t         *\n\t         * When set to `'all'` (default behavior), *all* targets will be shown by default\n\t         * when no toggles are active, or at the moment all active toggles are toggled off.\n\t         *\n\t         * When set to `'none'`, no targets will be shown by default when no toggles are\n\t         * active, or at the moment all active toggles are toggled off.\n\t         *\n\t         * @example <caption>Example 1: Setting the default toggle behavior to `'all'`</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     controls: {\n\t         *         toggleDefault: 'all'\n\t         *     }\n\t         * });\n\t         *\n\t         * mixer.toggleOn('.cat-2')\n\t         *     .then(function() {\n\t         *         // Deactivate all active toggles\n\t         *\n\t         *         return mixer.toggleOff('.cat-2')\n\t         *     })\n\t         *     .then(function(state) {\n\t         *          console.log(state.activeFilter.selector); // 'all'\n\t         *          console.log(state.totalShow); // 12\n\t         *     });\n\t         *\n\t         * @example <caption>Example 2: Setting the default toggle behavior to `'none'`</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     controls: {\n\t         *         toggleDefault: 'none'\n\t         *     }\n\t         * });\n\t         *\n\t         * mixer.toggleOn('.cat-2')\n\t         *     .then(function() {\n\t         *         // Deactivate all active toggles\n\t         *\n\t         *         return mixer.toggleOff('.cat-2')\n\t         *     })\n\t         *     .then(function(state) {\n\t         *          console.log(state.activeFilter.selector); // 'none'\n\t         *          console.log(state.totalShow); // 0\n\t         *     });\n\t         *\n\t         * @name        toggleDefault\n\t         * @memberof    mixitup.Config.controls\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     'all'\n\t         */\n\t\n\t        this.toggleDefault = 'all'; // enum: ['all', 'none']\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.ConfigControls);\n\t\n\t    mixitup.ConfigControls.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.ConfigControls.prototype.constructor = mixitup.ConfigControls;\n\t\n\t    /**\n\t     * A group of properties defining the output and structure of class names programmatically\n\t     * added to controls and containers to reflect the state of the mixer.\n\t     *\n\t     * Most commonly, class names are added to controls by MixItUp to indicate that\n\t     * the control is active so that it can be styled accordingly - `'mixitup-control-active'` by default.\n\t     *\n\t     * Using a \"BEM\" like structure, each classname is broken into the three parts:\n\t     * a block namespace (`'mixitup'`), an element name (e.g. `'control'`), and an optional modifier\n\t     * name (e.g. `'active'`) reflecting the state of the element.\n\t     *\n\t     * By default, each part of the classname is concatenated together using single hyphens as\n\t     * delineators, but this can be easily customised to match the naming convention and style of\n\t     * your project.\n\t     *\n\t     * @constructor\n\t     * @memberof    mixitup.Config\n\t     * @name        classNames\n\t     * @namespace\n\t     * @public\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.ConfigClassNames = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        /**\n\t         * The \"block\" portion, or top-level namespace added to the start of any class names created by MixItUp.\n\t         *\n\t         * @example <caption>Example 1: changing the `config.classNames.block` value</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     classNames: {\n\t         *         block: 'portfolio'\n\t         *     }\n\t         * });\n\t         *\n\t         * // Active control output: \"portfolio-control-active\"\n\t         *\n\t         * @example <caption>Example 2: Removing `config.classNames.block`</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     classNames: {\n\t         *         block: ''\n\t         *     }\n\t         * });\n\t         *\n\t         * // Active control output: \"control-active\"\n\t         *\n\t         * @name        block\n\t         * @memberof    mixitup.Config.classNames\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     'mixitup'\n\t         */\n\t\n\t        this.block = 'mixitup';\n\t\n\t        /**\n\t         * The \"element\" portion of the class name added to container.\n\t         *\n\t         * @name        elementContainer\n\t         * @memberof    mixitup.Config.classNames\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     'container'\n\t         */\n\t\n\t        this.elementContainer = 'container';\n\t\n\t        /**\n\t         * The \"element\" portion of the class name added to filter controls.\n\t         *\n\t         * By default, all filter, sort, multimix and toggle controls take the same element value of `'control'`, but\n\t         * each type's element value can be individually overwritten to match the unique classNames of your controls as needed.\n\t         *\n\t         * @example <caption>Example 1: changing the `config.classNames.elementFilter` value</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     classNames: {\n\t         *         elementFilter: 'filter'\n\t         *     }\n\t         * });\n\t         *\n\t         * // Active filter output: \"mixitup-filter-active\"\n\t         *\n\t         * @example <caption>Example 2: changing the `config.classNames.block` and `config.classNames.elementFilter` values</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     classNames: {\n\t         *         block: 'portfolio',\n\t         *         elementFilter: 'filter'\n\t         *     }\n\t         * });\n\t         *\n\t         * // Active filter output: \"portfolio-filter-active\"\n\t         *\n\t         * @name        elementFilter\n\t         * @memberof    mixitup.Config.classNames\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     'control'\n\t         */\n\t\n\t        this.elementFilter = 'control';\n\t\n\t        /**\n\t         * The \"element\" portion of the class name added to sort controls.\n\t         *\n\t         * By default, all filter, sort, multimix and toggle controls take the same element value of `'control'`, but\n\t         * each type's element value can be individually overwritten to match the unique classNames of your controls as needed.\n\t         *\n\t         * @example <caption>Example 1: changing the `config.classNames.elementSort` value</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     classNames: {\n\t         *         elementSort: 'sort'\n\t         *     }\n\t         * });\n\t         *\n\t         * // Active sort output: \"mixitup-sort-active\"\n\t         *\n\t         * @example <caption>Example 2: changing the `config.classNames.block` and `config.classNames.elementSort` values</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     classNames: {\n\t         *         block: 'portfolio',\n\t         *         elementSort: 'sort'\n\t         *     }\n\t         * });\n\t         *\n\t         * // Active sort output: \"portfolio-sort-active\"\n\t         *\n\t         * @name        elementSort\n\t         * @memberof    mixitup.Config.classNames\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     'control'\n\t         */\n\t\n\t        this.elementSort = 'control';\n\t\n\t        /**\n\t         * The \"element\" portion of the class name added to multimix controls.\n\t         *\n\t         * By default, all filter, sort, multimix and toggle controls take the same element value of `'control'`, but\n\t         * each type's element value can be individually overwritten to match the unique classNames of your controls as needed.\n\t         *\n\t         * @example <caption>Example 1: changing the `config.classNames.elementMultimix` value</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     classNames: {\n\t         *         elementMultimix: 'multimix'\n\t         *     }\n\t         * });\n\t         *\n\t         * // Active multimix output: \"mixitup-multimix-active\"\n\t         *\n\t         * @example <caption>Example 2: changing the `config.classNames.block` and `config.classNames.elementMultimix` values</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     classNames: {\n\t         *         block: 'portfolio',\n\t         *         elementSort: 'multimix'\n\t         *     }\n\t         * });\n\t         *\n\t         * // Active multimix output: \"portfolio-multimix-active\"\n\t         *\n\t         * @name        elementMultimix\n\t         * @memberof    mixitup.Config.classNames\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     'control'\n\t         */\n\t\n\t        this.elementMultimix = 'control';\n\t\n\t        /**\n\t         * The \"element\" portion of the class name added to toggle controls.\n\t         *\n\t         * By default, all filter, sort, multimix and toggle controls take the same element value of `'control'`, but\n\t         * each type's element value can be individually overwritten to match the unique classNames of your controls as needed.\n\t         *\n\t         * @example <caption>Example 1: changing the `config.classNames.elementToggle` value</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     classNames: {\n\t         *         elementToggle: 'toggle'\n\t         *     }\n\t         * });\n\t         *\n\t         * // Active toggle output: \"mixitup-toggle-active\"\n\t         *\n\t         * @example <caption>Example 2: changing the `config.classNames.block` and `config.classNames.elementToggle` values</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     classNames: {\n\t         *         block: 'portfolio',\n\t         *         elementToggle: 'toggle'\n\t         *     }\n\t         * });\n\t         *\n\t         * // Active toggle output: \"portfolio-toggle-active\"\n\t         *\n\t         * @name        elementToggle\n\t         * @memberof    mixitup.Config.classNames\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     'control'\n\t         */\n\t\n\t        this.elementToggle = 'control';\n\t\n\t        /**\n\t         * The \"modifier\" portion of the class name added to active controls.\n\t         * @name        modifierActive\n\t         * @memberof    mixitup.Config.classNames\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     'active'\n\t         */\n\t\n\t        this.modifierActive = 'active';\n\t\n\t        /**\n\t         * The \"modifier\" portion of the class name added to disabled controls.\n\t         *\n\t         * @name        modifierDisabled\n\t         * @memberof    mixitup.Config.classNames\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     'disabled'\n\t         */\n\t\n\t        this.modifierDisabled = 'disabled';\n\t\n\t        /**\n\t         * The \"modifier\" portion of the class name added to the container when in a \"failed\" state.\n\t         *\n\t         * @name        modifierFailed\n\t         * @memberof    mixitup.Config.classNames\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     'failed'\n\t         */\n\t\n\t        this.modifierFailed = 'failed';\n\t\n\t        /**\n\t         * The delineator used between the \"block\" and \"element\" portions of any class name added by MixItUp.\n\t         *\n\t         * If the block portion is ommited by setting it to an empty string, no delineator will be added.\n\t         *\n\t         * @example <caption>Example: changing the delineator to match BEM convention</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     classNames: {\n\t         *         delineatorElement: '__'\n\t         *     }\n\t         * });\n\t         *\n\t         * // example active control output: \"mixitup__control-active\"\n\t         *\n\t         * @name        delineatorElement\n\t         * @memberof    mixitup.Config.classNames\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     '-'\n\t         */\n\t\n\t        this.delineatorElement = '-';\n\t\n\t        /**\n\t         * The delineator used between the \"element\" and \"modifier\" portions of any class name added by MixItUp.\n\t         *\n\t         * If the element portion is ommited by setting it to an empty string, no delineator will be added.\n\t         *\n\t         * @example <caption>Example: changing both delineators to match BEM convention</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     classNames: {\n\t         *         delineatorElement: '__'\n\t         *         delineatorModifier: '--'\n\t         *     }\n\t         * });\n\t         *\n\t         * // Active control output: \"mixitup__control--active\"\n\t         *\n\t         * @name        delineatorModifier\n\t         * @memberof    mixitup.Config.classNames\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     '-'\n\t         */\n\t\n\t        this.delineatorModifier = '-';\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.ConfigClassNames);\n\t\n\t    mixitup.ConfigClassNames.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.ConfigClassNames.prototype.constructor = mixitup.ConfigClassNames;\n\t\n\t    /**\n\t     * A group of properties relating to MixItUp's dataset API.\n\t     *\n\t     * @constructor\n\t     * @memberof    mixitup.Config\n\t     * @name        data\n\t     * @namespace\n\t     * @public\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.ConfigData = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        /**\n\t         * A string specifying the name of the key containing your data model's unique\n\t         * identifier (UID). To use the dataset API, a UID key must be specified and\n\t         * be present and unique on all objects in the dataset you provide to MixItUp.\n\t         *\n\t         * For example, if your dataset is made up of MongoDB documents, the UID\n\t         * key would be `'id'` or `'_id'`.\n\t         *\n\t         * @example <caption>Example: Setting the UID to `'id'`</caption>\n\t         * var mixer = mixitup(containerEl, {\n\t         *     data: {\n\t         *         uidKey: 'id'\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        uidKey\n\t         * @memberof    mixitup.Config.data\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     ''\n\t         */\n\t\n\t        this.uidKey = '';\n\t\n\t        /**\n\t         * A boolean dictating whether or not MixItUp should \"dirty check\" each object in\n\t         * your dataset for changes whenever `.dataset()` is called, and re-render any targets\n\t         * for which a change is found.\n\t         *\n\t         * Depending on the complexity of your data model, dirty checking can be expensive\n\t         * and is therefore disabled by default.\n\t         *\n\t         * NB: For changes to be detected, a new immutable instance of the edited model must be\n\t         * provided to mixitup, rather than manipulating properties on the existing instance.\n\t         * If your changes are a result of a DB write and read, you will most likely be calling\n\t         * `.dataset()` with a clean set of objects each time, so this will not be an issue.\n\t         *\n\t         * @example <caption>Example: Enabling dirty checking</caption>\n\t         *\n\t         * var myDataset = [\n\t         *     {\n\t         *         id: 0,\n\t         *         title: \"Blog Post Title 0\"\n\t         *         ...\n\t         *     },\n\t         *     {\n\t         *         id: 1,\n\t         *         title: \"Blog Post Title 1\"\n\t         *         ...\n\t         *     }\n\t         * ];\n\t         *\n\t         * // Instantiate a mixer with a pre-loaded dataset, and a target renderer\n\t         * // function defined\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     data: {\n\t         *         uidKey: 'id',\n\t         *         dirtyCheck: true\n\t         *     },\n\t         *     load: {\n\t         *         dataset: myDataset\n\t         *     },\n\t         *     render: {\n\t         *         target: function() { ... }\n\t         *     }\n\t         * });\n\t         *\n\t         * // For illustration, we will clone and edit the second object in the dataset.\n\t         * // NB: this would typically be done server-side in response to a DB update,\n\t         * and then re-queried via an API.\n\t         *\n\t         * myDataset[1] = Object.assign({}, myDataset[1]);\n\t         *\n\t         * myDataset[1].title = 'Blog Post Title 11';\n\t         *\n\t         * mixer.dataset(myDataset)\n\t         *    .then(function() {\n\t         *        // the target with ID \"1\", will be re-rendered reflecting its new title\n\t         *    });\n\t         *\n\t         * @name        dirtyCheck\n\t         * @memberof    mixitup.Config.data\n\t         * @instance\n\t         * @type        {boolean}\n\t         * @default     false\n\t         */\n\t\n\t        this.dirtyCheck = false;\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.ConfigData);\n\t\n\t    mixitup.ConfigData.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.ConfigData.prototype.constructor = mixitup.ConfigData;\n\t\n\t    /**\n\t     * A group of properties allowing the toggling of various debug features.\n\t     *\n\t     * @constructor\n\t     * @memberof    mixitup.Config\n\t     * @name        debug\n\t     * @namespace\n\t     * @public\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.ConfigDebug = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        /**\n\t         * A boolean dictating whether or not the mixer instance returned by the\n\t         * `mixitup()` factory function should expose private properties and methods.\n\t         *\n\t         * By default, mixer instances only expose their public API, but enabling\n\t         * debug mode will give you access to various mixer internals which may aid\n\t         * in debugging, or the authoring of extensions.\n\t         *\n\t         * @example <caption>Example: Enabling debug mode</caption>\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     debug: {\n\t         *         enable: true\n\t         *     }\n\t         * });\n\t         *\n\t         * // Private properties and methods will now be visible on the mixer instance:\n\t         *\n\t         * console.log(mixer);\n\t         *\n\t         * @name        enable\n\t         * @memberof    mixitup.Config.debug\n\t         * @instance\n\t         * @type        {boolean}\n\t         * @default     false\n\t         */\n\t\n\t        this.enable = false;\n\t\n\t        /**\n\t         * A boolean dictating whether or not warnings should be shown when various\n\t         * common gotchas occur.\n\t         *\n\t         * Warnings are intended to provide insights during development when something\n\t         * occurs that is not a fatal, but may indicate an issue with your integration,\n\t         * and are therefore turned on by default. However, you may wish to disable\n\t         * them in production.\n\t         *\n\t         * @example <caption>Example 1: Disabling warnings</caption>\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     debug: {\n\t         *         showWarnings: false\n\t         *     }\n\t         * });\n\t         *\n\t         * @example <caption>Example 2: Disabling warnings based on environment</caption>\n\t         *\n\t         * var showWarnings = myAppConfig.environment === 'development' ? true : false;\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     debug: {\n\t         *         showWarnings: showWarnings\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        showWarnings\n\t         * @memberof    mixitup.Config.debug\n\t         * @instance\n\t         * @type        {boolean}\n\t         * @default     true\n\t         */\n\t\n\t        this.showWarnings = true;\n\t\n\t        /**\n\t         * Used for server-side testing only.\n\t         *\n\t         * @private\n\t         * @name        fauxAsync\n\t         * @memberof    mixitup.Config.debug\n\t         * @instance\n\t         * @type        {boolean}\n\t         * @default     false\n\t         */\n\t\n\t        this.fauxAsync = false;\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.ConfigDebug);\n\t\n\t    mixitup.ConfigDebug.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.ConfigDebug.prototype.constructor = mixitup.ConfigDebug;\n\t\n\t    /**\n\t     * A group of properties relating to the layout of the container.\n\t     *\n\t     * @constructor\n\t     * @memberof    mixitup.Config\n\t     * @name        layout\n\t     * @namespace\n\t     * @public\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.ConfigLayout = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        /**\n\t         * A boolean dictating whether or not mixitup should query all descendants\n\t         * of the container for targets, or only immediate children.\n\t         *\n\t         * By default, mixitup will query all descendants matching the\n\t         * `selectors.target` selector when indexing targets upon instantiation.\n\t         * This allows for targets to be nested inside a sub-container which is\n\t         * useful when ring-fencing targets from locally scoped controls in your\n\t         * markup (see `controls.scope`).\n\t         *\n\t         * However, if you are building a more complex UI requiring the nesting\n\t         * of mixers within mixers, you will most likely want to limit targets to\n\t         * immediate children of the container by setting this property to `false`.\n\t         *\n\t         * @example <caption>Example: Restricting targets to immediate children</caption>\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     layout: {\n\t         *         allowNestedTargets: false\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        allowNestedTargets\n\t         * @memberof    mixitup.Config.layout\n\t         * @instance\n\t         * @type        {boolean}\n\t         * @default     true\n\t         */\n\t\n\t        this.allowNestedTargets = true;\n\t\n\t        /**\n\t         * A string specifying an optional class name to apply to the container when in\n\t         * its default state.\n\t         *\n\t         * By changing this class name or adding a class name to the container via the\n\t         * `.changeLayout()` API method, the CSS layout of the container can be changed,\n\t         * and MixItUp will attemp to gracefully animate the container and its targets\n\t         * between states.\n\t         *\n\t         * @example <caption>Example 1: Specifying a container class name</caption>\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     layout: {\n\t         *         containerClassName: 'grid'\n\t         *     }\n\t         * });\n\t         *\n\t         * @example <caption>Example 2: Changing the default class name with `.changeLayout()`</caption>\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     layout: {\n\t         *         containerClassName: 'grid'\n\t         *     }\n\t         * });\n\t         *\n\t         * mixer.changeLayout('list')\n\t         *     .then(function(state) {\n\t         *          console.log(state.activeContainerClass); // \"list\"\n\t         *     });\n\t         *\n\t         * @name        containerClassName\n\t         * @memberof    mixitup.Config.layout\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     ''\n\t         */\n\t\n\t        this.containerClassName = '';\n\t\n\t        /**\n\t         * A reference to a non-target sibling element after which to insert targets\n\t         * when there are no targets in the container.\n\t         *\n\t         * @example <caption>Example: Setting a `siblingBefore` reference element</caption>\n\t         *\n\t         * var addButton = containerEl.querySelector('button');\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     layout: {\n\t         *         siblingBefore: addButton\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        siblingBefore\n\t         * @memberof    mixitup.Config.layout\n\t         * @instance\n\t         * @type        {HTMLElement}\n\t         * @default     null\n\t         */\n\t\n\t        this.siblingBefore = null;\n\t\n\t        /**\n\t         * A reference to a non-target sibling element before which to insert targets\n\t         * when there are no targets in the container.\n\t         *\n\t         * @example <caption>Example: Setting an `siblingAfter` reference element</caption>\n\t         *\n\t         * var gap = containerEl.querySelector('.gap');\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     layout: {\n\t         *         siblingAfter: gap\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        siblingAfter\n\t         * @memberof    mixitup.Config.layout\n\t         * @instance\n\t         * @type        {HTMLElement}\n\t         * @default     null\n\t         */\n\t\n\t        this.siblingAfter = null;\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.ConfigLayout);\n\t\n\t    mixitup.ConfigLayout.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.ConfigLayout.prototype.constructor = mixitup.ConfigLayout;\n\t\n\t    /**\n\t     * A group of properties defining the initial state of the mixer on load (instantiation).\n\t     *\n\t     * @constructor\n\t     * @memberof    mixitup.Config\n\t     * @name        load\n\t     * @namespace\n\t     * @public\n\t     * @since       2.0.0\n\t     */\n\t\n\t    mixitup.ConfigLoad = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        /**\n\t         * A string defining any filtering to be statically applied to the mixer on load.\n\t         * As per the `.filter()` API, this can be any valid selector string, or the\n\t         * values `'all'` or `'none'`.\n\t         *\n\t         * @example <caption>Example 1: Defining an initial filter selector to be applied on load</caption>\n\t         *\n\t         * // The mixer will show only those targets matching '.category-a' on load.\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     load: {\n\t         *         filter: '.category-a'\n\t         *     }\n\t         * });\n\t         *\n\t         * @example <caption>Example 2: Hiding all targets on load</caption>\n\t         *\n\t         * // The mixer will show hide all targets on load.\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     load: {\n\t         *         filter: 'none'\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        filter\n\t         * @memberof    mixitup.Config.load\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     'all'\n\t         */\n\t\n\t        this.filter = 'all';\n\t\n\t        /**\n\t         * A string defining any sorting to be statically applied to the mixer on load.\n\t         * As per the `.sort()` API, this should be a valid \"sort string\" made up of\n\t         * an attribute to sort by (or `'default'`) followed by an optional sorting\n\t         * order, or the value `'random'`;\n\t         *\n\t         * @example <caption>Example: Defining sorting to be applied on load</caption>\n\t         *\n\t         * // The mixer will sort the container by the value of the `data-published-date`\n\t         * // attribute, in descending order.\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     load: {\n\t         *         sort: 'published-date:desc'\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        sort\n\t         * @memberof    mixitup.Config.load\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     'default:asc'\n\t         */\n\t\n\t        this.sort = 'default:asc';\n\t\n\t        /**\n\t         * An array of objects representing the underlying data of any pre-rendered targets,\n\t         * when using the `.dataset()` API.\n\t         *\n\t         * NB: If targets are pre-rendered when the mixer is instantiated, this must be set.\n\t         *\n\t         * @example <caption>Example: Defining the initial underyling dataset</caption>\n\t         *\n\t         * var myDataset = [\n\t         *     {\n\t         *         id: 0,\n\t         *         title: \"Blog Post Title 0\",\n\t         *         ...\n\t         *     },\n\t         *     {\n\t         *         id: 1,\n\t         *         title: \"Blog Post Title 1\",\n\t         *         ...\n\t         *     }\n\t         * ];\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     data: {\n\t         *         uidKey: 'id'\n\t         *     },\n\t         *     load: {\n\t         *         dataset: myDataset\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        dataset\n\t         * @memberof    mixitup.Config.load\n\t         * @instance\n\t         * @type        {Array.<object>}\n\t         * @default     null\n\t         */\n\t\n\t        this.dataset = null;\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.ConfigLoad);\n\t\n\t    mixitup.ConfigLoad.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.ConfigLoad.prototype.constructor = mixitup.ConfigLoad;\n\t\n\t    /**\n\t     * A group of properties defining the selectors used to query elements within a mixitup container.\n\t     *\n\t     * @constructor\n\t     * @memberof    mixitup.Config\n\t     * @name        selectors\n\t     * @namespace\n\t     * @public\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.ConfigSelectors = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        /**\n\t         * A selector string used to query and index target elements within the container.\n\t         *\n\t         * By default, the class selector `'.mix'` is used, but this can be changed to an\n\t         * attribute or element selector to match the style of your project.\n\t         *\n\t         * @example <caption>Example 1: Changing the target selector</caption>\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     selectors: {\n\t         *         target: '.portfolio-item'\n\t         *     }\n\t         * });\n\t         *\n\t         * @example <caption>Example 2: Using an attribute selector as a target selector</caption>\n\t         *\n\t         * // The mixer will search for any children with the attribute `data-ref=\"mix\"`\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     selectors: {\n\t         *         target: '[data-ref=\"mix\"]'\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        target\n\t         * @memberof    mixitup.Config.selectors\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     '.mix'\n\t         */\n\t\n\t        this.target = '.mix';\n\t\n\t        /**\n\t         * A optional selector string used to add further specificity to the querying of control elements,\n\t         * in addition to their mandatory data attribute (e.g. `data-filter`, `data-toggle`, `data-sort`).\n\t         *\n\t         * This can be used if other elements in your document must contain the above attributes\n\t         * (e.g. for use in third-party scripts), and would otherwise interfere with MixItUp. Adding\n\t         * an additional `control` selector of your choice allows MixItUp to restrict event handling\n\t         * to only those elements matching the defined selector.\n\t         *\n\t         * @name        control\n\t         * @memberof    mixitup.Config.selectors\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     ''\n\t         *\n\t         * @example <caption>Example 1: Adding a `selectors.control` selector</caption>\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     selectors: {\n\t         *         control: '.mixitup-control'\n\t         *     }\n\t         * });\n\t         *\n\t         * // Will not be handled:\n\t         * // <button data-filter=\".category-a\"></button>\n\t         *\n\t         * // Will be handled:\n\t         * // <button class=\"mixitup-control\" data-filter=\".category-a\"></button>\n\t         */\n\t\n\t        this.control = '';\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.ConfigSelectors);\n\t\n\t    mixitup.ConfigSelectors.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.ConfigSelectors.prototype.constructor = mixitup.ConfigSelectors;\n\t\n\t    /**\n\t     * A group of optional render functions for creating and updating elements.\n\t     *\n\t     * All render functions receive a data object, and should return a valid HTML string.\n\t     *\n\t     * @constructor\n\t     * @memberof    mixitup.Config\n\t     * @name        render\n\t     * @namespace\n\t     * @public\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.ConfigRender = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        /**\n\t         * A function returning an HTML string representing a target element, or a reference to a\n\t         * single DOM element.\n\t         *\n\t         * The function is invoked as part of the `.dataset()` API, whenever a new item is added\n\t         * to the dataset, or an item in the dataset changes (if `dataset.dirtyCheck` is enabled).\n\t         *\n\t         * The function receives the relevant dataset item as its first parameter.\n\t         *\n\t         * @example <caption>Example 1: Using string concatenation</caption>\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     render: {\n\t         *         target: function(item) {\n\t         *             return (\n\t         *                 '&lt;div class=\"mix\"&gt;' +\n\t         *                     '&lt;h2&gt;' + item.title + '&lt;/h2&gt;' +\n\t         *                 '&lt;/div&gt;'\n\t         *             );\n\t         *         }\n\t         *     }\n\t         * });\n\t         *\n\t         * @example <caption>Example 2: Using an ES2015 template literal</caption>\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     render: {\n\t         *         target: function(item) {\n\t         *             return (\n\t         *                 `&lt;div class=\"mix\"&gt;\n\t         *                     &lt;h2&gt;${item.title}&lt;/h2&gt;\n\t         *                  &lt;/div&gt;`\n\t         *             );\n\t         *         }\n\t         *     }\n\t         * });\n\t         *\n\t         * @example <caption>Example 3: Using a Handlebars template</caption>\n\t         *\n\t         * var targetTemplate = Handlebars.compile('&lt;div class=\"mix\"&gt;&lt;h2&gt;{{title}}&lt;/h2&gt;&lt;/div&gt;');\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     render: {\n\t         *         target: targetTemplate\n\t         *     }\n\t         * });\n\t         *\n\t         * @example <caption>Example 4: Returning a DOM element</caption>\n\t         *\n\t         * var mixer = mixitup(containerEl, {\n\t         *     render: {\n\t         *         target: function(item) {\n\t         *              // Create a single element using your framework's built-in renderer\n\t         *\n\t         *              var el = ...\n\t         *\n\t         *              return el;\n\t         *         }\n\t         *     }\n\t         * });\n\t         *\n\t         * @name        target\n\t         * @memberof    mixitup.Config.render\n\t         * @instance\n\t         * @type        {function}\n\t         * @default     'null'\n\t         */\n\t\n\t        this.target = null;\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.ConfigRender);\n\t\n\t    mixitup.ConfigRender.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.ConfigRender.prototype.constructor = mixitup.ConfigRender;\n\t\n\t    /**\n\t     * @constructor\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.ConfigTemplates = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.ConfigTemplates);\n\t\n\t    mixitup.ConfigTemplates.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.ConfigTemplates.prototype.constructor = mixitup.ConfigTemplates;\n\t\n\t    /**\n\t     * `mixitup.Config` is an interface used for customising the functionality of a\n\t     * mixer instance. It is organised into several semantically distinct sub-objects,\n\t     * each one pertaining to a particular aspect of MixItUp functionality.\n\t     *\n\t     * An object literal containing any or all of the available properies,\n\t     * known as the \"configuration object\", can be passed as the second parameter to\n\t     * the `mixitup` factory function when creating a mixer instance to customise its\n\t     * functionality as needed.\n\t     *\n\t     * If no configuration object is passed, the mixer instance will take on the default\n\t     * configuration values detailed below.\n\t     *\n\t     * @example <caption>Example 1: Creating and passing the configuration object</caption>\n\t     * // Create a configuration object with desired values\n\t     *\n\t     * var config = {\n\t     *     animation: {\n\t     *         enable: false\n\t     *     },\n\t     *     selectors: {\n\t     *         target: '.item'\n\t     *     }\n\t     * };\n\t     *\n\t     * // Pass the configuration object to the mixitup factory function\n\t     *\n\t     * var mixer = mixitup(containerEl, config);\n\t     *\n\t     * @example <caption>Example 2: Passing the configuration object inline</caption>\n\t     * // Typically, the configuration object is passed inline for brevity.\n\t     *\n\t     * var mixer = mixitup(containerEl, {\n\t     *     controls: {\n\t     *         live: true,\n\t     *         toggleLogic: 'and'\n\t     *     }\n\t     * });\n\t     *\n\t     *\n\t     * @constructor\n\t     * @memberof    mixitup\n\t     * @namespace\n\t     * @public\n\t     * @since       2.0.0\n\t     */\n\t\n\t    mixitup.Config = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        this.animation          = new mixitup.ConfigAnimation();\n\t        this.behavior           = new mixitup.ConfigBehavior();\n\t        this.callbacks          = new mixitup.ConfigCallbacks();\n\t        this.controls           = new mixitup.ConfigControls();\n\t        this.classNames         = new mixitup.ConfigClassNames();\n\t        this.data               = new mixitup.ConfigData();\n\t        this.debug              = new mixitup.ConfigDebug();\n\t        this.layout             = new mixitup.ConfigLayout();\n\t        this.load               = new mixitup.ConfigLoad();\n\t        this.selectors          = new mixitup.ConfigSelectors();\n\t        this.render             = new mixitup.ConfigRender();\n\t        this.templates          = new mixitup.ConfigTemplates();\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.Config);\n\t\n\t    mixitup.Config.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.Config.prototype.constructor = mixitup.Config;\n\t\n\t    /**\n\t     * @constructor\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.MixerDom = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        this.document               = null;\n\t        this.body                   = null;\n\t        this.container              = null;\n\t        this.parent                 = null;\n\t        this.targets                = [];\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.MixerDom);\n\t\n\t    mixitup.MixerDom.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.MixerDom.prototype.constructor = mixitup.MixerDom;\n\t\n\t    /**\n\t     * @constructor\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.UiClassNames = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        this.base       = '';\n\t        this.active     = '';\n\t        this.disabled   = '';\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.UiClassNames);\n\t\n\t    mixitup.UiClassNames.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.UiClassNames.prototype.constructor = mixitup.UiClassNames;\n\t\n\t    /**\n\t     * An object into which all arbitrary arguments sent to '.dataset()' are mapped.\n\t     *\n\t     * @constructor\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.CommandDataset = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        this.dataset = null;\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.CommandDataset);\n\t\n\t    mixitup.CommandDataset.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.CommandDataset.prototype.constructor = mixitup.CommandDataset;\n\t\n\t    /**\n\t     * An object into which all arbitrary arguments sent to '.multimix()' are mapped.\n\t     *\n\t     * @constructor\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.CommandMultimix = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        this.filter       = null;\n\t        this.sort         = null;\n\t        this.insert       = null;\n\t        this.remove       = null;\n\t        this.changeLayout = null;\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.CommandMultimix);\n\t\n\t    mixitup.CommandMultimix.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.CommandMultimix.prototype.constructor = mixitup.CommandMultimix;\n\t\n\t    /**\n\t     * An object into which all arbitrary arguments sent to '.filter()' are mapped.\n\t     *\n\t     * @constructor\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.CommandFilter = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        this.selector   = '';\n\t        this.collection = null;\n\t        this.action     = 'show'; // enum: ['show', 'hide']\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.CommandFilter);\n\t\n\t    mixitup.CommandFilter.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.CommandFilter.prototype.constructor = mixitup.CommandFilter;\n\t\n\t    /**\n\t     * An object into which all arbitrary arguments sent to '.sort()' are mapped.\n\t     *\n\t     * @constructor\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.CommandSort = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        this.sortString = '';\n\t        this.attribute  = '';\n\t        this.order      = 'asc';\n\t        this.collection = null;\n\t        this.next       = null;\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.CommandSort);\n\t\n\t    mixitup.CommandSort.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.CommandSort.prototype.constructor = mixitup.CommandSort;\n\t\n\t    /**\n\t     * An object into which all arbitrary arguments sent to '.insert()' are mapped.\n\t     *\n\t     * @constructor\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.CommandInsert = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        this.index      = 0;\n\t        this.collection = [];\n\t        this.position   = 'before'; // enum: ['before', 'after']\n\t        this.sibling    = null;\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.CommandInsert);\n\t\n\t    mixitup.CommandInsert.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.CommandInsert.prototype.constructor = mixitup.CommandInsert;\n\t\n\t    /**\n\t     * An object into which all arbitrary arguments sent to '.remove()' are mapped.\n\t     *\n\t     * @constructor\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.CommandRemove = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        this.targets    = [];\n\t        this.collection = [];\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.CommandRemove);\n\t\n\t    mixitup.CommandRemove.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.CommandRemove.prototype.constructor = mixitup.CommandRemove;\n\t\n\t    /**\n\t     * An object into which all arbitrary arguments sent to '.changeLayout()' are mapped.\n\t     *\n\t     * @constructor\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.CommandChangeLayout = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        this.containerClassName = '';\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.CommandChangeLayout);\n\t\n\t    mixitup.CommandChangeLayout.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.CommandChangeLayout.prototype.constructor = mixitup.CommandChangeLayout;\n\t\n\t    /**\n\t     * @constructor\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     * @param       {string}        type\n\t     * @param       {string}        selector\n\t     * @param       {boolean}       [live]\n\t     * @param       {string}        [parent]\n\t     *     An optional string representing the name of the mixer.dom property containing a reference to a parent element.\n\t     */\n\t\n\t    mixitup.ControlDefinition = function(type, selector, live, parent) {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        this.type    = type;\n\t        this.selector  = selector;\n\t        this.live      = live || false;\n\t        this.parent    = parent || '';\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.freeze(this);\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.ControlDefinition);\n\t\n\t    mixitup.ControlDefinition.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.ControlDefinition.prototype.constructor = mixitup.ControlDefinition;\n\t\n\t    mixitup.controlDefinitions = [];\n\t\n\t    mixitup.controlDefinitions.push(new mixitup.ControlDefinition('multimix', '[data-filter][data-sort]'));\n\t    mixitup.controlDefinitions.push(new mixitup.ControlDefinition('filter', '[data-filter]'));\n\t    mixitup.controlDefinitions.push(new mixitup.ControlDefinition('sort', '[data-sort]'));\n\t    mixitup.controlDefinitions.push(new mixitup.ControlDefinition('toggle', '[data-toggle]'));\n\t\n\t    /**\n\t     * @constructor\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.Control = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        this.el         = null;\n\t        this.selector   = '';\n\t        this.bound      = [];\n\t        this.pending    = -1;\n\t        this.type       = '';\n\t        this.status     = 'inactive'; // enum: ['inactive', 'active', 'disabled', 'live']\n\t        this.filter     = '';\n\t        this.sort       = '';\n\t        this.canDisable = false;\n\t        this.handler    = null;\n\t        this.classNames = new mixitup.UiClassNames();\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.Control);\n\t\n\t    mixitup.Control.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    h.extend(mixitup.Control.prototype,\n\t    /** @lends mixitup.Control */\n\t    {\n\t        constructor: mixitup.Control,\n\t\n\t        /**\n\t         * @private\n\t         * @param {HTMLElement} el\n\t         * @param {string}      type\n\t         * @param {string}      selector\n\t         */\n\t\n\t        init: function(el, type, selector) {\n\t            var self = this;\n\t\n\t            this.callActions('beforeInit', arguments);\n\t\n\t            self.el         = el;\n\t            self.type       = type;\n\t            self.selector   = selector;\n\t\n\t            if (self.selector) {\n\t                self.status = 'live';\n\t            } else {\n\t                self.canDisable = typeof self.el.disable === 'boolean';\n\t\n\t                switch (self.type) {\n\t                    case 'filter':\n\t                        self.filter = self.el.getAttribute('data-filter');\n\t\n\t                        break;\n\t                    case 'toggle':\n\t                        self.filter = self.el.getAttribute('data-toggle');\n\t\n\t                        break;\n\t                    case 'sort':\n\t                        self.sort   = self.el.getAttribute('data-sort');\n\t\n\t                        break;\n\t                    case 'multimix':\n\t                        self.filter = self.el.getAttribute('data-filter');\n\t                        self.sort   = self.el.getAttribute('data-sort');\n\t\n\t                        break;\n\t                }\n\t            }\n\t\n\t            self.bindClick();\n\t\n\t            mixitup.controls.push(self);\n\t\n\t            this.callActions('afterInit', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param  {mixitup.Mixer} mixer\n\t         * @return {boolean}\n\t         */\n\t\n\t        isBound: function(mixer) {\n\t            var self    = this,\n\t                isBound = false;\n\t\n\t            this.callActions('beforeIsBound', arguments);\n\t\n\t            isBound = self.bound.indexOf(mixer) > -1;\n\t\n\t            return self.callFilters('afterIsBound', isBound, arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param  {mixitup.Mixer} mixer\n\t         * @return {void}\n\t         */\n\t\n\t        addBinding: function(mixer) {\n\t            var self = this;\n\t\n\t            this.callActions('beforeAddBinding', arguments);\n\t\n\t            if (!self.isBound()) {\n\t                self.bound.push(mixer);\n\t            }\n\t\n\t            this.callActions('afterAddBinding', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param  {mixitup.Mixer} mixer\n\t         * @return {void}\n\t         */\n\t\n\t        removeBinding: function(mixer) {\n\t            var self        = this,\n\t                removeIndex = -1;\n\t\n\t            this.callActions('beforeRemoveBinding', arguments);\n\t\n\t            if ((removeIndex = self.bound.indexOf(mixer)) > -1) {\n\t                self.bound.splice(removeIndex, 1);\n\t            }\n\t\n\t            if (self.bound.length < 1) {\n\t                // No bindings exist, unbind event click handlers\n\t\n\t                self.unbindClick();\n\t\n\t                // Remove from `mixitup.controls` list\n\t\n\t                removeIndex = mixitup.controls.indexOf(self);\n\t\n\t                mixitup.controls.splice(removeIndex, 1);\n\t\n\t                if (self.status === 'active') {\n\t                    self.renderStatus(self.el, 'inactive');\n\t                }\n\t            }\n\t\n\t            this.callActions('afterRemoveBinding', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @return {void}\n\t         */\n\t\n\t        bindClick: function() {\n\t            var self = this;\n\t\n\t            this.callActions('beforeBindClick', arguments);\n\t\n\t            self.handler = function(e) {\n\t                self.handleClick(e);\n\t            };\n\t\n\t            h.on(self.el, 'click', self.handler);\n\t\n\t            this.callActions('afterBindClick', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @return {void}\n\t         */\n\t\n\t        unbindClick: function() {\n\t            var self = this;\n\t\n\t            this.callActions('beforeUnbindClick', arguments);\n\t\n\t            h.off(self.el, 'click', self.handler);\n\t\n\t            self.handler = null;\n\t\n\t            this.callActions('afterUnbindClick', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @param   {MouseEvent} e\n\t         * @return  {void}\n\t         */\n\t\n\t        handleClick: function(e) {\n\t            var self        = this,\n\t                button      = null,\n\t                mixer       = null,\n\t                isActive    = false,\n\t                returnValue = void(0),\n\t                command     = {},\n\t                clone       = null,\n\t                commands    = [],\n\t                i           = -1;\n\t\n\t            this.callActions('beforeHandleClick', arguments);\n\t\n\t            this.pending = 0;\n\t\n\t            mixer = self.bound[0];\n\t\n\t            if (!self.selector) {\n\t                button = self.el;\n\t            } else {\n\t                button = h.closestParent(e.target, mixer.config.selectors.control + self.selector, true, mixer.dom.document);\n\t            }\n\t\n\t            if (!button) {\n\t                self.callActions('afterHandleClick', arguments);\n\t\n\t                return;\n\t            }\n\t\n\t            switch (self.type) {\n\t                case 'filter':\n\t                    command.filter = self.filter || button.getAttribute('data-filter');\n\t\n\t                    break;\n\t                case 'sort':\n\t                    command.sort = self.sort || button.getAttribute('data-sort');\n\t\n\t                    break;\n\t                case 'multimix':\n\t                    command.filter  = self.filter || button.getAttribute('data-filter');\n\t                    command.sort    = self.sort || button.getAttribute('data-sort');\n\t\n\t                    break;\n\t                case 'toggle':\n\t                    command.filter  = self.filter || button.getAttribute('data-toggle');\n\t\n\t                    if (self.status === 'live') {\n\t                        isActive = h.hasClass(button, self.classNames.active);\n\t                    } else {\n\t                        isActive = self.status === 'active';\n\t                    }\n\t\n\t                    break;\n\t            }\n\t\n\t            for (i = 0; i < self.bound.length; i++) {\n\t                // Create a clone of the command for each bound mixer instance\n\t\n\t                clone = new mixitup.CommandMultimix();\n\t\n\t                h.extend(clone, command);\n\t\n\t                commands.push(clone);\n\t            }\n\t\n\t            commands = self.callFilters('commandsHandleClick', commands, arguments);\n\t\n\t            self.pending = self.bound.length;\n\t\n\t            for (i = 0; mixer = self.bound[i]; i++) {\n\t                command = commands[i];\n\t\n\t                if (!command) {\n\t                    // An extension may set a command null to indicate that the click should not be handled\n\t\n\t                    continue;\n\t                }\n\t\n\t                if (!mixer.lastClicked) {\n\t                    mixer.lastClicked = button;\n\t                }\n\t\n\t                mixitup.events.fire('mixClick', mixer.dom.container, {\n\t                    state: mixer.state,\n\t                    instance: mixer,\n\t                    originalEvent: e,\n\t                    control: mixer.lastClicked\n\t                }, mixer.dom.document);\n\t\n\t                if (typeof mixer.config.callbacks.onMixClick === 'function') {\n\t                    returnValue = mixer.config.callbacks.onMixClick.call(mixer.lastClicked, mixer.state, e, mixer);\n\t\n\t                    if (returnValue === false) {\n\t                        // User has returned `false` from the callback, so do not handle click\n\t\n\t                        continue;\n\t                    }\n\t                }\n\t\n\t                if (self.type === 'toggle') {\n\t                    isActive ? mixer.toggleOff(command.filter) : mixer.toggleOn(command.filter);\n\t                } else {\n\t                    mixer.multimix(command);\n\t                }\n\t            }\n\t\n\t            this.callActions('afterHandleClick', arguments);\n\t        },\n\t\n\t        /**\n\t         * @param   {object}          command\n\t         * @param   {Array<string>}   toggleArray\n\t         * @return  {void}\n\t         */\n\t\n\t        update: function(command, toggleArray) {\n\t            var self    = this,\n\t                actions = new mixitup.CommandMultimix();\n\t\n\t            self.callActions('beforeUpdate', arguments);\n\t\n\t            self.pending--;\n\t\n\t            self.pending = Math.max(0, self.pending);\n\t\n\t            if (self.pending > 0) return;\n\t\n\t            if (self.status === 'live') {\n\t                // Live control (status unknown)\n\t\n\t                self.updateLive(command, toggleArray);\n\t            } else {\n\t                // Static control\n\t\n\t                actions.sort    = self.sort;\n\t                actions.filter  = self.filter;\n\t\n\t                self.callFilters('actionsUpdate', actions, arguments);\n\t\n\t                self.parseStatusChange(self.el, command, actions, toggleArray);\n\t            }\n\t\n\t            self.callActions('afterUpdate', arguments);\n\t        },\n\t\n\t        /**\n\t         * @param   {mixitup.CommandMultimix} command\n\t         * @param   {Array<string>}           toggleArray\n\t         * @return  {void}\n\t         */\n\t\n\t        updateLive: function(command, toggleArray) {\n\t            var self            = this,\n\t                controlButtons  = null,\n\t                actions         = null,\n\t                button          = null,\n\t                i               = -1;\n\t\n\t            self.callActions('beforeUpdateLive', arguments);\n\t\n\t            if (!self.el) return;\n\t\n\t            controlButtons = self.el.querySelectorAll(self.selector);\n\t\n\t            for (i = 0; button = controlButtons[i]; i++) {\n\t                actions = new mixitup.CommandMultimix();\n\t\n\t                switch (self.type) {\n\t                    case 'filter':\n\t                        actions.filter = button.getAttribute('data-filter');\n\t\n\t                        break;\n\t                    case 'sort':\n\t                        actions.sort = button.getAttribute('data-sort');\n\t\n\t                        break;\n\t                    case 'multimix':\n\t                        actions.filter  = button.getAttribute('data-filter');\n\t                        actions.sort    = button.getAttribute('data-sort');\n\t\n\t                        break;\n\t                    case 'toggle':\n\t                        actions.filter  = button.getAttribute('data-toggle');\n\t\n\t                        break;\n\t                }\n\t\n\t                actions = self.callFilters('actionsUpdateLive', actions, arguments);\n\t\n\t                self.parseStatusChange(button, command, actions, toggleArray);\n\t            }\n\t\n\t            self.callActions('afterUpdateLive', arguments);\n\t        },\n\t\n\t        /**\n\t         * @param   {HTMLElement}             button\n\t         * @param   {mixitup.CommandMultimix} command\n\t         * @param   {mixitup.CommandMultimix} actions\n\t         * @param   {Array<string>}           toggleArray\n\t         * @return  {void}\n\t         */\n\t\n\t        parseStatusChange: function(button, command, actions, toggleArray) {\n\t            var self    = this,\n\t                alias   = '',\n\t                toggle  = '',\n\t                i       = -1;\n\t\n\t            self.callActions('beforeParseStatusChange', arguments);\n\t\n\t            switch (self.type) {\n\t                case 'filter':\n\t                    if (command.filter === actions.filter) {\n\t                        self.renderStatus(button, 'active');\n\t                    } else {\n\t                        self.renderStatus(button, 'inactive');\n\t                    }\n\t\n\t                    break;\n\t                case 'multimix':\n\t                    if (command.sort === actions.sort && command.filter === actions.filter) {\n\t                        self.renderStatus(button, 'active');\n\t                    } else {\n\t                        self.renderStatus(button, 'inactive');\n\t                    }\n\t\n\t                    break;\n\t                case 'sort':\n\t                    if (command.sort.match(/:asc/g)) {\n\t                        alias = command.sort.replace(/:asc/g, '');\n\t                    }\n\t\n\t                    if (command.sort === actions.sort || alias === actions.sort) {\n\t                        self.renderStatus(button, 'active');\n\t                    } else {\n\t                        self.renderStatus(button, 'inactive');\n\t                    }\n\t\n\t                    break;\n\t                case 'toggle':\n\t                    if (toggleArray.length < 1) self.renderStatus(button, 'inactive');\n\t\n\t                    if (command.filter === actions.filter) {\n\t                        self.renderStatus(button, 'active');\n\t                    }\n\t\n\t                    for (i = 0; i < toggleArray.length; i++) {\n\t                        toggle = toggleArray[i];\n\t\n\t                        if (toggle === actions.filter) {\n\t                            // Button matches one active toggle\n\t\n\t                            self.renderStatus(button, 'active');\n\t\n\t                            break;\n\t                        }\n\t\n\t                        self.renderStatus(button, 'inactive');\n\t                    }\n\t\n\t                    break;\n\t            }\n\t\n\t            self.callActions('afterParseStatusChange', arguments);\n\t        },\n\t\n\t        /**\n\t         * @param   {HTMLElement}   button\n\t         * @param   {string}        status\n\t         * @return  {void}\n\t         */\n\t\n\t        renderStatus: function(button, status) {\n\t            var self = this;\n\t\n\t            self.callActions('beforeRenderStatus', arguments);\n\t\n\t            switch (status) {\n\t                case 'active':\n\t                    h.addClass(button, self.classNames.active);\n\t                    h.removeClass(button, self.classNames.disabled);\n\t\n\t                    if (self.canDisable) self.el.disabled = false;\n\t\n\t                    break;\n\t                case 'inactive':\n\t                    h.removeClass(button, self.classNames.active);\n\t                    h.removeClass(button, self.classNames.disabled);\n\t\n\t                    if (self.canDisable) self.el.disabled = false;\n\t\n\t                    break;\n\t                case 'disabled':\n\t                    if (self.canDisable) self.el.disabled = true;\n\t\n\t                    h.addClass(button, self.classNames.disabled);\n\t                    h.removeClass(button, self.classNames.active);\n\t\n\t                    break;\n\t            }\n\t\n\t            if (self.status !== 'live') {\n\t                // Update the control's status propery if not live\n\t\n\t                self.status = status;\n\t            }\n\t\n\t            self.callActions('afterRenderStatus', arguments);\n\t        }\n\t    });\n\t\n\t    mixitup.controls = [];\n\t\n\t    /**\n\t     * @constructor\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.StyleData = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        this.x              = 0;\n\t        this.y              = 0;\n\t        this.top            = 0;\n\t        this.right          = 0;\n\t        this.bottom         = 0;\n\t        this.left           = 0;\n\t        this.width          = 0;\n\t        this.height         = 0;\n\t        this.marginRight    = 0;\n\t        this.marginBottom   = 0;\n\t        this.opacity        = 0;\n\t        this.scale          = new mixitup.TransformData();\n\t        this.translateX     = new mixitup.TransformData();\n\t        this.translateY     = new mixitup.TransformData();\n\t        this.translateZ     = new mixitup.TransformData();\n\t        this.rotateX        = new mixitup.TransformData();\n\t        this.rotateY        = new mixitup.TransformData();\n\t        this.rotateZ        = new mixitup.TransformData();\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.StyleData);\n\t\n\t    mixitup.StyleData.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.StyleData.prototype.constructor = mixitup.StyleData;\n\t\n\t    /**\n\t     * @constructor\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.TransformData = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        this.value  = 0;\n\t        this.unit   = '';\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.TransformData);\n\t\n\t    mixitup.TransformData.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.TransformData.prototype.constructor = mixitup.TransformData;\n\t\n\t    /**\n\t     * @constructor\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.TransformDefaults = function() {\n\t        mixitup.StyleData.apply(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        this.scale.value        = 0.01;\n\t        this.scale.unit         = '';\n\t\n\t        this.translateX.value   = 20;\n\t        this.translateX.unit    = 'px';\n\t\n\t        this.translateY.value   = 20;\n\t        this.translateY.unit    = 'px';\n\t\n\t        this.translateZ.value   = 20;\n\t        this.translateZ.unit    = 'px';\n\t\n\t        this.rotateX.value      = 90;\n\t        this.rotateX.unit       = 'deg';\n\t\n\t        this.rotateY.value      = 90;\n\t        this.rotateY.unit       = 'deg';\n\t\n\t        this.rotateX.value      = 90;\n\t        this.rotateX.unit       = 'deg';\n\t\n\t        this.rotateZ.value      = 180;\n\t        this.rotateZ.unit       = 'deg';\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.TransformDefaults);\n\t\n\t    mixitup.TransformDefaults.prototype = Object.create(mixitup.StyleData.prototype);\n\t\n\t    mixitup.TransformDefaults.prototype.constructor = mixitup.TransformDefaults;\n\t\n\t    /**\n\t     * @private\n\t     * @static\n\t     * @since   3.0.0\n\t     * @type    {mixitup.TransformDefaults}\n\t     */\n\t\n\t    mixitup.transformDefaults = new mixitup.TransformDefaults();\n\t\n\t    /**\n\t     * @constructor\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.EventDetail = function() {\n\t        this.state          = null;\n\t        this.futureState    = null;\n\t        this.instance       = null;\n\t        this.originalEvent  = null;\n\t    };\n\t\n\t    /**\n\t     * The `mixitup.Events` class contains all custom events dispatched by MixItUp at various\n\t     * points within the lifecycle of a mixer operation.\n\t     *\n\t     * Each event is analogous to the callback function of the same name defined in\n\t     * the `callbacks` configuration object, and is triggered immediately before it.\n\t     *\n\t     * Events are always triggered from the container element on which MixItUp is instantiated\n\t     * upon.\n\t     *\n\t     * As with any event, registered event handlers receive the event object as a parameter\n\t     * which includes a `detail` property containting references to the current `state`,\n\t     * the `mixer` instance, and other event-specific properties described below.\n\t     *\n\t     * @constructor\n\t     * @namespace\n\t     * @memberof    mixitup\n\t     * @public\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.Events = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        /**\n\t         * A custom event triggered immediately after any MixItUp operation is requested\n\t         * and before animations have begun.\n\t         *\n\t         * The `mixStart` event also exposes a `futureState` property via the\n\t         * `event.detail` object, which represents the final state of the mixer once\n\t         * the requested operation has completed.\n\t         *\n\t         * @name        mixStart\n\t         * @memberof    mixitup.Events\n\t         * @static\n\t         * @type        {CustomEvent}\n\t         */\n\t\n\t        this.mixStart = null;\n\t\n\t        /**\n\t         * A custom event triggered when a MixItUp operation is requested while another\n\t         * operation is in progress, and the animation queue is full, or queueing\n\t         * is disabled.\n\t         *\n\t         * @name        mixBusy\n\t         * @memberof    mixitup.Events\n\t         * @static\n\t         * @type        {CustomEvent}\n\t         */\n\t\n\t        this.mixBusy = null;\n\t\n\t        /**\n\t         * A custom event triggered after any MixItUp operation has completed, and the\n\t         * state has been updated.\n\t         *\n\t         * @name        mixEnd\n\t         * @memberof    mixitup.Events\n\t         * @static\n\t         * @type        {CustomEvent}\n\t         */\n\t\n\t        this.mixEnd = null;\n\t\n\t        /**\n\t         * A custom event triggered whenever a filter operation \"fails\", i.e. no targets\n\t         * could be found matching the requested filter.\n\t         *\n\t         * @name        mixFail\n\t         * @memberof    mixitup.Events\n\t         * @static\n\t         * @type        {CustomEvent}\n\t         */\n\t\n\t        this.mixFail = null;\n\t\n\t        /**\n\t         * A custom event triggered whenever a MixItUp control is clicked, and before its\n\t         * respective operation is requested.\n\t         *\n\t         * This event also exposes an `originalEvent` property via the `event.detail`\n\t         * object, which holds a reference to the original click event.\n\t         *\n\t         * @name        mixClick\n\t         * @memberof    mixitup.Events\n\t         * @static\n\t         * @type        {CustomEvent}\n\t         */\n\t\n\t        this.mixClick = null;\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.Events);\n\t\n\t    mixitup.Events.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.Events.prototype.constructor = mixitup.Events;\n\t\n\t    /**\n\t     * @private\n\t     * @param   {string}      eventType\n\t     * @param   {Element}     el\n\t     * @param   {object}      detail\n\t     * @param   {Document}    [doc]\n\t     */\n\t\n\t    mixitup.Events.prototype.fire = function(eventType, el, detail, doc) {\n\t        var self        = this,\n\t            event       = null,\n\t            eventDetail = new mixitup.EventDetail();\n\t\n\t        self.callActions('beforeFire', arguments);\n\t\n\t        if (typeof self[eventType] === 'undefined') {\n\t            throw new Error('Event type \"' + eventType + '\" not found.');\n\t        }\n\t\n\t        eventDetail.state = new mixitup.State();\n\t\n\t        h.extend(eventDetail.state, detail.state);\n\t\n\t        if (detail.futureState) {\n\t            eventDetail.futureState = new mixitup.State();\n\t\n\t            h.extend(eventDetail.futureState, detail.futureState);\n\t        }\n\t\n\t        eventDetail.instance = detail.instance;\n\t\n\t        if (detail.originalEvent) {\n\t            eventDetail.originalEvent = detail.originalEvent;\n\t        }\n\t\n\t        event = h.getCustomEvent(eventType, eventDetail, doc);\n\t\n\t        self.callFilters('eventFire', event, arguments);\n\t\n\t        el.dispatchEvent(event);\n\t    };\n\t\n\t    // Asign a singleton instance to `mixitup.events`:\n\t\n\t    mixitup.events = new mixitup.Events();\n\t\n\t    /**\n\t     * @constructor\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.QueueItem = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        this.args           = [];\n\t        this.instruction    = null;\n\t        this.triggerElement = null;\n\t        this.deferred       = null;\n\t        this.isToggling     = false;\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.QueueItem);\n\t\n\t    mixitup.QueueItem.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.QueueItem.prototype.constructor = mixitup.QueueItem;\n\t\n\t    /**\n\t     * The `mixitup.Mixer` class is used to hold discreet, user-configured\n\t     * instances of MixItUp on a provided container element.\n\t     *\n\t     * Mixer instances are returned whenever the `mixitup()` factory function is called,\n\t     * which expose a range of methods enabling API-based filtering, sorting,\n\t     * insertion, removal and more.\n\t     *\n\t     * @constructor\n\t     * @namespace\n\t     * @memberof    mixitup\n\t     * @public\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.Mixer = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        this.config            = new mixitup.Config();\n\t\n\t        this.id                = '';\n\t\n\t        this.isBusy            = false;\n\t        this.isToggling        = false;\n\t        this.incPadding        = true;\n\t\n\t        this.controls          = [];\n\t        this.targets           = [];\n\t        this.origOrder         = [];\n\t        this.cache             = {};\n\t\n\t        this.toggleArray       = [];\n\t\n\t        this.targetsMoved      = 0;\n\t        this.targetsImmovable  = 0;\n\t        this.targetsBound      = 0;\n\t        this.targetsDone       = 0;\n\t\n\t        this.staggerDuration   = 0;\n\t        this.effectsIn         = null;\n\t        this.effectsOut        = null;\n\t        this.transformIn       = [];\n\t        this.transformOut      = [];\n\t        this.queue             = [];\n\t\n\t        this.state             = null;\n\t        this.lastOperation     = null;\n\t        this.lastClicked       = null;\n\t        this.userCallback      = null;\n\t        this.userDeferred      = null;\n\t\n\t        this.dom               = new mixitup.MixerDom();\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.Mixer);\n\t\n\t    mixitup.Mixer.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    h.extend(mixitup.Mixer.prototype,\n\t    /** @lends mixitup.Mixer */\n\t    {\n\t        constructor: mixitup.Mixer,\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since 3.0.0\n\t         * @param {HTMLElement} container\n\t         * @param {HTMLElement} document\n\t         * @param {string}      id\n\t         * @param {object}      [config]\n\t         */\n\t\n\t        attach: function(container, document, id, config) {\n\t            var self    = this,\n\t                target  = null,\n\t                i       = -1;\n\t\n\t            self.callActions('beforeAttach', arguments);\n\t\n\t            self.id = id;\n\t\n\t            if (config) {\n\t                h.extend(self.config, config, true, true);\n\t            }\n\t\n\t            self.sanitizeConfig();\n\t\n\t            self.cacheDom(container, document);\n\t\n\t            if (self.config.layout.containerClassName) {\n\t                h.addClass(self.dom.container, self.config.layout.containerClassName);\n\t            }\n\t\n\t            if (!mixitup.features.has.transitions) {\n\t                self.config.animation.enable = false;\n\t            }\n\t\n\t            if (typeof window.console === 'undefined') {\n\t                self.config.debug.showWarnings = false;\n\t            }\n\t\n\t            if (self.config.data.uidKey) {\n\t                // If the dataset API is in use, force disable controls\n\t\n\t                self.config.controls.enable = false;\n\t            }\n\t\n\t            self.indexTargets();\n\t\n\t            self.state = self.getInitialState();\n\t\n\t            for (i = 0; target = self.lastOperation.toHide[i]; i++) {\n\t                target.hide();\n\t            }\n\t\n\t            if (self.config.controls.enable) {\n\t                self.initControls();\n\t\n\t                self.buildToggleArray(null, self.state);\n\t\n\t                self.updateControls({\n\t                    filter: self.state.activeFilter,\n\t                    sort: self.state.activeSort\n\t                });\n\t            }\n\t\n\t            self.parseEffects();\n\t\n\t            self.callActions('afterAttach', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since 3.0.0\n\t         * @return {void}\n\t         */\n\t\n\t        sanitizeConfig: function() {\n\t            var self = this;\n\t\n\t            self.callActions('beforeSanitizeConfig', arguments);\n\t\n\t            // Sanitize enum/string config options\n\t\n\t            self.config.controls.scope          = self.config.controls.scope.toLowerCase().trim();\n\t            self.config.controls.toggleLogic    = self.config.controls.toggleLogic.toLowerCase().trim();\n\t            self.config.controls.toggleDefault  = self.config.controls.toggleDefault.toLowerCase().trim();\n\t\n\t            self.config.animation.effects       = self.config.animation.effects.trim();\n\t\n\t            self.callActions('afterSanitizeConfig', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @return  {mixitup.State}\n\t         */\n\t\n\t        getInitialState: function() {\n\t            var self        = this,\n\t                state       = new mixitup.State(),\n\t                operation   = new mixitup.Operation();\n\t\n\t            self.callActions('beforeGetInitialState', arguments);\n\t\n\t            // Map initial values into a mock state object in order to construct an operation\n\t\n\t            state.activeContainerClassName = self.config.layout.containerClassName;\n\t\n\t            if (self.config.load.dataset) {\n\t                // Dataset API\n\t\n\t                if (!self.config.data.uidKey || typeof self.config.data.uidKey !== 'string') {\n\t                    throw new TypeError(mixitup.messages.errorConfigDataUidKeyNotSet());\n\t                }\n\t\n\t                operation.startDataset = operation.newDataset = state.activeDataset = self.config.load.dataset.slice();\n\t                operation.startContainerClassName = operation.newContainerClassName = state.activeContainerClassName;\n\t                operation.show = self.targets.slice();\n\t\n\t                state = self.callFilters('stateGetInitialState', state, arguments);\n\t            } else {\n\t                // DOM API\n\t\n\t                state.activeFilter              = self.parseFilterArgs([self.config.load.filter]).command;\n\t                state.activeSort                = self.parseSortArgs([self.config.load.sort]).command;\n\t                state.totalTargets              = self.targets.length;\n\t\n\t                state = self.callFilters('stateGetInitialState', state, arguments);\n\t\n\t                if (\n\t                    state.activeSort.collection || state.activeSort.attribute ||\n\t                    state.activeSort.order === 'random' || state.activeSort.order === 'desc'\n\t                ) {\n\t                    // Sorting on load\n\t\n\t                    operation.newSort = state.activeSort;\n\t\n\t                    self.sortOperation(operation);\n\t\n\t                    self.printSort(false, operation);\n\t\n\t                    self.targets = operation.newOrder;\n\t                } else {\n\t                    operation.startOrder = operation.newOrder = self.targets;\n\t                }\n\t\n\t                operation.startFilter               = operation.newFilter               = state.activeFilter;\n\t                operation.startSort                 = operation.newSort                 = state.activeSort;\n\t                operation.startContainerClassName   = operation.newContainerClassName   = state.activeContainerClassName;\n\t\n\t                if (operation.newFilter.selector === 'all') {\n\t                    operation.newFilter.selector = self.config.selectors.target;\n\t                } else if (operation.newFilter.selector === 'none') {\n\t                    operation.newFilter.selector = '';\n\t                }\n\t            }\n\t\n\t            operation = self.callFilters('operationGetInitialState', operation, [state]);\n\t\n\t            self.lastOperation = operation;\n\t\n\t            if (operation.newFilter) {\n\t                self.filterOperation(operation);\n\t            }\n\t\n\t            state = self.buildState(operation);\n\t\n\t            return state;\n\t        },\n\t\n\t        /**\n\t         * Caches references of DOM elements neccessary for the mixer's functionality.\n\t         *\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {HTMLElement}       el\n\t         * @param   {HTMLHtmlElement}   document\n\t         * @return  {void}\n\t         */\n\t\n\t        cacheDom: function(el, document) {\n\t            var self    = this;\n\t\n\t            self.callActions('beforeCacheDom', arguments);\n\t\n\t            self.dom.document  = document;\n\t            self.dom.body      = self.dom.document.querySelector('body');\n\t            self.dom.container = el;\n\t            self.dom.parent    = el;\n\t\n\t            self.callActions('afterCacheDom', arguments);\n\t        },\n\t\n\t        /**\n\t         * Indexes all child elements of the mixer matching the `selectors.target`\n\t         * selector, instantiating a mixitup.Target for each one.\n\t         *\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @return  {void}\n\t         */\n\t\n\t        indexTargets: function() {\n\t            var self            = this,\n\t                target          = null,\n\t                el              = null,\n\t                dataset         = null,\n\t                i               = -1;\n\t\n\t            self.callActions('beforeIndexTargets', arguments);\n\t\n\t            self.dom.targets = self.config.layout.allowNestedTargets ?\n\t                self.dom.container.querySelectorAll(self.config.selectors.target) :\n\t                h.children(self.dom.container, self.config.selectors.target, self.dom.document);\n\t\n\t            self.dom.targets = h.arrayFromList(self.dom.targets);\n\t\n\t            self.targets = [];\n\t\n\t            if ((dataset = self.config.load.dataset) && dataset.length !== self.dom.targets.length) {\n\t                throw new Error(mixitup.messages.errorDatasetPrerenderedMismatch());\n\t            }\n\t\n\t            if (self.dom.targets.length) {\n\t                for (i = 0; el = self.dom.targets[i]; i++) {\n\t                    target = new mixitup.Target();\n\t\n\t                    target.init(el, self, dataset ? dataset[i] : void(0));\n\t\n\t                    target.isInDom = true;\n\t\n\t                    self.targets.push(target);\n\t                }\n\t\n\t                self.dom.parent = self.dom.targets[0].parentElement === self.dom.container ?\n\t                    self.dom.container :\n\t                    self.dom.targets[0].parentElement;\n\t            }\n\t\n\t            self.origOrder = self.targets;\n\t\n\t            self.callActions('afterIndexTargets', arguments);\n\t        },\n\t\n\t        initControls: function() {\n\t            var self                = this,\n\t                definition          = '',\n\t                controlElements     = null,\n\t                el                  = null,\n\t                parent              = null,\n\t                delagators          = null,\n\t                control             = null,\n\t                i                   = -1,\n\t                j                   = -1;\n\t\n\t            self.callActions('beforeInitControls', arguments);\n\t\n\t            switch (self.config.controls.scope) {\n\t                case 'local':\n\t                    parent = self.dom.container;\n\t\n\t                    break;\n\t                case 'global':\n\t                    parent = self.dom.document;\n\t\n\t                    break;\n\t                default:\n\t                    throw new Error(mixitup.messages.errorConfigInvalidControlsScope());\n\t            }\n\t\n\t            for (i = 0; definition = mixitup.controlDefinitions[i]; i++) {\n\t                if (self.config.controls.live || definition.live) {\n\t                    if (definition.parent) {\n\t                        delagators = self.dom[definition.parent];\n\t\n\t                        if (!delagators || delagators.length < 0) continue;\n\t\n\t                        if (typeof delagators.length !== 'number') {\n\t                            delagators = [delagators];\n\t                        }\n\t                    } else {\n\t                        delagators = [parent];\n\t                    }\n\t\n\t                    for (j = 0; (el = delagators[j]); j++) {\n\t                        control = self.getControl(el,  definition.type, definition.selector);\n\t\n\t                        self.controls.push(control);\n\t                    }\n\t                } else {\n\t                    controlElements = parent.querySelectorAll(self.config.selectors.control + definition.selector);\n\t\n\t                    for (j = 0; (el = controlElements[j]); j++) {\n\t                        control = self.getControl(el, definition.type, '');\n\t\n\t                        if (!control) continue;\n\t\n\t                        self.controls.push(control);\n\t                    }\n\t                }\n\t            }\n\t\n\t            self.callActions('afterInitControls', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {HTMLElement} el\n\t         * @param   {string}      type\n\t         * @param   {string}      selector\n\t         * @return  {mixitup.Control|null}\n\t         */\n\t\n\t        getControl: function(el, type, selector) {\n\t            var self    = this,\n\t                control = null,\n\t                i       = -1;\n\t\n\t            self.callActions('beforeGetControl', arguments);\n\t\n\t            if (!selector) {\n\t                // Static controls only\n\t\n\t                for (i = 0; control = mixitup.controls[i]; i++) {\n\t                    if (control.el === el && control.isBound(self)) {\n\t                        // Control already bound to this mixer (as another type).\n\t\n\t                        // NB: This prevents duplicate controls from being registered where a selector\n\t                        // might collide, eg: \"[data-filter]\" and \"[data-filter][data-sort]\"\n\t\n\t                        return self.callFilters('controlGetControl', null, arguments);\n\t                    } else if (control.el === el && control.type === type && control.selector === selector) {\n\t                        // Another mixer is already using this control, add this mixer as a binding\n\t\n\t                        control.addBinding(self);\n\t\n\t                        return self.callFilters('controlGetControl', control, arguments);\n\t                    }\n\t                }\n\t            }\n\t\n\t            // Create new control\n\t\n\t            control = new mixitup.Control();\n\t\n\t            control.init(el, type, selector);\n\t\n\t            control.classNames.base     = h.getClassname(self.config.classNames, type);\n\t            control.classNames.active   = h.getClassname(self.config.classNames, type, self.config.classNames.modifierActive);\n\t            control.classNames.disabled = h.getClassname(self.config.classNames, type, self.config.classNames.modifierDisabled);\n\t\n\t            // Add a reference to this mixer as a binding\n\t\n\t            control.addBinding(self);\n\t\n\t            return self.callFilters('controlGetControl', control, arguments);\n\t        },\n\t\n\t        /**\n\t         * Creates a compound selector by joining the `toggleArray` value as per the\n\t         * defined toggle logic.\n\t         *\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @return  {string}\n\t         */\n\t\n\t        getToggleSelector: function() {\n\t            var self            = this,\n\t                delineator      = self.config.controls.toggleLogic === 'or' ? ', ' : '',\n\t                toggleSelector  = '';\n\t\n\t            self.callActions('beforeGetToggleSelector', arguments);\n\t\n\t            self.toggleArray = h.clean(self.toggleArray);\n\t\n\t            toggleSelector = self.toggleArray.join(delineator);\n\t\n\t            if (toggleSelector === '') {\n\t                toggleSelector = self.config.controls.toggleDefault;\n\t            }\n\t\n\t            return self.callFilters('selectorGetToggleSelector', toggleSelector, arguments);\n\t        },\n\t\n\t        /**\n\t         * Breaks compound selector strings in an array of discreet selectors,\n\t         * as per the active `controls.toggleLogic` configuration option. Accepts\n\t         * either a dynamic command object, or a state object.\n\t         *\n\t         * @private\n\t         * @instance\n\t         * @since   2.0.0\n\t         * @param   {object}        [command]\n\t         * @param   {mixitup.State} [state]\n\t         * @return  {void}\n\t         */\n\t\n\t        buildToggleArray: function(command, state) {\n\t            var self                    = this,\n\t                activeFilterSelector    = '';\n\t\n\t            self.callActions('beforeBuildToggleArray', arguments);\n\t\n\t            if (command && command.filter) {\n\t                activeFilterSelector = command.filter.selector.replace(/\\s/g, '');\n\t            } else if (state) {\n\t                activeFilterSelector = state.activeFilter.selector.replace(/\\s/g, '');\n\t            } else {\n\t                return;\n\t            }\n\t\n\t            if (activeFilterSelector === self.config.selectors.target || activeFilterSelector === 'all') {\n\t                activeFilterSelector = '';\n\t            }\n\t\n\t            if (self.config.controls.toggleLogic === 'or') {\n\t                self.toggleArray = activeFilterSelector.split(',');\n\t            } else {\n\t                self.toggleArray = self.splitCompoundSelector(activeFilterSelector);\n\t            }\n\t\n\t            self.toggleArray = h.clean(self.toggleArray);\n\t\n\t            self.callActions('afterBuildToggleArray', arguments);\n\t        },\n\t\n\t        /**\n\t         * Takes a compound selector (e.g. `.cat-1.cat-2`, `[data-cat=\"1\"][data-cat=\"2\"]`)\n\t         * and breaks into its individual selectors.\n\t         *\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {string} compoundSelector\n\t         * @return  {string[]}\n\t         */\n\t\n\t        splitCompoundSelector: function(compoundSelector) {\n\t            // Break at a `.` or `[`, capturing the delineator\n\t\n\t            var partials    = compoundSelector.split(/([\\.\\[])/g),\n\t                toggleArray = [],\n\t                selector    = '',\n\t                i           = -1;\n\t\n\t            if (partials[0] === '') {\n\t                partials.shift();\n\t            }\n\t\n\t            for (i = 0; i < partials.length; i++) {\n\t                if (i % 2 === 0) {\n\t                    selector = '';\n\t                }\n\t\n\t                selector += partials[i];\n\t\n\t                if (i % 2 !== 0) {\n\t                    toggleArray.push(selector);\n\t                }\n\t            }\n\t\n\t            return toggleArray;\n\t        },\n\t\n\t        /**\n\t         * Updates controls to their active/inactive state based on the command or\n\t         * current state of the mixer.\n\t         *\n\t         * @private\n\t         * @instance\n\t         * @since   2.0.0\n\t         * @param   {object} command\n\t         * @return  {void}\n\t         */\n\t\n\t        updateControls: function(command) {\n\t            var self    = this,\n\t                control = null,\n\t                output  = new mixitup.CommandMultimix(),\n\t                i       = -1;\n\t\n\t            self.callActions('beforeUpdateControls', arguments);\n\t\n\t            // Sanitise to defaults\n\t\n\t            if (command.filter) {\n\t                output.filter = command.filter.selector;\n\t            } else {\n\t                output.filter = self.state.activeFilter.selector;\n\t            }\n\t\n\t            if (command.sort) {\n\t                output.sort = self.buildSortString(command.sort);\n\t            } else {\n\t                output.sort = self.buildSortString(self.state.activeSort);\n\t            }\n\t\n\t            if (output.filter === self.config.selectors.target) {\n\t                output.filter = 'all';\n\t            }\n\t\n\t            if (output.filter === '') {\n\t                output.filter = 'none';\n\t            }\n\t\n\t            h.freeze(output);\n\t\n\t            for (i = 0; control = self.controls[i]; i++) {\n\t                control.update(output, self.toggleArray);\n\t            }\n\t\n\t            self.callActions('afterUpdateControls', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {mixitup.CommandSort}   command\n\t         * @return  {string}\n\t         */\n\t\n\t        buildSortString: function(command) {\n\t            var self    = this;\n\t            var output  = '';\n\t\n\t            output += command.sortString;\n\t\n\t            if (command.next) {\n\t                output += ' ' + self.buildSortString(command.next);\n\t            }\n\t\n\t            return output;\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {object}        command\n\t         * @param   {Operation}     operation\n\t         * @return  {Promise.<mixitup.State>}\n\t         */\n\t\n\t        insertTargets: function(command, operation) {\n\t            var self            = this,\n\t                nextSibling     = null,\n\t                insertionIndex  = -1,\n\t                frag            = null,\n\t                target          = null,\n\t                el              = null,\n\t                i               = -1;\n\t\n\t            self.callActions('beforeInsertTargets', arguments);\n\t\n\t            if (typeof command.index === 'undefined') command.index = 0;\n\t\n\t            nextSibling = self.getNextSibling(command.index, command.sibling, command.position);\n\t            frag        = self.dom.document.createDocumentFragment();\n\t\n\t            if (nextSibling) {\n\t                insertionIndex = h.index(nextSibling, self.config.selectors.target);\n\t            } else {\n\t                insertionIndex = self.targets.length;\n\t            }\n\t\n\t            if (command.collection) {\n\t                for (i = 0; el = command.collection[i]; i++) {\n\t                    if (self.dom.targets.indexOf(el) > -1) {\n\t                        throw new Error(mixitup.messages.errorInsertPreexistingElement());\n\t                    }\n\t\n\t                    // Ensure elements are hidden when they are added to the DOM, so they can\n\t                    // be animated in gracefully\n\t\n\t                    el.style.display = 'none';\n\t\n\t                    frag.appendChild(el);\n\t                    frag.appendChild(self.dom.document.createTextNode(' '));\n\t\n\t                    if (!h.isElement(el, self.dom.document) || !el.matches(self.config.selectors.target)) continue;\n\t\n\t                    target = new mixitup.Target();\n\t\n\t                    target.init(el, self);\n\t\n\t                    target.isInDom = true;\n\t\n\t                    self.targets.splice(insertionIndex, 0, target);\n\t\n\t                    insertionIndex++;\n\t                }\n\t\n\t                self.dom.parent.insertBefore(frag, nextSibling);\n\t            }\n\t\n\t            // Since targets have been added, the original order must be updated\n\t\n\t            operation.startOrder = self.origOrder = self.targets;\n\t\n\t            self.callActions('afterInsertTargets', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {Number}      [index]\n\t         * @param   {Element}     [sibling]\n\t         * @param   {string}      [position]\n\t         * @return  {Element}\n\t         */\n\t\n\t        getNextSibling: function(index, sibling, position) {\n\t            var self    = this,\n\t                element = null;\n\t\n\t            index = Math.max(index, 0);\n\t\n\t            if (sibling && position === 'before') {\n\t                // Explicit sibling\n\t\n\t                element = sibling;\n\t            } else if (sibling && position === 'after') {\n\t                // Explicit sibling\n\t\n\t                element = sibling.nextElementSibling || null;\n\t            } else if (self.targets.length > 0 && typeof index !== 'undefined') {\n\t                // Index and targets exist\n\t\n\t                element = (index < self.targets.length || !self.targets.length) ?\n\t                    self.targets[index].dom.el :\n\t                    self.targets[self.targets.length - 1].dom.el.nextElementSibling;\n\t            } else if (self.targets.length === 0 && self.dom.parent.children.length > 0) {\n\t                // No targets but other siblings\n\t\n\t                if (self.config.layout.siblingAfter) {\n\t                    element = self.config.layout.siblingAfter;\n\t                } else if (self.config.layout.siblingBefore) {\n\t                    element = self.config.layout.siblingBefore.nextElementSibling;\n\t                } else {\n\t                    self.dom.parent.children[0];\n\t                }\n\t            } else {\n\t                element === null;\n\t            }\n\t\n\t            return self.callFilters('elementGetNextSibling', element, arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   2.0.0\n\t         * @param   {Operation}     operation\n\t         * @return  {void}\n\t         */\n\t\n\t        filterOperation: function(operation) {\n\t            var self        = this,\n\t                testResult  = false,\n\t                index       = -1,\n\t                action      = '',\n\t                target      = null,\n\t                i           = -1;\n\t\n\t            self.callActions('beforeFilterOperation', arguments);\n\t\n\t            action = operation.newFilter.action;\n\t\n\t            for (i = 0; target = operation.newOrder[i]; i++) {\n\t                if (operation.newFilter.collection) {\n\t                    // show via collection\n\t\n\t                    testResult = operation.newFilter.collection.indexOf(target.dom.el) > -1;\n\t                } else {\n\t                    // show via selector\n\t\n\t                    if (operation.newFilter.selector === '') {\n\t                        testResult = false;\n\t                    } else {\n\t                        testResult = target.dom.el.matches(operation.newFilter.selector);\n\t                    }\n\t                }\n\t\n\t                self.evaluateHideShow(testResult, target, action, operation);\n\t            }\n\t\n\t            if (operation.toRemove.length) {\n\t                for (i = 0; target = operation.show[i]; i++) {\n\t                    if (operation.toRemove.indexOf(target) > -1) {\n\t                        // If any shown targets should be removed, move them into the toHide array\n\t\n\t                        operation.show.splice(i, 1);\n\t\n\t                        if ((index = operation.toShow.indexOf(target)) > -1) {\n\t                            operation.toShow.splice(index, 1);\n\t                        }\n\t\n\t                        operation.toHide.push(target);\n\t                        operation.hide.push(target);\n\t\n\t                        i--;\n\t                    }\n\t                }\n\t            }\n\t\n\t            operation.matching = operation.show.slice();\n\t\n\t            if (operation.show.length === 0 && operation.newFilter.selector !== '' && self.targets.length !== 0) {\n\t                operation.hasFailed = true;\n\t            }\n\t\n\t            self.callActions('afterFilterOperation', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {boolean}   testResult\n\t         * @param   {Element}   target\n\t         * @param   {string}    action\n\t         * @param   {Operation} operation\n\t         * @return  {void}\n\t         */\n\t\n\t        evaluateHideShow: function(testResult, target, action, operation) {\n\t            var self = this;\n\t\n\t            self.callActions('beforeEvaluateHideShow', arguments);\n\t\n\t            if (testResult === true && action === 'show' || testResult === false && action === 'hide') {\n\t                operation.show.push(target);\n\t\n\t                !target.isShown && operation.toShow.push(target);\n\t            } else {\n\t                operation.hide.push(target);\n\t\n\t                target.isShown && operation.toHide.push(target);\n\t            }\n\t\n\t            self.callActions('afterEvaluateHideShow', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   2.0.0\n\t         * @param   {Operation}     operation\n\t         * @return  {void}\n\t         */\n\t\n\t        sortOperation: function(operation) {\n\t            var self = this;\n\t\n\t            self.callActions('beforeSortOperation', arguments);\n\t\n\t            operation.startOrder = self.targets;\n\t\n\t            if (operation.newSort.collection) {\n\t                // Sort by collection\n\t\n\t                operation.newOrder = operation.newSort.collection;\n\t            } else if (operation.newSort.order === 'random') {\n\t                // Sort random\n\t\n\t                operation.newOrder = h.arrayShuffle(operation.startOrder);\n\t            } else if (operation.newSort.attribute === '') {\n\t                // Sort by default\n\t\n\t                operation.newOrder = self.origOrder.slice();\n\t\n\t                if (operation.newSort.order === 'desc') {\n\t                    operation.newOrder.reverse();\n\t                }\n\t            } else {\n\t                // Sort by attribute\n\t\n\t                operation.newOrder = operation.startOrder.slice();\n\t\n\t                operation.newOrder.sort(function(a, b) {\n\t                    return self.compare(a, b, operation.newSort);\n\t                });\n\t            }\n\t\n\t            if (h.isEqualArray(operation.newOrder, operation.startOrder)) {\n\t                operation.willSort = false;\n\t            }\n\t\n\t            self.callActions('afterSortOperation', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   2.0.0\n\t         * @param   {mixitup.Target}        a\n\t         * @param   {mixitup.Target}        b\n\t         * @param   {mixitup.CommandSort}   command\n\t         * @return  {Number}\n\t         */\n\t\n\t        compare: function(a, b, command) {\n\t            var self        = this,\n\t                order       = command.order,\n\t                attrA       = self.getAttributeValue(a, command.attribute),\n\t                attrB       = self.getAttributeValue(b, command.attribute);\n\t\n\t            if (isNaN(attrA * 1) || isNaN(attrB * 1)) {\n\t                attrA = attrA.toLowerCase();\n\t                attrB = attrB.toLowerCase();\n\t            } else {\n\t                attrA = attrA * 1;\n\t                attrB = attrB * 1;\n\t            }\n\t\n\t            if (attrA < attrB) {\n\t                return order === 'asc' ? -1 : 1;\n\t            }\n\t\n\t            if (attrA > attrB) {\n\t                return order === 'asc' ? 1 : -1;\n\t            }\n\t\n\t            if (attrA === attrB && command.next) {\n\t                return self.compare(a, b, command.next);\n\t            }\n\t\n\t            return 0;\n\t        },\n\t\n\t        /**\n\t         * Reads the values of any data attributes present the provided target element\n\t         * which match the current sort command.\n\t         *\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {mixitup.Target}    target\n\t         * @param   {string}            [attribute]\n\t         * @return  {(String|Number)}\n\t         */\n\t\n\t        getAttributeValue: function(target, attribute) {\n\t            var self    = this,\n\t                value   = '';\n\t\n\t            value = target.dom.el.getAttribute('data-' + attribute);\n\t\n\t            if (value === null) {\n\t                if (self.config.debug.showWarnings) {\n\t                    // Encourage users to assign values to all targets to avoid erroneous sorting\n\t                    // when types are mixed\n\t\n\t                    console.warn(mixitup.messages.warningInconsistentSortingAttributes({\n\t                        attribute: 'data-' + attribute\n\t                    }));\n\t                }\n\t            }\n\t\n\t            // If an attribute is not present, return 0 as a safety value\n\t\n\t            return self.callFilters('valueGetAttributeValue', value || 0, arguments);\n\t        },\n\t\n\t        /**\n\t         * Inserts elements into the DOM in the appropriate\n\t         * order using a document fragment for minimal\n\t         * DOM thrashing\n\t         *\n\t         * @private\n\t         * @instance\n\t         * @since   2.0.0\n\t         * @param   {boolean}   isResetting\n\t         * @param   {Operation} operation\n\t         * @return  {void}\n\t         */\n\t\n\t        printSort: function(isResetting, operation) {\n\t            var self        = this,\n\t                startOrder  = isResetting ? operation.newOrder : operation.startOrder,\n\t                newOrder    = isResetting ? operation.startOrder : operation.newOrder,\n\t                nextSibling = startOrder.length ? startOrder[startOrder.length - 1].dom.el.nextElementSibling : null,\n\t                frag        = window.document.createDocumentFragment(),\n\t                whitespace  = null,\n\t                target      = null,\n\t                el          = null,\n\t                i           = -1;\n\t\n\t            self.callActions('beforePrintSort', arguments);\n\t\n\t            // Empty the container\n\t\n\t            for (i = 0; target = startOrder[i]; i++) {\n\t                el = target.dom.el;\n\t\n\t                if (el.style.position === 'absolute') continue;\n\t\n\t                h.removeWhitespace(el.previousSibling);\n\t\n\t                el.parentElement.removeChild(el);\n\t            }\n\t\n\t            whitespace = nextSibling ? nextSibling.previousSibling : self.dom.parent.lastChild;\n\t\n\t            if (whitespace && whitespace.nodeName === '#text') {\n\t                h.removeWhitespace(whitespace);\n\t            }\n\t\n\t            for (i = 0; target = newOrder[i]; i++) {\n\t                // Add targets into a document fragment\n\t\n\t                el = target.dom.el;\n\t\n\t                if (h.isElement(frag.lastChild)) {\n\t                    frag.appendChild(window.document.createTextNode(' '));\n\t                }\n\t\n\t                frag.appendChild(el);\n\t            }\n\t\n\t            // Insert the document fragment into the container\n\t            // before any other non-target elements\n\t\n\t            if (self.dom.parent.firstChild && self.dom.parent.firstChild !== nextSibling) {\n\t                frag.insertBefore(window.document.createTextNode(' '), frag.childNodes[0]);\n\t            }\n\t\n\t            if (nextSibling) {\n\t                frag.appendChild(window.document.createTextNode(' '));\n\t\n\t                self.dom.parent.insertBefore(frag, nextSibling);\n\t            } else {\n\t                self.dom.parent.appendChild(frag);\n\t            }\n\t\n\t            self.callActions('afterPrintSort', arguments);\n\t        },\n\t\n\t        /**\n\t         * Parses user-defined sort strings (i.e. `default:asc`) into sort commands objects.\n\t         *\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {string}                sortString\n\t         * @param   {mixitup.CommandSort}   command\n\t         * @return  {mixitup.CommandSort}\n\t         */\n\t\n\t        parseSortString: function(sortString, command) {\n\t            var self        = this,\n\t                rules       = sortString.split(' '),\n\t                current     = command,\n\t                rule        = [],\n\t                i           = -1;\n\t\n\t            // command.sortString = sortString;\n\t\n\t            for (i = 0; i < rules.length; i++) {\n\t                rule = rules[i].split(':');\n\t\n\t                current.sortString  = rules[i];\n\t                current.attribute   = h.dashCase(rule[0]);\n\t                current.order       = rule[1] || 'asc';\n\t\n\t                switch (current.attribute) {\n\t                    case 'default':\n\t                        // treat \"default\" as sorting by no attribute\n\t\n\t                        current.attribute = '';\n\t\n\t                        break;\n\t                    case 'random':\n\t                        // treat \"random\" as an order not an attribute\n\t\n\t                        current.attribute   = '';\n\t                        current.order       = 'random';\n\t\n\t                        break;\n\t                }\n\t\n\t                if (!current.attribute || current.order === 'random') break;\n\t\n\t                if (i < rules.length - 1) {\n\t                    // Embed reference to the next command\n\t\n\t                    current.next = new mixitup.CommandSort();\n\t\n\t                    h.freeze(current);\n\t\n\t                    current = current.next;\n\t                }\n\t            }\n\t\n\t            return self.callFilters('commandsParseSort', command, arguments);\n\t        },\n\t\n\t        /**\n\t         * Parses all effects out of the user-defined `animation.effects` string into\n\t         * their respective properties and units.\n\t         *\n\t         * @private\n\t         * @instance\n\t         * @since   2.0.0\n\t         * @return  {void}\n\t         */\n\t\n\t        parseEffects: function() {\n\t            var self            = this,\n\t                transformName   = '',\n\t                effectsIn       = self.config.animation.effectsIn || self.config.animation.effects,\n\t                effectsOut      = self.config.animation.effectsOut || self.config.animation.effects;\n\t\n\t            self.callActions('beforeParseEffects', arguments);\n\t\n\t            self.effectsIn      = new mixitup.StyleData();\n\t            self.effectsOut     = new mixitup.StyleData();\n\t            self.transformIn    = [];\n\t            self.transformOut   = [];\n\t\n\t            self.effectsIn.opacity = self.effectsOut.opacity = 1;\n\t\n\t            self.parseEffect('fade', effectsIn, self.effectsIn, self.transformIn);\n\t            self.parseEffect('fade', effectsOut, self.effectsOut, self.transformOut, true);\n\t\n\t            for (transformName in mixitup.transformDefaults) {\n\t                if (!(mixitup.transformDefaults[transformName] instanceof mixitup.TransformData)) {\n\t                    continue;\n\t                }\n\t\n\t                self.parseEffect(transformName, effectsIn, self.effectsIn, self.transformIn);\n\t                self.parseEffect(transformName, effectsOut, self.effectsOut, self.transformOut, true);\n\t            }\n\t\n\t            self.parseEffect('stagger', effectsIn, self.effectsIn, self.transformIn);\n\t            self.parseEffect('stagger', effectsOut, self.effectsOut, self.transformOut, true);\n\t\n\t            self.callActions('afterParseEffects', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   2.0.0\n\t         * @param   {string}    effectName\n\t         * @param   {string}    effectString\n\t         * @param   {StyleData} effects\n\t         * @param   {String[]}  transform\n\t         * @param   {boolean}   [isOut]\n\t         */\n\t\n\t        parseEffect: function(effectName, effectString, effects, transform, isOut) {\n\t            var self        = this,\n\t                re          = /\\(([^)]+)\\)/,\n\t                propIndex   = -1,\n\t                str         = '',\n\t                match       = [],\n\t                val         = '',\n\t                units       = ['%', 'px', 'em', 'rem', 'vh', 'vw', 'deg'],\n\t                unit        = '',\n\t                i           = -1;\n\t\n\t            self.callActions('beforeParseEffect', arguments);\n\t\n\t            if (typeof effectString !== 'string') {\n\t                throw new TypeError(mixitup.messages.errorConfigInvalidAnimationEffects());\n\t            }\n\t\n\t            if (effectString.indexOf(effectName) < 0) {\n\t                // The effect is not present in the effects string\n\t\n\t                if (effectName === 'stagger') {\n\t                    // Reset stagger to 0\n\t\n\t                    self.staggerDuration = 0;\n\t                }\n\t\n\t                return;\n\t            }\n\t\n\t            // The effect is present\n\t\n\t            propIndex = effectString.indexOf(effectName + '(');\n\t\n\t            if (propIndex > -1) {\n\t                // The effect has a user defined value in parentheses\n\t\n\t                // Extract from the first parenthesis to the end of string\n\t\n\t                str = effectString.substring(propIndex);\n\t\n\t                // Match any number of characters between \"(\" and \")\"\n\t\n\t                match = re.exec(str);\n\t\n\t                val = match[1];\n\t            }\n\t\n\t            switch (effectName) {\n\t                case 'fade':\n\t                    effects.opacity = val ? parseFloat(val) : 0;\n\t\n\t                    break;\n\t                case 'stagger':\n\t                    self.staggerDuration = val ? parseFloat(val) : 100;\n\t\n\t                    // TODO: Currently stagger must be applied globally, but\n\t                    // if seperate values are specified for in/out, this should\n\t                    // be respected\n\t\n\t                    break;\n\t                default:\n\t                    // All other effects are transforms following the same structure\n\t\n\t                    if (isOut && self.config.animation.reverseOut && effectName !== 'scale') {\n\t                        effects[effectName].value =\n\t                            (val ? parseFloat(val) : mixitup.transformDefaults[effectName].value) * -1;\n\t                    } else {\n\t                        effects[effectName].value =\n\t                            (val ? parseFloat(val) : mixitup.transformDefaults[effectName].value);\n\t                    }\n\t\n\t                    if (val) {\n\t                        for (i = 0; unit = units[i]; i++) {\n\t                            if (val.indexOf(unit) > -1) {\n\t                                effects[effectName].unit = unit;\n\t\n\t                                break;\n\t                            }\n\t                        }\n\t                    } else {\n\t                        effects[effectName].unit = mixitup.transformDefaults[effectName].unit;\n\t                    }\n\t\n\t                    transform.push(\n\t                        effectName +\n\t                        '(' +\n\t                        effects[effectName].value +\n\t                        effects[effectName].unit +\n\t                        ')'\n\t                    );\n\t            }\n\t\n\t            self.callActions('afterParseEffect', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   2.0.0\n\t         * @param   {Operation}     operation\n\t         * @return  {State}\n\t         */\n\t\n\t        buildState: function(operation) {\n\t            var self        = this,\n\t                state       = new mixitup.State(),\n\t                target      = null,\n\t                i           = -1;\n\t\n\t            self.callActions('beforeBuildState', arguments);\n\t\n\t            // Map target elements into state arrays.\n\t            // the real target objects should never be exposed\n\t\n\t            for (i = 0; target = self.targets[i]; i++) {\n\t                if (!operation.toRemove.length || operation.toRemove.indexOf(target) < 0) {\n\t                    state.targets.push(target.dom.el);\n\t                }\n\t            }\n\t\n\t            for (i = 0; target = operation.matching[i]; i++) {\n\t                state.matching.push(target.dom.el);\n\t            }\n\t\n\t            for (i = 0; target = operation.show[i]; i++) {\n\t                state.show.push(target.dom.el);\n\t            }\n\t\n\t            for (i = 0; target = operation.hide[i]; i++) {\n\t                if (!operation.toRemove.length || operation.toRemove.indexOf(target) < 0) {\n\t                    state.hide.push(target.dom.el);\n\t                }\n\t            }\n\t\n\t            state.id                        = self.id;\n\t            state.container                 = self.dom.container;\n\t            state.activeFilter              = operation.newFilter;\n\t            state.activeSort                = operation.newSort;\n\t            state.activeDataset             = operation.newDataset;\n\t            state.activeContainerClassName  = operation.newContainerClassName;\n\t            state.hasFailed                 = operation.hasFailed;\n\t            state.totalTargets              = self.targets.length;\n\t            state.totalShow                 = operation.show.length;\n\t            state.totalHide                 = operation.hide.length;\n\t            state.totalMatching             = operation.matching.length;\n\t            state.triggerElement            = operation.triggerElement;\n\t\n\t            return self.callFilters('stateBuildState', state, arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   2.0.0\n\t         * @param   {boolean}   shouldAnimate\n\t         * @param   {Operation} operation\n\t         * @return  {void}\n\t         */\n\t\n\t        goMix: function(shouldAnimate, operation) {\n\t            var self        = this,\n\t                deferred    = null;\n\t\n\t            self.callActions('beforeGoMix', arguments);\n\t\n\t            // If the animation duration is set to 0ms,\n\t            // or no effects specified,\n\t            // or the container is hidden\n\t            // then abort animation\n\t\n\t            if (\n\t                !self.config.animation.duration || !self.config.animation.effects || !h.isVisible(self.dom.container)\n\t            ) {\n\t                shouldAnimate = false;\n\t            }\n\t\n\t            if (\n\t                !operation.toShow.length &&\n\t                !operation.toHide.length &&\n\t                !operation.willSort &&\n\t                !operation.willChangeLayout\n\t            ) {\n\t                // If nothing to show or hide, and not sorting or\n\t                // changing layout\n\t\n\t                shouldAnimate = false;\n\t            }\n\t\n\t            if (\n\t                !operation.startState.show.length &&\n\t                !operation.show.length\n\t            ) {\n\t                // If nothing currently shown, nothing to show\n\t\n\t                shouldAnimate = false;\n\t            }\n\t\n\t            mixitup.events.fire('mixStart', self.dom.container, {\n\t                state: operation.startState,\n\t                futureState: operation.newState,\n\t                instance: self\n\t            }, self.dom.document);\n\t\n\t            if (typeof self.config.callbacks.onMixStart === 'function') {\n\t                self.config.callbacks.onMixStart.call(\n\t                    self.dom.container,\n\t                    operation.startState,\n\t                    operation.newState,\n\t                    self\n\t                );\n\t            }\n\t\n\t            h.removeClass(self.dom.container, h.getClassname(self.config.classNames, 'container', self.config.classNames.modifierFailed));\n\t\n\t            if (!self.userDeferred) {\n\t                // Queue empty, no pending operations\n\t\n\t                deferred = self.userDeferred = h.defer(mixitup.libraries);\n\t            } else {\n\t                // Use existing deferred\n\t\n\t                deferred = self.userDeferred;\n\t            }\n\t\n\t            self.isBusy = true;\n\t\n\t            if (!shouldAnimate || !mixitup.features.has.transitions) {\n\t                // Abort\n\t\n\t                if (self.config.debug.fauxAsync) {\n\t                    setTimeout(function() {\n\t                        self.cleanUp(operation);\n\t                    }, self.config.animation.duration);\n\t                } else {\n\t                    self.cleanUp(operation);\n\t                }\n\t\n\t                return self.callFilters('promiseGoMix', deferred.promise, arguments);\n\t            }\n\t\n\t            // If we should animate and the platform supports transitions, go for it\n\t\n\t            if (window.pageYOffset !== operation.docState.scrollTop) {\n\t                window.scrollTo(operation.docState.scrollLeft, operation.docState.scrollTop);\n\t            }\n\t\n\t            if (self.config.animation.applyPerspective) {\n\t                self.dom.parent.style[mixitup.features.perspectiveProp] =\n\t                    self.config.animation.perspectiveDistance;\n\t\n\t                self.dom.parent.style[mixitup.features.perspectiveOriginProp] =\n\t                    self.config.animation.perspectiveOrigin;\n\t            }\n\t\n\t            if (\n\t                self.config.animation.animateResizeContainer &&\n\t                operation.startHeight !== operation.newHeight &&\n\t                operation.viewportDeltaY !== operation.startHeight - operation.newHeight\n\t            ) {\n\t                self.dom.parent.style.height = operation.startHeight + 'px';\n\t            }\n\t\n\t            if (\n\t                self.config.animation.animateResizeContainer &&\n\t                operation.startWidth !== operation.newWidth &&\n\t                operation.viewportDeltaX !== operation.startWidth - operation.newWidth\n\t            ) {\n\t                self.dom.parent.style.width = operation.startWidth + 'px';\n\t            }\n\t\n\t            if (operation.startHeight === operation.newHeight) {\n\t                self.dom.parent.style.height = operation.startHeight + 'px';\n\t            }\n\t\n\t            if (operation.startWidth === operation.newWidth) {\n\t                self.dom.parent.style.width = operation.startWidth + 'px';\n\t            }\n\t\n\t            if (operation.startHeight === operation.newHeight && operation.startWidth === operation.newWidth) {\n\t                self.dom.parent.style.overflow = 'hidden';\n\t            }\n\t\n\t            requestAnimationFrame(function() {\n\t                self.moveTargets(operation);\n\t            });\n\t\n\t            return self.callFilters('promiseGoMix', deferred.promise, arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   2.0.0\n\t         * @param   {Operation}     operation\n\t         * @return  {void}\n\t         */\n\t\n\t        getStartMixData: function(operation) {\n\t            var self        = this,\n\t                parentStyle = window.getComputedStyle(self.dom.parent),\n\t                parentRect  = self.dom.parent.getBoundingClientRect(),\n\t                target      = null,\n\t                data        = {},\n\t                i           = -1,\n\t                boxSizing   = parentStyle[mixitup.features.boxSizingProp];\n\t\n\t            self.incPadding = (boxSizing === 'border-box');\n\t\n\t            self.callActions('beforeGetStartMixData', arguments);\n\t\n\t            for (i = 0; target = operation.show[i]; i++) {\n\t                data = target.getPosData();\n\t\n\t                operation.showPosData[i] = {\n\t                    startPosData: data\n\t                };\n\t            }\n\t\n\t            for (i = 0; target = operation.toHide[i]; i++) {\n\t                data = target.getPosData();\n\t\n\t                operation.toHidePosData[i] = {\n\t                    startPosData: data\n\t                };\n\t            }\n\t\n\t            operation.startX = parentRect.left;\n\t            operation.startY = parentRect.top;\n\t\n\t            operation.startHeight = self.incPadding ?\n\t                parentRect.height :\n\t                parentRect.height -\n\t                    parseFloat(parentStyle.paddingTop) -\n\t                    parseFloat(parentStyle.paddingBottom) -\n\t                    parseFloat(parentStyle.borderTop) -\n\t                    parseFloat(parentStyle.borderBottom);\n\t\n\t            operation.startWidth = self.incPadding ?\n\t                parentRect.width :\n\t                parentRect.width -\n\t                    parseFloat(parentStyle.paddingLeft) -\n\t                    parseFloat(parentStyle.paddingRight) -\n\t                    parseFloat(parentStyle.borderLeft) -\n\t                    parseFloat(parentStyle.borderRight);\n\t\n\t            self.callActions('afterGetStartMixData', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   2.0.0\n\t         * @param   {Operation}     operation\n\t         * @return  {void}\n\t         */\n\t\n\t        setInter: function(operation) {\n\t            var self    = this,\n\t                target  = null,\n\t                i       = -1;\n\t\n\t            self.callActions('beforeSetInter', arguments);\n\t\n\t            // Prevent scrollbar flicker on non-inertial scroll platforms by clamping height/width\n\t\n\t            if (self.config.animation.clampHeight) {\n\t                self.dom.parent.style.height    = operation.startHeight + 'px';\n\t                self.dom.parent.style.overflow  = 'hidden';\n\t            }\n\t\n\t            if (self.config.animation.clampWidth) {\n\t                self.dom.parent.style.width     = operation.startWidth + 'px';\n\t                self.dom.parent.style.overflow  = 'hidden';\n\t            }\n\t\n\t            for (i = 0; target = operation.toShow[i]; i++) {\n\t                target.show();\n\t            }\n\t\n\t            if (operation.willChangeLayout) {\n\t                h.removeClass(self.dom.container, operation.startContainerClassName);\n\t                h.addClass(self.dom.container, operation.newContainerClassName);\n\t            }\n\t\n\t            self.callActions('afterSetInter', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   2.0.0\n\t         * @param   {Operation}     operation\n\t         * @return  {void}\n\t         */\n\t\n\t        getInterMixData: function(operation) {\n\t            var self    = this,\n\t                target  = null,\n\t                i       = -1;\n\t\n\t            self.callActions('beforeGetInterMixData', arguments);\n\t\n\t            for (i = 0; target = operation.show[i]; i++) {\n\t                operation.showPosData[i].interPosData = target.getPosData();\n\t            }\n\t\n\t            for (i = 0; target = operation.toHide[i]; i++) {\n\t                operation.toHidePosData[i].interPosData = target.getPosData();\n\t            }\n\t\n\t            self.callActions('afterGetInterMixData', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   2.0.0\n\t         * @param   {Operation}     operation\n\t         * @return  {void}\n\t         */\n\t\n\t        setFinal: function(operation) {\n\t            var self    = this,\n\t                target  = null,\n\t                i       = -1;\n\t\n\t            self.callActions('beforeSetFinal', arguments);\n\t\n\t            operation.willSort && self.printSort(false, operation);\n\t\n\t            for (i = 0; target = operation.toHide[i]; i++) {\n\t                target.hide();\n\t            }\n\t\n\t            self.callActions('afterSetFinal', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   2.0.0\n\t         * @param   {Operation}     operation\n\t         * @return  {void}\n\t         */\n\t\n\t        getFinalMixData: function(operation) {\n\t            var self        = this,\n\t                parentStyle = null,\n\t                parentRect  = null,\n\t                target      = null,\n\t                i           = -1;\n\t\n\t            self.callActions('beforeGetFinalMixData', arguments);\n\t\n\t            for (i = 0; target = operation.show[i]; i++) {\n\t                operation.showPosData[i].finalPosData = target.getPosData();\n\t            }\n\t\n\t            for (i = 0; target = operation.toHide[i]; i++) {\n\t                operation.toHidePosData[i].finalPosData = target.getPosData();\n\t            }\n\t\n\t            // Remove clamping\n\t\n\t            if (self.config.animation.clampHeight || self.config.animation.clampWidth) {\n\t                self.dom.parent.style.height    =\n\t                self.dom.parent.style.width     =\n\t                self.dom.parent.style.overflow  = '';\n\t            }\n\t\n\t            if (!self.incPadding) {\n\t                parentStyle = window.getComputedStyle(self.dom.parent);\n\t            }\n\t\n\t            parentRect  = self.dom.parent.getBoundingClientRect();\n\t\n\t            operation.newX = parentRect.left;\n\t            operation.newY = parentRect.top;\n\t\n\t            operation.newHeight = self.incPadding ?\n\t                parentRect.height :\n\t                parentRect.height -\n\t                    parseFloat(parentStyle.paddingTop) -\n\t                    parseFloat(parentStyle.paddingBottom) -\n\t                    parseFloat(parentStyle.borderTop) -\n\t                    parseFloat(parentStyle.borderBottom);\n\t\n\t            operation.newWidth = self.incPadding ?\n\t                parentRect.width :\n\t                parentRect.width -\n\t                    parseFloat(parentStyle.paddingLeft) -\n\t                    parseFloat(parentStyle.paddingRight) -\n\t                    parseFloat(parentStyle.borderLeft) -\n\t                    parseFloat(parentStyle.borderRight);\n\t\n\t            operation.viewportDeltaX = operation.docState.viewportWidth - this.dom.document.documentElement.clientWidth;\n\t            operation.viewportDeltaY = operation.docState.viewportHeight - this.dom.document.documentElement.clientHeight;\n\t\n\t            if (operation.willSort) {\n\t                self.printSort(true, operation);\n\t            }\n\t\n\t            for (i = 0; target = operation.toShow[i]; i++) {\n\t                target.hide();\n\t            }\n\t\n\t            for (i = 0; target = operation.toHide[i]; i++) {\n\t                target.show();\n\t            }\n\t\n\t            if (operation.willChangeLayout) {\n\t                h.removeClass(self.dom.container, operation.newContainerClassName);\n\t                h.addClass(self.dom.container, self.config.layout.containerClassName);\n\t            }\n\t\n\t            self.callActions('afterGetFinalMixData', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since    3.0.0\n\t         * @param    {Operation}     operation\n\t         */\n\t\n\t        getTweenData: function(operation) {\n\t            var self            = this,\n\t                target          = null,\n\t                posData         = null,\n\t                effectNames     = Object.getOwnPropertyNames(self.effectsIn),\n\t                effectName      = '',\n\t                effect          = null,\n\t                widthChange     = -1,\n\t                heightChange    = -1,\n\t                i               = -1,\n\t                j               = -1;\n\t\n\t            self.callActions('beforeGetTweenData', arguments);\n\t\n\t            for (i = 0; target = operation.show[i]; i++) {\n\t                posData             = operation.showPosData[i];\n\t                posData.posIn       = new mixitup.StyleData();\n\t                posData.posOut      = new mixitup.StyleData();\n\t                posData.tweenData   = new mixitup.StyleData();\n\t\n\t                // Process x and y\n\t\n\t                if (target.isShown) {\n\t                    posData.posIn.x = posData.startPosData.x - posData.interPosData.x;\n\t                    posData.posIn.y = posData.startPosData.y - posData.interPosData.y;\n\t                } else {\n\t                    posData.posIn.x = posData.posIn.y = 0;\n\t                }\n\t\n\t                posData.posOut.x = posData.finalPosData.x - posData.interPosData.x;\n\t                posData.posOut.y = posData.finalPosData.y - posData.interPosData.y;\n\t\n\t                // Process opacity\n\t\n\t                posData.posIn.opacity       = target.isShown ? 1 : self.effectsIn.opacity;\n\t                posData.posOut.opacity      = 1;\n\t                posData.tweenData.opacity   = posData.posOut.opacity - posData.posIn.opacity;\n\t\n\t                // Adjust x and y if not nudging\n\t\n\t                if (!target.isShown && !self.config.animation.nudge) {\n\t                    posData.posIn.x = posData.posOut.x;\n\t                    posData.posIn.y = posData.posOut.y;\n\t                }\n\t\n\t                posData.tweenData.x = posData.posOut.x - posData.posIn.x;\n\t                posData.tweenData.y = posData.posOut.y - posData.posIn.y;\n\t\n\t                // Process width, height, and margins\n\t\n\t                if (self.config.animation.animateResizeTargets) {\n\t                    posData.posIn.width     = posData.startPosData.width;\n\t                    posData.posIn.height    = posData.startPosData.height;\n\t\n\t                    // \"||\" Prevents width/height change from including 0 width/height if hiding or showing\n\t\n\t                    widthChange = (posData.startPosData.width || posData.finalPosData.width) - posData.interPosData.width;\n\t\n\t                    posData.posIn.marginRight = posData.startPosData.marginRight - widthChange;\n\t\n\t                    heightChange = (posData.startPosData.height || posData.finalPosData.height) - posData.interPosData.height;\n\t\n\t                    posData.posIn.marginBottom = posData.startPosData.marginBottom - heightChange;\n\t\n\t                    posData.posOut.width    = posData.finalPosData.width;\n\t                    posData.posOut.height   = posData.finalPosData.height;\n\t\n\t                    widthChange = (posData.finalPosData.width || posData.startPosData.width) - posData.interPosData.width;\n\t\n\t                    posData.posOut.marginRight = posData.finalPosData.marginRight - widthChange;\n\t\n\t                    heightChange = (posData.finalPosData.height || posData.startPosData.height) - posData.interPosData.height;\n\t\n\t                    posData.posOut.marginBottom = posData.finalPosData.marginBottom - heightChange;\n\t\n\t                    posData.tweenData.width         = posData.posOut.width - posData.posIn.width;\n\t                    posData.tweenData.height        = posData.posOut.height - posData.posIn.height;\n\t                    posData.tweenData.marginRight   = posData.posOut.marginRight - posData.posIn.marginRight;\n\t                    posData.tweenData.marginBottom  = posData.posOut.marginBottom - posData.posIn.marginBottom;\n\t                }\n\t\n\t                // Process transforms\n\t\n\t                for (j = 0; effectName = effectNames[j]; j++) {\n\t                    effect = self.effectsIn[effectName];\n\t\n\t                    if (!(effect instanceof mixitup.TransformData) || !effect.value) continue;\n\t\n\t                    posData.posIn[effectName].value     = effect.value;\n\t                    posData.posOut[effectName].value    = 0;\n\t\n\t                    posData.tweenData[effectName].value =\n\t                        posData.posOut[effectName].value - posData.posIn[effectName].value;\n\t\n\t                    posData.posIn[effectName].unit =\n\t                        posData.posOut[effectName].unit =\n\t                        posData.tweenData[effectName].unit =\n\t                        effect.unit;\n\t                }\n\t            }\n\t\n\t            for (i = 0; target = operation.toHide[i]; i++) {\n\t                posData             = operation.toHidePosData[i];\n\t                posData.posIn       = new mixitup.StyleData();\n\t                posData.posOut      = new mixitup.StyleData();\n\t                posData.tweenData   = new mixitup.StyleData();\n\t\n\t                // Process x and y\n\t\n\t                posData.posIn.x     = target.isShown ? posData.startPosData.x - posData.interPosData.x : 0;\n\t                posData.posIn.y     = target.isShown ? posData.startPosData.y - posData.interPosData.y : 0;\n\t                posData.posOut.x    = self.config.animation.nudge ? 0 : posData.posIn.x;\n\t                posData.posOut.y    = self.config.animation.nudge ? 0 : posData.posIn.y;\n\t                posData.tweenData.x = posData.posOut.x - posData.posIn.x;\n\t                posData.tweenData.y = posData.posOut.y - posData.posIn.y;\n\t\n\t                // Process width, height, and margins\n\t\n\t                if (self.config.animation.animateResizeTargets) {\n\t                    posData.posIn.width         = posData.startPosData.width;\n\t                    posData.posIn.height        = posData.startPosData.height;\n\t\n\t                    widthChange = posData.startPosData.width - posData.interPosData.width;\n\t\n\t                    posData.posIn.marginRight = posData.startPosData.marginRight - widthChange;\n\t\n\t                    heightChange = posData.startPosData.height - posData.interPosData.height;\n\t\n\t                    posData.posIn.marginBottom = posData.startPosData.marginBottom - heightChange;\n\t                }\n\t\n\t                // Process opacity\n\t\n\t                posData.posIn.opacity       = 1;\n\t                posData.posOut.opacity      = self.effectsOut.opacity;\n\t                posData.tweenData.opacity   = posData.posOut.opacity - posData.posIn.opacity;\n\t\n\t                // Process transforms\n\t\n\t                for (j = 0; effectName = effectNames[j]; j++) {\n\t                    effect = self.effectsOut[effectName];\n\t\n\t                    if (!(effect instanceof mixitup.TransformData) || !effect.value) continue;\n\t\n\t                    posData.posIn[effectName].value     = 0;\n\t                    posData.posOut[effectName].value    = effect.value;\n\t\n\t                    posData.tweenData[effectName].value =\n\t                        posData.posOut[effectName].value - posData.posIn[effectName].value;\n\t\n\t                    posData.posIn[effectName].unit =\n\t                        posData.posOut[effectName].unit =\n\t                        posData.tweenData[effectName].unit =\n\t                        effect.unit;\n\t                }\n\t            }\n\t\n\t            self.callActions('afterGetTweenData', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {Operation}     operation\n\t         * @return  {void}\n\t         */\n\t\n\t        moveTargets: function(operation) {\n\t            var self            = this,\n\t                target          = null,\n\t                moveData        = null,\n\t                posData         = null,\n\t                statusChange    = '',\n\t                willTransition  = false,\n\t                staggerIndex    = -1,\n\t                i               = -1,\n\t                checkProgress   = self.checkProgress.bind(self);\n\t\n\t            self.callActions('beforeMoveTargets', arguments);\n\t\n\t            // TODO: this is an extra loop in addition to the calcs\n\t            // done in getOperation, could some of this be done there?\n\t\n\t            for (i = 0; target = operation.show[i]; i++) {\n\t                moveData    = new mixitup.IMoveData();\n\t                posData     = operation.showPosData[i];\n\t\n\t                statusChange = target.isShown ? 'none' : 'show';\n\t\n\t                willTransition = self.willTransition(\n\t                    statusChange,\n\t                    operation.hasEffect,\n\t                    posData.posIn,\n\t                    posData.posOut\n\t                );\n\t\n\t                if (willTransition) {\n\t                    // Prevent non-transitioning targets from incrementing the staggerIndex\n\t\n\t                    staggerIndex++;\n\t                }\n\t\n\t                target.show();\n\t\n\t                moveData.posIn          = posData.posIn;\n\t                moveData.posOut         = posData.posOut;\n\t                moveData.statusChange   = statusChange;\n\t                moveData.staggerIndex   = staggerIndex;\n\t                moveData.operation      = operation;\n\t                moveData.callback       = willTransition ? checkProgress : null;\n\t\n\t                target.move(moveData);\n\t            }\n\t\n\t            for (i = 0; target = operation.toHide[i]; i++) {\n\t                posData  = operation.toHidePosData[i];\n\t                moveData = new mixitup.IMoveData();\n\t\n\t                statusChange = 'hide';\n\t\n\t                willTransition = self.willTransition(statusChange, posData.posIn, posData.posOut);\n\t\n\t                moveData.posIn          = posData.posIn;\n\t                moveData.posOut         = posData.posOut;\n\t                moveData.statusChange   = statusChange;\n\t                moveData.staggerIndex   = i;\n\t                moveData.operation      = operation;\n\t                moveData.callback       = willTransition ? checkProgress : null;\n\t\n\t                target.move(moveData);\n\t            }\n\t\n\t            if (self.config.animation.animateResizeContainer) {\n\t                self.dom.parent.style[mixitup.features.transitionProp] =\n\t                    'height ' + self.config.animation.duration + 'ms ease, ' +\n\t                    'width ' + self.config.animation.duration + 'ms ease ';\n\t\n\t                requestAnimationFrame(function() {\n\t                    if (\n\t                        operation.startHeight !== operation.newHeight &&\n\t                        operation.viewportDeltaY !== operation.startHeight - operation.newHeight\n\t                    ) {\n\t                        self.dom.parent.style.height = operation.newHeight + 'px';\n\t                    }\n\t\n\t                    if (\n\t                        operation.startWidth !== operation.newWidth &&\n\t                        operation.viewportDeltaX !== operation.startWidth - operation.newWidth\n\t                    ) {\n\t                        self.dom.parent.style.width = operation.newWidth + 'px';\n\t                    }\n\t                });\n\t            }\n\t\n\t            if (operation.willChangeLayout) {\n\t                h.removeClass(self.dom.container, self.config.layout.ContainerClassName);\n\t                h.addClass(self.dom.container, operation.newContainerClassName);\n\t            }\n\t\n\t            self.callActions('afterMoveTargets', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @return  {boolean}\n\t         */\n\t\n\t        hasEffect: function() {\n\t            var self        = this,\n\t                EFFECTABLES = [\n\t                    'scale',\n\t                    'translateX', 'translateY', 'translateZ',\n\t                    'rotateX', 'rotateY', 'rotateZ'\n\t                ],\n\t                effectName  = '',\n\t                effect      = null,\n\t                result      = false,\n\t                value       = -1,\n\t                i           = -1;\n\t\n\t            if (self.effectsIn.opacity !== 1) {\n\t                return self.callFilters('resultHasEffect', true, arguments);\n\t            }\n\t\n\t            for (i = 0; effectName = EFFECTABLES[i]; i++) {\n\t                effect  = self.effectsIn[effectName];\n\t                value   = (typeof effect && effect.value !== 'undefined') ?\n\t                    effect.value : effect;\n\t\n\t                if (value !== 0) {\n\t                    result = true;\n\t\n\t                    break;\n\t                }\n\t            }\n\t\n\t            return self.callFilters('resultHasEffect', result, arguments);\n\t        },\n\t\n\t        /**\n\t         * Determines if a target element will transition in\n\t         * some fasion and therefore requires binding of\n\t         * transitionEnd\n\t         *\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {string}        statusChange\n\t         * @param   {boolean}       hasEffect\n\t         * @param   {StyleData}     posIn\n\t         * @param   {StyleData}     posOut\n\t         * @return  {boolean}\n\t         */\n\t\n\t        willTransition: function(statusChange, hasEffect, posIn, posOut) {\n\t            var self    = this,\n\t                result  = false;\n\t\n\t            if (!h.isVisible(self.dom.container)) {\n\t                // If the container is not visible, the transitionEnd\n\t                // event will not occur and MixItUp will hang\n\t\n\t                result = false;\n\t            } else if (\n\t                (statusChange !== 'none' && hasEffect) ||\n\t                posIn.x !== posOut.x ||\n\t                posIn.y !== posOut.y\n\t            ) {\n\t                // If opacity and/or translate will change\n\t\n\t                result = true;\n\t            } else if (self.config.animation.animateResizeTargets) {\n\t                // Check if width, height or margins will change\n\t\n\t                result = (\n\t                    posIn.width !== posOut.width ||\n\t                    posIn.height !== posOut.height ||\n\t                    posIn.marginRight !== posOut.marginRight ||\n\t                    posIn.marginTop !== posOut.marginTop\n\t                );\n\t            } else {\n\t                result = false;\n\t            }\n\t\n\t            return self.callFilters('resultWillTransition', result, arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   2.0.0\n\t         * @param   {Operation}     operation\n\t         * @return  {void}\n\t         */\n\t\n\t        checkProgress: function(operation) {\n\t            var self = this;\n\t\n\t            self.targetsDone++;\n\t\n\t            if (self.targetsBound === self.targetsDone) {\n\t                self.cleanUp(operation);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   2.0.0\n\t         * @param   {Operation}     operation\n\t         * @return  {void}\n\t         */\n\t\n\t        cleanUp: function(operation) {\n\t            var self                = this,\n\t                target              = null,\n\t                whitespaceBefore    = null,\n\t                whitespaceAfter     = null,\n\t                nextInQueue         = null,\n\t                i                   = -1;\n\t\n\t            self.callActions('beforeCleanUp', arguments);\n\t\n\t            self.targetsMoved          =\n\t                self.targetsImmovable  =\n\t                self.targetsBound      =\n\t                self.targetsDone       = 0;\n\t\n\t            for (i = 0; target = operation.show[i]; i++) {\n\t                target.cleanUp();\n\t\n\t                target.show();\n\t            }\n\t\n\t            for (i = 0; target = operation.toHide[i]; i++) {\n\t                target.cleanUp();\n\t\n\t                target.hide();\n\t            }\n\t\n\t            if (operation.willSort) {\n\t                self.printSort(false, operation);\n\t            }\n\t\n\t            // Remove any styles applied to the parent container\n\t\n\t            self.dom.parent.style[mixitup.features.transitionProp]             =\n\t                self.dom.parent.style.height                                   =\n\t                self.dom.parent.style.width                                    =\n\t                self.dom.parent.style.overflow                                 =\n\t                self.dom.parent.style[mixitup.features.perspectiveProp]        =\n\t                self.dom.parent.style[mixitup.features.perspectiveOriginProp]  = '';\n\t\n\t            if (operation.willChangeLayout) {\n\t                h.removeClass(self.dom.container, operation.startContainerClassName);\n\t                h.addClass(self.dom.container, operation.newContainerClassName);\n\t            }\n\t\n\t            if (operation.toRemove.length) {\n\t                for (i = 0; target = self.targets[i]; i++) {\n\t                    if (operation.toRemove.indexOf(target) > -1) {\n\t                        if (\n\t                            (whitespaceBefore = target.dom.el.previousSibling) && whitespaceBefore.nodeName === '#text' &&\n\t                            (whitespaceAfter = target.dom.el.nextSibling) && whitespaceAfter.nodeName === '#text'\n\t                        ) {\n\t                            h.removeWhitespace(whitespaceBefore);\n\t                        }\n\t\n\t                        if (!operation.willSort) {\n\t                            // NB: Sorting will remove targets as a bi-product of `printSort()`\n\t\n\t                            self.dom.parent.removeChild(target.dom.el);\n\t                        }\n\t\n\t                        self.targets.splice(i, 1);\n\t\n\t                        target.isInDom = false;\n\t\n\t                        i--;\n\t                    }\n\t                }\n\t\n\t                // Since targets have been removed, the original order must be updated\n\t\n\t                self.origOrder = self.targets;\n\t            }\n\t\n\t            if (operation.willSort) {\n\t                self.targets = operation.newOrder;\n\t            }\n\t\n\t            self.state = operation.newState;\n\t            self.lastOperation = operation;\n\t\n\t            self.dom.targets = self.state.targets;\n\t\n\t            // mixEnd\n\t\n\t            mixitup.events.fire('mixEnd', self.dom.container, {\n\t                state: self.state,\n\t                instance: self\n\t            }, self.dom.document);\n\t\n\t            if (typeof self.config.callbacks.onMixEnd === 'function') {\n\t                self.config.callbacks.onMixEnd.call(self.dom.container, self.state, self);\n\t            }\n\t\n\t            if (operation.hasFailed) {\n\t                // mixFail\n\t\n\t                mixitup.events.fire('mixFail', self.dom.container, {\n\t                    state: self.state,\n\t                    instance: self\n\t                }, self.dom.document);\n\t\n\t                if (typeof self.config.callbacks.onMixFail === 'function') {\n\t                    self.config.callbacks.onMixFail.call(self.dom.container, self.state, self);\n\t                }\n\t\n\t                h.addClass(self.dom.container, h.getClassname(self.config.classNames, 'container', self.config.classNames.modifierFailed));\n\t            }\n\t\n\t            // User-defined callback function\n\t\n\t            if (typeof self.userCallback === 'function') {\n\t                self.userCallback.call(self.dom.container, self.state, self);\n\t            }\n\t\n\t            if (typeof self.userDeferred.resolve === 'function') {\n\t                self.userDeferred.resolve(self.state);\n\t            }\n\t\n\t            self.userCallback  = null;\n\t            self.userDeferred  = null;\n\t            self.lastClicked   = null;\n\t            self.isToggling    = false;\n\t            self.isBusy        = false;\n\t\n\t            if (self.queue.length) {\n\t                self.callActions('beforeReadQueueCleanUp', arguments);\n\t\n\t                nextInQueue = self.queue.shift();\n\t\n\t                // Update non-public API properties stored in queue\n\t\n\t                self.userDeferred  = nextInQueue.deferred;\n\t                self.isToggling    = nextInQueue.isToggling;\n\t                self.lastClicked   = nextInQueue.triggerElement;\n\t\n\t                if (nextInQueue.instruction.command instanceof mixitup.CommandMultimix) {\n\t                    self.multimix.apply(self, nextInQueue.args);\n\t                } else {\n\t                    self.dataset.apply(self, nextInQueue.args);\n\t                }\n\t            }\n\t\n\t            self.callActions('afterCleanUp', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   2.0.0\n\t         * @param   {Array<*>}  args\n\t         * @return  {mixitup.UserInstruction}\n\t         */\n\t\n\t        parseMultimixArgs: function(args) {\n\t            var self        = this,\n\t                instruction = new mixitup.UserInstruction(),\n\t                arg         = null,\n\t                i           = -1;\n\t\n\t            instruction.animate = self.config.animation.enable;\n\t            instruction.command = new mixitup.CommandMultimix();\n\t\n\t            for (i = 0; i < args.length; i++) {\n\t                arg = args[i];\n\t\n\t                if (arg === null) continue;\n\t\n\t                if (typeof arg === 'object') {\n\t                    h.extend(instruction.command, arg);\n\t                } else if (typeof arg === 'boolean') {\n\t                    instruction.animate = arg;\n\t                } else if (typeof arg === 'function') {\n\t                    instruction.callback = arg;\n\t                }\n\t            }\n\t\n\t            // Coerce arbitrary command arguments into typed command objects\n\t\n\t            if (instruction.command.insert && !(instruction.command.insert instanceof mixitup.CommandInsert)) {\n\t                instruction.command.insert = self.parseInsertArgs([instruction.command.insert]).command;\n\t            }\n\t\n\t            if (instruction.command.remove && !(instruction.command.remove instanceof mixitup.CommandRemove)) {\n\t                instruction.command.remove = self.parseRemoveArgs([instruction.command.remove]).command;\n\t            }\n\t\n\t            if (instruction.command.filter && !(instruction.command.filter instanceof mixitup.CommandFilter)) {\n\t                instruction.command.filter = self.parseFilterArgs([instruction.command.filter]).command;\n\t            }\n\t\n\t            if (instruction.command.sort && !(instruction.command.sort instanceof mixitup.CommandSort)) {\n\t                instruction.command.sort = self.parseSortArgs([instruction.command.sort]).command;\n\t            }\n\t\n\t            if (instruction.command.changeLayout && !(instruction.command.changeLayout instanceof mixitup.CommandChangeLayout)) {\n\t                instruction.command.changeLayout = self.parseChangeLayoutArgs([instruction.command.changeLayout]).command;\n\t            }\n\t\n\t            instruction = self.callFilters('instructionParseMultimixArgs', instruction, arguments);\n\t\n\t            h.freeze(instruction);\n\t\n\t            return instruction;\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   2.0.0\n\t         * @param   {Array<*>}  args\n\t         * @return  {mixitup.UserInstruction}\n\t         */\n\t\n\t        parseFilterArgs: function(args) {\n\t            var self        = this,\n\t                instruction = new mixitup.UserInstruction(),\n\t                arg         = null,\n\t                i           = -1;\n\t\n\t            instruction.animate = self.config.animation.enable;\n\t            instruction.command = new mixitup.CommandFilter();\n\t\n\t            for (i = 0; i < args.length; i++) {\n\t                arg = args[i];\n\t\n\t                if (typeof arg === 'string') {\n\t                    // Selector\n\t\n\t                    instruction.command.selector = arg;\n\t                } else if (arg === null) {\n\t                    instruction.command.collection = [];\n\t                } else if (typeof arg === 'object' && h.isElement(arg, self.dom.document)) {\n\t                    // Single element\n\t\n\t                    instruction.command.collection = [arg];\n\t                } else if (typeof arg === 'object' && typeof arg.length !== 'undefined') {\n\t                    // Multiple elements in array, NodeList or jQuery collection\n\t\n\t                    instruction.command.collection = h.arrayFromList(arg);\n\t                } else if (typeof arg === 'object') {\n\t                    // Filter command\n\t\n\t                    h.extend(instruction.command, arg);\n\t                } else if (typeof arg === 'boolean') {\n\t                    instruction.animate = arg;\n\t                } else if (typeof arg === 'function') {\n\t                    instruction.callback = arg;\n\t                }\n\t            }\n\t\n\t            if (instruction.command.selector && instruction.command.collection) {\n\t                throw new Error(mixitup.messages.errorFilterInvalidArguments());\n\t            }\n\t\n\t            instruction = self.callFilters('instructionParseFilterArgs', instruction, arguments);\n\t\n\t            h.freeze(instruction);\n\t\n\t            return instruction;\n\t        },\n\t\n\t        parseSortArgs: function(args) {\n\t            var self        = this,\n\t                instruction = new mixitup.UserInstruction(),\n\t                arg         = null,\n\t                sortString  = '',\n\t                i           = -1;\n\t\n\t            instruction.animate = self.config.animation.enable;\n\t            instruction.command = new mixitup.CommandSort();\n\t\n\t            for (i = 0; i < args.length; i++) {\n\t                arg = args[i];\n\t\n\t                if (arg === null) continue;\n\t\n\t                switch (typeof arg) {\n\t                    case 'string':\n\t                        // Sort string\n\t\n\t                        sortString = arg;\n\t\n\t                        break;\n\t                    case 'object':\n\t                        // Array of element references\n\t\n\t                        if (arg.length) {\n\t                            instruction.command.collection = h.arrayFromList(arg);\n\t                        }\n\t\n\t                        break;\n\t                    case 'boolean':\n\t                        instruction.animate = arg;\n\t\n\t                        break;\n\t                    case 'function':\n\t                        instruction.callback = arg;\n\t\n\t                        break;\n\t                }\n\t            }\n\t\n\t            if (sortString) {\n\t                instruction.command = self.parseSortString(sortString, instruction.command);\n\t            }\n\t\n\t            instruction = self.callFilters('instructionParseSortArgs', instruction, arguments);\n\t\n\t            h.freeze(instruction);\n\t\n\t            return instruction;\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   2.0.0\n\t         * @param   {Array<*>}  args\n\t         * @return  {mixitup.UserInstruction}\n\t         */\n\t\n\t        parseInsertArgs: function(args) {\n\t            var self        = this,\n\t                instruction = new mixitup.UserInstruction(),\n\t                arg         = null,\n\t                i           = -1;\n\t\n\t            instruction.animate = self.config.animation.enable;\n\t            instruction.command = new mixitup.CommandInsert();\n\t\n\t            for (i = 0; i < args.length; i++) {\n\t                arg = args[i];\n\t\n\t                if (arg === null) continue;\n\t\n\t                if (typeof arg === 'number') {\n\t                    // Insert index\n\t\n\t                    instruction.command.index = arg;\n\t                } else if (typeof arg === 'string' && ['before', 'after'].indexOf(arg) > -1) {\n\t                    // 'before'/'after'\n\t\n\t                    instruction.command.position = arg;\n\t                } else if (typeof arg === 'string') {\n\t                    // Markup\n\t\n\t                    instruction.command.collection =\n\t                        h.arrayFromList(h.createElement(arg).childNodes);\n\t                } else if (typeof arg === 'object' && h.isElement(arg, self.dom.document)) {\n\t                    // Single element\n\t\n\t                    !instruction.command.collection.length ?\n\t                        (instruction.command.collection = [arg]) :\n\t                        (instruction.command.sibling = arg);\n\t                } else if (typeof arg === 'object' && arg.length) {\n\t                    // Multiple elements in array or jQuery collection\n\t\n\t                    !instruction.command.collection.length ?\n\t                        (instruction.command.collection = arg) :\n\t                        instruction.command.sibling = arg[0];\n\t                } else if (typeof arg === 'object' && arg.childNodes && arg.childNodes.length) {\n\t                    // Document fragment\n\t\n\t                    !instruction.command.collection.length ?\n\t                        instruction.command.collection = h.arrayFromList(arg.childNodes) :\n\t                        instruction.command.sibling = arg.childNodes[0];\n\t                } else if (typeof arg === 'object') {\n\t                    // Insert command\n\t\n\t                    h.extend(instruction.command, arg);\n\t                } else if (typeof arg === 'boolean') {\n\t                    instruction.animate = arg;\n\t                } else if (typeof arg === 'function') {\n\t                    instruction.callback = arg;\n\t                }\n\t            }\n\t\n\t            if (instruction.command.index && instruction.command.sibling) {\n\t                throw new Error(mixitup.messages.errorInsertInvalidArguments());\n\t            }\n\t\n\t            if (!instruction.command.collection.length && self.config.debug.showWarnings) {\n\t                console.warn(mixitup.messages.warningInsertNoElements());\n\t            }\n\t\n\t            instruction = self.callFilters('instructionParseInsertArgs', instruction, arguments);\n\t\n\t            h.freeze(instruction);\n\t\n\t            return instruction;\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {Array<*>}  args\n\t         * @return  {mixitup.UserInstruction}\n\t         */\n\t\n\t        parseRemoveArgs: function(args) {\n\t            var self        = this,\n\t                instruction = new mixitup.UserInstruction(),\n\t                target      = null,\n\t                arg         = null,\n\t                i           = -1;\n\t\n\t            instruction.animate = self.config.animation.enable;\n\t            instruction.command = new mixitup.CommandRemove();\n\t\n\t            for (i = 0; i < args.length; i++) {\n\t                arg = args[i];\n\t\n\t                if (arg === null) continue;\n\t\n\t                switch (typeof arg) {\n\t                    case 'number':\n\t                        if (self.targets[arg]) {\n\t                            instruction.command.targets[0] = self.targets[arg];\n\t                        }\n\t\n\t                        break;\n\t                    case 'string':\n\t                        instruction.command.collection = h.arrayFromList(self.dom.parent.querySelectorAll(arg));\n\t\n\t                        break;\n\t                    case 'object':\n\t                        if (arg && arg.length) {\n\t                            instruction.command.collection = arg;\n\t                        } else if (h.isElement(arg, self.dom.document)) {\n\t                            instruction.command.collection = [arg];\n\t                        } else {\n\t                            // Remove command\n\t\n\t                            h.extend(instruction.command, arg);\n\t                        }\n\t\n\t                        break;\n\t                    case 'boolean':\n\t                        instruction.animate = arg;\n\t\n\t                        break;\n\t                    case 'function':\n\t                        instruction.callback = arg;\n\t\n\t                        break;\n\t                }\n\t            }\n\t\n\t            if (instruction.command.collection.length) {\n\t                for (i = 0; target = self.targets[i]; i++) {\n\t                    if (instruction.command.collection.indexOf(target.dom.el) > -1) {\n\t                        instruction.command.targets.push(target);\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (!instruction.command.targets.length && self.config.debug.showWarnings) {\n\t                console.warn(mixitup.messages.warningRemoveNoElements());\n\t            }\n\t\n\t            h.freeze(instruction);\n\t\n\t            return instruction;\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {Array<*>}  args\n\t         * @return  {mixitup.UserInstruction}\n\t         */\n\t\n\t        parseDatasetArgs: function(args) {\n\t            var self        = this,\n\t                instruction = new mixitup.UserInstruction(),\n\t                arg         = null,\n\t                i           = -1;\n\t\n\t            instruction.animate = self.config.animation.enable;\n\t            instruction.command = new mixitup.CommandDataset();\n\t\n\t            for (i = 0; i < args.length; i++) {\n\t                arg = args[i];\n\t\n\t                if (arg === null) continue;\n\t\n\t                switch (typeof arg) {\n\t                    case 'object':\n\t                        if (Array.isArray(arg) || typeof arg.length === 'number') {\n\t                            instruction.command.dataset = arg;\n\t                        } else {\n\t                            // Change layout command\n\t\n\t                            h.extend(instruction.command, arg);\n\t                        }\n\t\n\t                        break;\n\t                    case 'boolean':\n\t                        instruction.animate = arg;\n\t\n\t                        break;\n\t                    case 'function':\n\t                        instruction.callback = arg;\n\t\n\t                        break;\n\t                }\n\t            }\n\t\n\t            h.freeze(instruction);\n\t\n\t            return instruction;\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {Array<*>}  args\n\t         * @return  {mixitup.UserInstruction}\n\t         */\n\t\n\t        parseChangeLayoutArgs: function(args) {\n\t            var self        = this,\n\t                instruction = new mixitup.UserInstruction(),\n\t                arg         = null,\n\t                i           = -1;\n\t\n\t            instruction.animate = self.config.animation.enable;\n\t            instruction.command = new mixitup.CommandChangeLayout();\n\t\n\t            for (i = 0; i < args.length; i++) {\n\t                arg = args[i];\n\t\n\t                if (arg === null) continue;\n\t\n\t                switch (typeof arg) {\n\t                    case 'string':\n\t                        instruction.command.containerClassName = arg;\n\t\n\t                        break;\n\t                    case 'object':\n\t                        // Change layout command\n\t\n\t                        h.extend(instruction.command, arg);\n\t\n\t                        break;\n\t                    case 'boolean':\n\t                        instruction.animate = arg;\n\t\n\t                        break;\n\t                    case 'function':\n\t                        instruction.callback = arg;\n\t\n\t                        break;\n\t                }\n\t            }\n\t\n\t            h.freeze(instruction);\n\t\n\t            return instruction;\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since       3.0.0\n\t         * @param       {mixitup.QueueItem}         queueItem\n\t         * @return      {Promise.<mixitup.State>}\n\t         */\n\t\n\t        queueMix: function(queueItem) {\n\t            var self            = this,\n\t                deferred        = null,\n\t                toggleSelector  = '';\n\t\n\t            self.callActions('beforeQueueMix', arguments);\n\t\n\t            deferred = h.defer(mixitup.libraries);\n\t\n\t            if (self.config.animation.queue && self.queue.length < self.config.animation.queueLimit) {\n\t                queueItem.deferred = deferred;\n\t\n\t                self.queue.push(queueItem);\n\t\n\t                // Keep controls in sync with user interactions. Mixer will catch up as it drains the queue.\n\t\n\t                if (self.config.controls.enable) {\n\t                    if (self.isToggling) {\n\t                        self.buildToggleArray(queueItem.instruction.command);\n\t\n\t                        toggleSelector = self.getToggleSelector();\n\t\n\t                        self.updateControls({\n\t                            filter: {\n\t                                selector: toggleSelector\n\t                            }\n\t                        });\n\t                    } else {\n\t                        self.updateControls(queueItem.instruction.command);\n\t                    }\n\t                }\n\t            } else {\n\t                if (self.config.debug.showWarnings) {\n\t                    console.warn(mixitup.messages.warningMultimixInstanceQueueFull());\n\t                }\n\t\n\t                deferred.resolve(self.state);\n\t\n\t                mixitup.events.fire('mixBusy', self.dom.container, {\n\t                    state: self.state,\n\t                    instance: self\n\t                }, self.dom.document);\n\t\n\t                if (typeof self.config.callbacks.onMixBusy === 'function') {\n\t                    self.config.callbacks.onMixBusy.call(self.dom.container, self.state, self);\n\t                }\n\t            }\n\t\n\t            return self.callFilters('promiseQueueMix', deferred.promise, arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {Array.<object>}    newDataset\n\t         * @return  {Operation}\n\t         */\n\t\n\t        getDataOperation: function(newDataset) {\n\t            var self                = this,\n\t                operation           = new mixitup.Operation(),\n\t                startDataset        = [];\n\t\n\t            operation = self.callFilters('operationUnmappedGetDataOperation', operation, arguments);\n\t\n\t            if (self.dom.targets.length && !(startDataset = (self.state.activeDataset || [])).length) {\n\t                throw new Error(mixitup.messages.errorDatasetNotSet());\n\t            }\n\t\n\t            operation.id            = h.randomHex();\n\t            operation.startState    = self.state;\n\t            operation.startDataset  = startDataset;\n\t            operation.newDataset    = newDataset.slice();\n\t\n\t            self.diffDatasets(operation);\n\t\n\t            operation.startOrder = self.targets;\n\t            operation.newOrder = operation.show;\n\t\n\t            if (self.config.animation.enable) {\n\t                self.getStartMixData(operation);\n\t                self.setInter(operation);\n\t\n\t                operation.docState = h.getDocumentState(self.dom.document);\n\t\n\t                self.getInterMixData(operation);\n\t                self.setFinal(operation);\n\t                self.getFinalMixData(operation);\n\t\n\t                self.parseEffects();\n\t\n\t                operation.hasEffect = self.hasEffect();\n\t\n\t                self.getTweenData(operation);\n\t            }\n\t\n\t            self.targets = operation.show.slice();\n\t\n\t            operation.newState = self.buildState(operation);\n\t\n\t            // NB: Targets to be removed must be included in `self.targets` for removal during clean up,\n\t            // but are added after state is built so that state is accurate\n\t\n\t            Array.prototype.push.apply(self.targets, operation.toRemove);\n\t\n\t            operation = self.callFilters('operationMappedGetDataOperation', operation, arguments);\n\t\n\t            return operation;\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {mixitup.Operation} operation\n\t         * @return  {void}\n\t         */\n\t\n\t        diffDatasets: function(operation) {\n\t            var self                = this,\n\t                persistantStartIds  = [],\n\t                persistantNewIds    = [],\n\t                insertedTargets     = [],\n\t                data                = null,\n\t                target              = null,\n\t                el                  = null,\n\t                frag                = null,\n\t                nextEl              = null,\n\t                uids                = {},\n\t                id                  = '',\n\t                i                   = -1;\n\t\n\t            self.callActions('beforeDiffDatasets', arguments);\n\t\n\t            for (i = 0; data = operation.newDataset[i]; i++) {\n\t                if (typeof (id = data[self.config.data.uidKey]) === 'undefined' || id.toString().length < 1) {\n\t                    throw new TypeError(mixitup.messages.errorDatasetInvalidUidKey({\n\t                        uidKey: self.config.data.uidKey\n\t                    }));\n\t                }\n\t\n\t                if (!uids[id]) {\n\t                    uids[id] = true;\n\t                } else {\n\t                    throw new Error(mixitup.messages.errorDatasetDuplicateUid({\n\t                        uid: id\n\t                    }));\n\t                }\n\t\n\t                if ((target = self.cache[id]) instanceof mixitup.Target) {\n\t                    // Already in cache\n\t\n\t                    if (self.config.data.dirtyCheck && !h.deepEquals(data, target.data)) {\n\t                        // change detected\n\t\n\t                        el = target.render(data);\n\t\n\t                        target.data = data;\n\t\n\t                        if (el !== target.dom.el) {\n\t                            // Update target element reference\n\t\n\t                            if (target.isInDom) {\n\t                                target.unbindEvents();\n\t\n\t                                self.dom.parent.replaceChild(el, target.dom.el);\n\t                            }\n\t\n\t                            if (!target.isShown) {\n\t                                el.style.display = 'none';\n\t                            }\n\t\n\t                            target.dom.el = el;\n\t\n\t                            if (target.isInDom) {\n\t                                target.bindEvents();\n\t                            }\n\t                        }\n\t                    }\n\t\n\t                    el = target.dom.el;\n\t                } else {\n\t                    // New target\n\t\n\t                    target = new mixitup.Target();\n\t\n\t                    target.init(null, self, data);\n\t\n\t                    target.hide();\n\t                }\n\t\n\t                if (!target.isInDom) {\n\t                    // Adding to DOM\n\t\n\t                    if (!frag) {\n\t                        // Open frag\n\t\n\t                        frag = self.dom.document.createDocumentFragment();\n\t                    }\n\t\n\t                    if (frag.lastElementChild) {\n\t                        frag.appendChild(self.dom.document.createTextNode(' '));\n\t                    }\n\t\n\t                    frag.appendChild(target.dom.el);\n\t\n\t                    target.isInDom = true;\n\t\n\t                    target.unbindEvents();\n\t                    target.bindEvents();\n\t                    target.hide();\n\t\n\t                    operation.toShow.push(target);\n\t\n\t                    insertedTargets.push(target);\n\t                } else {\n\t                    // Already in DOM\n\t\n\t                    nextEl = target.dom.el.nextElementSibling;\n\t\n\t                    persistantNewIds.push(id);\n\t\n\t                    if (frag) {\n\t                        // Close and insert previously opened frag\n\t\n\t                        if (frag.lastElementChild) {\n\t                            frag.appendChild(self.dom.document.createTextNode(' '));\n\t                        }\n\t\n\t                        self.insertDatasetFrag(frag, target.dom.el, insertedTargets);\n\t\n\t                        frag = null;\n\t                    }\n\t                }\n\t\n\t                operation.show.push(target);\n\t            }\n\t\n\t            if (frag) {\n\t                // Unclosed frag remaining\n\t\n\t                nextEl = nextEl || self.config.layout.siblingAfter;\n\t\n\t                if (nextEl) {\n\t                    frag.appendChild(self.dom.document.createTextNode(' '));\n\t                }\n\t\n\t                self.insertDatasetFrag(frag, nextEl, insertedTargets);\n\t            }\n\t\n\t            for (i = 0; data = operation.startDataset[i]; i++) {\n\t                id = data[self.config.data.uidKey];\n\t\n\t                target = self.cache[id];\n\t\n\t                if (operation.show.indexOf(target) < 0) {\n\t                    // Previously shown but now absent\n\t\n\t                    operation.hide.push(target);\n\t                    operation.toHide.push(target);\n\t                    operation.toRemove.push(target);\n\t                } else {\n\t                    persistantStartIds.push(id);\n\t                }\n\t            }\n\t\n\t            if (!h.isEqualArray(persistantStartIds, persistantNewIds)) {\n\t                operation.willSort = true;\n\t            }\n\t\n\t            self.callActions('afterDiffDatasets', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.1.5\n\t         * @param   {DocumentFragment}          frag\n\t         * @param   {(HTMLElement|null)}        nextEl\n\t         * @param   {Array.<mixitup.Target>}    targets\n\t         * @return  {void}\n\t         */\n\t\n\t        insertDatasetFrag: function(frag, nextEl, targets) {\n\t            var self = this;\n\t            var insertAt = nextEl ? Array.from(self.dom.parent.children).indexOf(nextEl) : self.targets.length;\n\t\n\t            self.dom.parent.insertBefore(frag, nextEl);\n\t\n\t            while (targets.length) {\n\t                self.targets.splice(insertAt, 0, targets.shift());\n\t\n\t                insertAt++;\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {mixitup.CommandSort} sortCommandA\n\t         * @param   {mixitup.CommandSort} sortCommandB\n\t         * @return  {boolean}\n\t         */\n\t\n\t        willSort: function(sortCommandA, sortCommandB) {\n\t            var self    = this,\n\t                result  = false;\n\t\n\t            if (\n\t                self.config.behavior.liveSort ||\n\t                sortCommandA.order       === 'random' ||\n\t                sortCommandA.attribute   !== sortCommandB.attribute ||\n\t                sortCommandA.order       !== sortCommandB.order ||\n\t                sortCommandA.collection  !== sortCommandB.collection ||\n\t                (sortCommandA.next === null && sortCommandB.next) ||\n\t                (sortCommandA.next && sortCommandB.next === null)\n\t            ) {\n\t                result = true;\n\t            } else if (sortCommandA.next && sortCommandB.next) {\n\t                result = self.willSort(sortCommandA.next, sortCommandB.next);\n\t            } else {\n\t                result = false;\n\t            }\n\t\n\t            return self.callFilters('resultWillSort', result, arguments);\n\t        },\n\t\n\t        /**\n\t         * A shorthand method for `.filter('all')`. Shows all targets in the container.\n\t         *\n\t         * @example\n\t         *\n\t         * .show()\n\t         *\n\t         * @example <caption>Example: Showing all targets</caption>\n\t         *\n\t         * mixer.show()\n\t         *     .then(function(state) {\n\t         *         console.log(state.totalShow === state.totalTargets); // true\n\t         *     });\n\t         *\n\t         * @public\n\t         * @instance\n\t         * @since       3.0.0\n\t         * @return      {Promise.<mixitup.State>}\n\t         */\n\t\n\t        show: function() {\n\t            var self = this;\n\t\n\t            return self.filter('all');\n\t        },\n\t\n\t        /**\n\t         * A shorthand method for `.filter('none')`. Hides all targets in the container.\n\t         *\n\t         * @example\n\t         *\n\t         * .hide()\n\t         *\n\t         * @example <caption>Example: Hiding all targets</caption>\n\t         *\n\t         * mixer.hide()\n\t         *     .then(function(state) {\n\t         *         console.log(state.totalShow === 0); // true\n\t         *         console.log(state.totalHide === state.totalTargets); // true\n\t         *     });\n\t         *\n\t         * @public\n\t         * @instance\n\t         * @since       3.0.0\n\t         * @return      {Promise.<mixitup.State>}\n\t         */\n\t\n\t        hide: function() {\n\t            var self = this;\n\t\n\t            return self.filter('none');\n\t        },\n\t\n\t        /**\n\t         * Returns a boolean indicating whether or not a MixItUp operation is\n\t         * currently in progress.\n\t         *\n\t         * @example\n\t         *\n\t         * .isMixing()\n\t         *\n\t         * @example <caption>Example: Checking the status of a mixer</caption>\n\t         *\n\t         * mixer.sort('random', function() {\n\t         *     console.log(mixer.isMixing()) // false\n\t         * });\n\t         *\n\t         * console.log(mixer.isMixing()) // true\n\t         *\n\t         * @public\n\t         * @instance\n\t         * @since   2.0.0\n\t         * @return  {boolean}\n\t         */\n\t\n\t        isMixing: function() {\n\t            var self = this;\n\t\n\t            return self.isBusy;\n\t        },\n\t\n\t        /**\n\t         * Filters all targets in the container by a provided selector string, or the values `'all'`\n\t         * or `'none'`. Only targets matching the selector will be shown.\n\t         *\n\t         * @example\n\t         *\n\t         * .filter(selector [, animate] [, callback])\n\t         *\n\t         * @example <caption>Example 1: Filtering targets by a class selector</caption>\n\t         *\n\t         * mixer.filter('.category-a')\n\t         *     .then(function(state) {\n\t         *         console.log(state.totalShow === containerEl.querySelectorAll('.category-a').length); // true\n\t         *     });\n\t         *\n\t         * @example <caption>Example 2: Filtering targets by an attribute selector</caption>\n\t         *\n\t         * mixer.filter('[data-category~=\"a\"]')\n\t         *     .then(function(state) {\n\t         *         console.log(state.totalShow === containerEl.querySelectorAll('[data-category~=\"a\"]').length); // true\n\t         *     });\n\t         *\n\t         * @example <caption>Example 3: Filtering targets by a compound selector</caption>\n\t         *\n\t         * // Show only those targets with the classes 'category-a' AND 'category-b'\n\t         *\n\t         * mixer.filter('.category-a.category-c')\n\t         *     .then(function(state) {\n\t         *         console.log(state.totalShow === containerEl.querySelectorAll('.category-a.category-c').length); // true\n\t         *     });\n\t         *\n\t         * @example <caption>Example 4: Filtering via an element collection</caption>\n\t         *\n\t         * var collection = Array.from(container.querySelectorAll('.mix'));\n\t         *\n\t         * console.log(collection.length); // 34\n\t         *\n\t         * // Filter the collection manually using Array.prototype.filter\n\t         *\n\t         * var filtered = collection.filter(function(target) {\n\t         *    return parseInt(target.getAttribute('data-price')) > 10;\n\t         * });\n\t         *\n\t         * console.log(filtered.length); // 22\n\t         *\n\t         * // Pass the filtered collection to MixItUp\n\t         *\n\t         * mixer.filter(filtered)\n\t         *    .then(function(state) {\n\t         *        console.log(state.activeFilter.collection.length === 22); // true\n\t         *    });\n\t         *\n\t         * @public\n\t         * @instance\n\t         * @since       2.0.0\n\t         * @param       {(string|HTMLElement|Array.<HTMLElement>)} selector\n\t         *      Any valid CSS selector (i.e. `'.category-a'`), or the values `'all'` or `'none'`. The filter method also accepts a reference to single target element or a collection of target elements to show.\n\t         * @param       {boolean}   [animate=true]\n\t         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n\t         * @param       {function}  [callback=null]\n\t         *      An optional callback function to be invoked after the operation has completed.\n\t         * @return      {Promise.<mixitup.State>}\n\t         *      A promise resolving with the current state object.\n\t         */\n\t\n\t        filter: function() {\n\t            var self        = this,\n\t                instruction = self.parseFilterArgs(arguments);\n\t\n\t            return self.multimix({\n\t                filter: instruction.command\n\t            }, instruction.animate, instruction.callback);\n\t        },\n\t\n\t        /**\n\t         * Adds an additional selector to the currently active filter selector, concatenating\n\t         * as per the logic defined in `controls.toggleLogic`.\n\t         *\n\t         * @example\n\t         *\n\t         * .toggleOn(selector [, animate] [, callback])\n\t         *\n\t         * @example <caption>Example: Toggling on a filter selector</caption>\n\t         *\n\t         * console.log(mixer.getState().activeFilter.selector); // '.category-a'\n\t         *\n\t         * mixer.toggleOn('.category-b')\n\t         *     .then(function(state) {\n\t         *         console.log(state.activeFilter.selector); // '.category-a, .category-b'\n\t         *     });\n\t         *\n\t         * @public\n\t         * @instance\n\t         * @since       3.0.0\n\t         * @param       {string}    selector\n\t         *      Any valid CSS selector (i.e. `'.category-a'`)\n\t         * @param       {boolean}   [animate=true]\n\t         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n\t         * @param       {function}  [callback=null]\n\t         *      An optional callback function to be invoked after the operation has completed.\n\t         * @return      {Promise.<mixitup.State>}\n\t         *      A promise resolving with the current state object.\n\t         */\n\t\n\t        toggleOn: function() {\n\t            var self            = this,\n\t                instruction     = self.parseFilterArgs(arguments),\n\t                selector        = instruction.command.selector,\n\t                toggleSelector  = '';\n\t\n\t            self.isToggling = true;\n\t\n\t            if (self.toggleArray.indexOf(selector) < 0) {\n\t                self.toggleArray.push(selector);\n\t            }\n\t\n\t            toggleSelector = self.getToggleSelector();\n\t\n\t            return self.multimix({\n\t                filter: toggleSelector\n\t            }, instruction.animate, instruction.callback);\n\t        },\n\t\n\t        /**\n\t         * Removes a selector from the active filter selector.\n\t         *\n\t         * @example\n\t         *\n\t         * .toggleOff(selector [, animate] [, callback])\n\t         *\n\t         * @example <caption>Example: Toggling off a filter selector</caption>\n\t         *\n\t         * console.log(mixer.getState().activeFilter.selector); // '.category-a, .category-b'\n\t         *\n\t         * mixer.toggleOff('.category-b')\n\t         *     .then(function(state) {\n\t         *         console.log(state.activeFilter.selector); // '.category-a'\n\t         *     });\n\t         *\n\t         * @public\n\t         * @instance\n\t         * @since       3.0.0\n\t         * @param       {string}    selector\n\t         *      Any valid CSS selector (i.e. `'.category-a'`)\n\t         * @param       {boolean}   [animate=true]\n\t         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n\t         * @param       {function}  [callback=null]\n\t         *      An optional callback function to be invoked after the operation has completed.\n\t         * @return      {Promise.<mixitup.State>}\n\t         *      A promise resolving with the current state object.\n\t         */\n\t\n\t        toggleOff: function() {\n\t            var self            = this,\n\t                instruction     = self.parseFilterArgs(arguments),\n\t                selector        = instruction.command.selector,\n\t                selectorIndex   = self.toggleArray.indexOf(selector),\n\t                toggleSelector  = '';\n\t\n\t            self.isToggling = true;\n\t\n\t            if (selectorIndex > -1) {\n\t                self.toggleArray.splice(selectorIndex, 1);\n\t            }\n\t\n\t            toggleSelector = self.getToggleSelector();\n\t\n\t            return self.multimix({\n\t                filter: toggleSelector\n\t            }, instruction.animate, instruction.callback);\n\t        },\n\t\n\t        /**\n\t         * Sorts all targets in the container according to a provided sort string.\n\t         *\n\t         * @example\n\t         *\n\t         * .sort(sortString [, animate] [, callback])\n\t         *\n\t         * @example <caption>Example 1: Sorting by the default DOM order</caption>\n\t         *\n\t         * // Reverse the default order of the targets\n\t         *\n\t         * mixer.sort('default:desc')\n\t         *     .then(function(state) {\n\t         *         console.log(state.activeSort.attribute === 'default'); // true\n\t         *         console.log(state.activeSort.order === 'desc'); // true\n\t         *     });\n\t         *\n\t         * @example <caption>Example 2: Sorting by a custom data-attribute</caption>\n\t         *\n\t         * // Sort the targets by the value of a `data-published-date` attribute\n\t         *\n\t         * mixer.sort('published-date:asc')\n\t         *     .then(function(state) {\n\t         *         console.log(state.activeSort.attribute === 'published-date'); // true\n\t         *         console.log(state.activeSort.order === 'asc'); // true\n\t         *     });\n\t         *\n\t         * @example <caption>Example 3: Sorting by multiple attributes</caption>\n\t         *\n\t         * // Sort the targets by the value of a `data-published-date` attribute, then by `data-title`\n\t         *\n\t         * mixer.sort('published-date:desc data-title:asc')\n\t         *     .then(function(state) {\n\t         *         console.log(state.activeSort.attribute === 'published-date'); // true\n\t         *         console.log(state.activeSort.order === 'desc'); // true\n\t         *\n\t         *         console.log(state.activeSort.next.attribute === 'title'); // true\n\t         *         console.log(state.activeSort.next.order === 'asc'); // true\n\t         *     });\n\t         *\n\t         * @example <caption>Example 4: Sorting by random</caption>\n\t         *\n\t         * mixer.sort('random')\n\t         *     .then(function(state) {\n\t         *         console.log(state.activeSort.order === 'random') // true\n\t         *     });\n\t         *\n\t         * @example <caption>Example 5: Sorting via an element collection</caption>\n\t         *\n\t         * var collection = Array.from(container.querySelectorAll('.mix'));\n\t         *\n\t         * // Swap the position of two elements in the collection:\n\t         *\n\t         * var temp = collection[1];\n\t         *\n\t         * collection[1] = collection[0];\n\t         * collection[0] = temp;\n\t         *\n\t         * // Pass the sorted collection to MixItUp\n\t         *\n\t         * mixer.sort(collection)\n\t         *     .then(function(state) {\n\t         *         console.log(state.targets[0] === collection[0]); // true\n\t         *     });\n\t         *\n\t         * @public\n\t         * @instance\n\t         * @since       2.0.0\n\t         * @param       {(string|Array.<HTMLElement>)}    sortString\n\t         *      A valid sort string (e.g. `'default'`, `'published-date:asc'`, or `'random'`). The sort method also accepts an array of all target elements in a user-defined order.\n\t         * @param       {boolean}   [animate=true]\n\t         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n\t         * @param       {function}  [callback=null]\n\t         *      An optional callback function to be invoked after the operation has completed.\n\t         * @return      {Promise.<mixitup.State>}\n\t         *      A promise resolving with the current state object.\n\t         */\n\t\n\t        sort: function() {\n\t            var self        = this,\n\t                instruction = self.parseSortArgs(arguments);\n\t\n\t            return self.multimix({\n\t                sort: instruction.command\n\t            }, instruction.animate, instruction.callback);\n\t        },\n\t\n\t        /**\n\t         * Changes the layout of the container by adding, removing or updating a\n\t         * layout-specific class name. If `animation.animateResizetargets` is\n\t         * enabled, MixItUp will attempt to gracefully animate the width, height,\n\t         * and position of targets between layout states.\n\t         *\n\t         * @example\n\t         *\n\t         * .changeLayout(containerClassName [, animate] [, callback])\n\t         *\n\t         * @example <caption>Example 1: Adding a new class name to the container</caption>\n\t         *\n\t         * mixer.changeLayout('container-list')\n\t         *      .then(function(state) {\n\t         *          console.log(state.activeContainerClass === 'container-list'); // true\n\t         *      });\n\t         *\n\t         * @example <caption>Example 2: Removing a previously added class name from the container</caption>\n\t         *\n\t         * mixer.changeLayout('')\n\t         *      .then(function(state) {\n\t         *          console.log(state.activeContainerClass === ''); // true\n\t         *      });\n\t         *\n\t         * @public\n\t         * @instance\n\t         * @since       2.0.0\n\t         * @param       {string}    containerClassName\n\t         *      A layout-specific class name to add to the container.\n\t         * @param       {boolean}   [animate=true]\n\t         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n\t         * @param       {function}  [callback=null]\n\t         *      An optional callback function to be invoked after the operation has completed.\n\t         * @return      {Promise.<mixitup.State>}\n\t         *      A promise resolving with the current state object.\n\t         */\n\t\n\t        changeLayout: function() {\n\t            var self        = this,\n\t                instruction = self.parseChangeLayoutArgs(arguments);\n\t\n\t            return self.multimix({\n\t                changeLayout: instruction.command\n\t            }, instruction.animate, instruction.callback);\n\t        },\n\t\n\t        /**\n\t         * Updates the contents and order of the container to reflect the provided dataset,\n\t         * if the dataset API is in use.\n\t         *\n\t         * The dataset API is designed for use in API-driven JavaScript applications, and\n\t         * can be used instead of DOM-based methods such as `.filter()`, `.sort()`,\n\t         * `.insert()`, etc. When used, insertion, removal, sorting and pagination can be\n\t         * achieved purely via changes to your data model, without the uglyness of having\n\t         * to interact with or query the DOM directly.\n\t         *\n\t         * @example\n\t         *\n\t         * .dataset(dataset [, animate] [, callback])\n\t         *\n\t         * @example <caption>Example 1: Rendering a dataset</caption>\n\t         *\n\t         * var myDataset = [\n\t         *     {id: 1, ...},\n\t         *     {id: 2, ...},\n\t         *     {id: 3, ...}\n\t         * ];\n\t         *\n\t         * mixer.dataset(myDataset)\n\t         *     .then(function(state) {\n\t         *         console.log(state.totalShow === 3); // true\n\t         *     });\n\t         *\n\t         * @example <caption>Example 2: Sorting a dataset</caption>\n\t         *\n\t         * // Create a new dataset in reverse order\n\t         *\n\t         * var newDataset = myDataset.slice().reverse();\n\t         *\n\t         * mixer.dataset(newDataset)\n\t         *     .then(function(state) {\n\t         *         console.log(state.activeDataset[0] === myDataset[2]); // true\n\t         *     });\n\t         *\n\t         * @example <caption>Example 3: Removing an item from the dataset</caption>\n\t         *\n\t         * console.log(myDataset.length); // 3\n\t         *\n\t         * // Create a new dataset with the last item removed.\n\t         *\n\t         * var newDataset = myDataset.slice().pop();\n\t         *\n\t         * mixer.dataset(newDataset)\n\t         *     .then(function(state) {\n\t         *         console.log(state.totalShow === 2); // true\n\t         *     });\n\t         *\n\t         * @public\n\t         * @instance\n\t         * @since       3.0.0\n\t         * @param       {Array.<object>}    dataset\n\t         *      An array of objects, each one representing the underlying data model of a target to be rendered.\n\t         * @param       {boolean}           [animate=true]\n\t         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n\t         * @param       {function}          [callback=null]\n\t         *      An optional callback function to be invoked after the operation has completed.\n\t         * @return      {Promise.<mixitup.State>}\n\t         *      A promise resolving with the current state object.\n\t         */\n\t\n\t        dataset: function() {\n\t            var self        = this,\n\t                instruction = self.parseDatasetArgs(arguments),\n\t                operation   = null,\n\t                queueItem   = null,\n\t                animate     = false;\n\t\n\t            self.callActions('beforeDataset', arguments);\n\t\n\t            if (!self.isBusy) {\n\t                if (instruction.callback) self.userCallback = instruction.callback;\n\t\n\t                animate = (instruction.animate ^ self.config.animation.enable) ? instruction.animate : self.config.animation.enable;\n\t\n\t                operation = self.getDataOperation(instruction.command.dataset);\n\t\n\t                return self.goMix(animate, operation);\n\t            } else {\n\t                queueItem = new mixitup.QueueItem();\n\t\n\t                queueItem.args          = arguments;\n\t                queueItem.instruction   = instruction;\n\t\n\t                return self.queueMix(queueItem);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Performs simultaneous `filter`, `sort`, `insert`, `remove` and `changeLayout`\n\t         * operations as requested.\n\t         *\n\t         * @example\n\t         *\n\t         * .multimix(multimixCommand [, animate] [, callback])\n\t         *\n\t         * @example <caption>Example 1: Performing simultaneous filtering and sorting</caption>\n\t         *\n\t         * mixer.multimix({\n\t         *     filter: '.category-b',\n\t         *     sort: 'published-date:desc'\n\t         * })\n\t         *     .then(function(state) {\n\t         *         console.log(state.activeFilter.selector === '.category-b'); // true\n\t         *         console.log(state.activeSort.attribute === 'published-date'); // true\n\t         *     });\n\t         *\n\t         * @example <caption>Example 2: Performing simultaneous sorting, insertion, and removal</caption>\n\t         *\n\t         * console.log(mixer.getState().totalShow); // 6\n\t         *\n\t         * // NB: When inserting via `multimix()`, an object should be provided as the value\n\t         * // for the `insert` portion of the command, allowing for a collection of elements\n\t         * // and an insertion index to be specified.\n\t         *\n\t         * mixer.multimix({\n\t         *     sort: 'published-date:desc', // Sort the container, including any new elements\n\t         *     insert: {\n\t         *         collection: [newElementReferenceA, newElementReferenceB], // Add 2 new elements at index 5\n\t         *         index: 5\n\t         *     },\n\t         *     remove: existingElementReference // Remove 1 existing element\n\t         * })\n\t         *     .then(function(state) {\n\t         *         console.log(state.activeSort.attribute === 'published-date'); // true\n\t         *         console.log(state.totalShow === 7); // true\n\t         *     });\n\t         *\n\t         * @public\n\t         * @instance\n\t         * @since       2.0.0\n\t         * @param       {object}    multimixCommand\n\t         *      An object containing one or more things to do\n\t         * @param       {boolean}   [animate=true]\n\t         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n\t         * @param       {function}  [callback=null]\n\t         *      An optional callback function to be invoked after the operation has completed.\n\t         * @return      {Promise.<mixitup.State>}\n\t         *      A promise resolving with the current state object.\n\t         */\n\t\n\t        multimix: function() {\n\t            var self        = this,\n\t                operation   = null,\n\t                animate     = false,\n\t                queueItem   = null,\n\t                instruction = self.parseMultimixArgs(arguments);\n\t\n\t            self.callActions('beforeMultimix', arguments);\n\t\n\t            if (!self.isBusy) {\n\t                operation = self.getOperation(instruction.command);\n\t\n\t                if (self.config.controls.enable) {\n\t                    // Update controls for API calls\n\t\n\t                    if (instruction.command.filter && !self.isToggling) {\n\t                        // As we are not toggling, reset the toggle array\n\t                        // so new filter overrides existing toggles\n\t\n\t                        self.toggleArray.length = 0;\n\t                        self.buildToggleArray(operation.command);\n\t                    }\n\t\n\t                    if (self.queue.length < 1) {\n\t                        self.updateControls(operation.command);\n\t                    }\n\t                }\n\t\n\t                if (instruction.callback) self.userCallback = instruction.callback;\n\t\n\t                // Always allow the instruction to override the instance setting\n\t\n\t                animate = (instruction.animate ^ self.config.animation.enable) ?\n\t                    instruction.animate :\n\t                    self.config.animation.enable;\n\t\n\t                self.callFilters('operationMultimix', operation, arguments);\n\t\n\t                return self.goMix(animate, operation);\n\t            } else {\n\t                queueItem = new mixitup.QueueItem();\n\t\n\t                queueItem.args           = arguments;\n\t                queueItem.instruction    = instruction;\n\t                queueItem.triggerElement = self.lastClicked;\n\t                queueItem.isToggling     = self.isToggling;\n\t\n\t                return self.queueMix(queueItem);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {object}            multimixCommand\n\t         * @param   {boolean}           [isPreFetch]\n\t         *      An optional boolean indicating that the operation is being pre-fetched for execution at a later time.\n\t         * @return  {Operation|null}\n\t         */\n\t\n\t        getOperation: function(multimixCommand) {\n\t            var self                = this,\n\t                sortCommand         = multimixCommand.sort,\n\t                filterCommand       = multimixCommand.filter,\n\t                changeLayoutCommand = multimixCommand.changeLayout,\n\t                removeCommand       = multimixCommand.remove,\n\t                insertCommand       = multimixCommand.insert,\n\t                operation           = new mixitup.Operation();\n\t\n\t            operation = self.callFilters('operationUnmappedGetOperation', operation, arguments);\n\t\n\t            operation.id                = h.randomHex();\n\t            operation.command           = multimixCommand;\n\t            operation.startState        = self.state;\n\t            operation.triggerElement    = self.lastClicked;\n\t\n\t            if (self.isBusy) {\n\t                if (self.config.debug.showWarnings) {\n\t                    console.warn(mixitup.messages.warningGetOperationInstanceBusy());\n\t                }\n\t\n\t                return null;\n\t            }\n\t\n\t            if (insertCommand) {\n\t                self.insertTargets(insertCommand, operation);\n\t            }\n\t\n\t            if (removeCommand) {\n\t                operation.toRemove = removeCommand.targets;\n\t            }\n\t\n\t            operation.startSort = operation.newSort = operation.startState.activeSort;\n\t            operation.startOrder = operation.newOrder = self.targets;\n\t\n\t            if (sortCommand) {\n\t                operation.startSort = operation.startState.activeSort;\n\t                operation.newSort   = sortCommand;\n\t\n\t                operation.willSort = self.willSort(sortCommand, operation.startState.activeSort);\n\t\n\t                if (operation.willSort) {\n\t                    self.sortOperation(operation);\n\t                }\n\t            }\n\t\n\t            operation.startFilter = operation.startState.activeFilter;\n\t\n\t            if (filterCommand) {\n\t                operation.newFilter = filterCommand;\n\t            } else {\n\t                operation.newFilter = h.extend(new mixitup.CommandFilter(), operation.startFilter);\n\t            }\n\t\n\t            if (operation.newFilter.selector === 'all') {\n\t                operation.newFilter.selector = self.config.selectors.target;\n\t            } else if (operation.newFilter.selector === 'none') {\n\t                operation.newFilter.selector = '';\n\t            }\n\t\n\t            self.filterOperation(operation);\n\t\n\t            operation.startContainerClassName = operation.startState.activeContainerClassName;\n\t\n\t            if (changeLayoutCommand) {\n\t                operation.newContainerClassName = changeLayoutCommand.containerClassName;\n\t\n\t                if (operation.newContainerClassName !== operation.startContainerClassName) {\n\t                    operation.willChangeLayout = true;\n\t                }\n\t            } else {\n\t                operation.newContainerClassName = operation.startContainerClassName;\n\t            }\n\t\n\t            if (self.config.animation.enable) {\n\t                // Populate the operation's position data\n\t\n\t                self.getStartMixData(operation);\n\t                self.setInter(operation);\n\t\n\t                operation.docState = h.getDocumentState(self.dom.document);\n\t\n\t                self.getInterMixData(operation);\n\t                self.setFinal(operation);\n\t                self.getFinalMixData(operation);\n\t\n\t                self.parseEffects();\n\t\n\t                operation.hasEffect = self.hasEffect();\n\t\n\t                self.getTweenData(operation);\n\t            }\n\t\n\t            if (operation.willSort) {\n\t                self.targets = operation.newOrder;\n\t            }\n\t\n\t            operation.newState = self.buildState(operation);\n\t\n\t            return self.callFilters('operationMappedGetOperation', operation, arguments);\n\t        },\n\t\n\t        /**\n\t         * Renders a previously created operation at a specific point in its path, as\n\t         * determined by a multiplier between 0 and 1.\n\t         *\n\t         * @example\n\t         * .tween(operation, multiplier)\n\t         *\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {mixitup.Operation}     operation\n\t         *      An operation object created via the `getOperation` method\n\t         *\n\t         * @param   {Float}                 multiplier\n\t         *      Any number between 0 and 1 representing the percentage complete of the operation\n\t         * @return  {void}\n\t         */\n\t\n\t        tween: function(operation, multiplier) {\n\t            var target          = null,\n\t                posData         = null,\n\t                toHideIndex     = -1,\n\t                i               = -1;\n\t\n\t            multiplier = Math.min(multiplier, 1);\n\t            multiplier = Math.max(multiplier, 0);\n\t\n\t            for (i = 0; target = operation.show[i]; i++) {\n\t                posData = operation.showPosData[i];\n\t\n\t                target.applyTween(posData, multiplier);\n\t            }\n\t\n\t            for (i = 0; target = operation.hide[i]; i++) {\n\t                if (target.isShown) {\n\t                    target.hide();\n\t                }\n\t\n\t                if ((toHideIndex = operation.toHide.indexOf(target)) > -1) {\n\t                    posData = operation.toHidePosData[toHideIndex];\n\t\n\t                    if (!target.isShown) {\n\t                        target.show();\n\t                    }\n\t\n\t                    target.applyTween(posData, multiplier);\n\t                }\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Inserts one or more new target elements into the container at a specified\n\t         * index.\n\t         *\n\t         * To be indexed as targets, new elements must match the `selectors.target`\n\t         * selector (`'.mix'` by default).\n\t         *\n\t         * @example\n\t         *\n\t         * .insert(newElements [, index] [, animate], [, callback])\n\t         *\n\t         * @example <caption>Example 1: Inserting a single element via reference</caption>\n\t         *\n\t         * console.log(mixer.getState().totalShow); // 0\n\t         *\n\t         * // Create a new element\n\t         *\n\t         * var newElement = document.createElement('div');\n\t         * newElement.classList.add('mix');\n\t         *\n\t         * mixer.insert(newElement)\n\t         *     .then(function(state) {\n\t         *         console.log(state.totalShow === 1); // true\n\t         *     });\n\t         *\n\t         * @example <caption>Example 2: Inserting a single element via HTML string</caption>\n\t         *\n\t         * console.log(mixer.getState().totalShow); // 1\n\t         *\n\t         * // Create a new element via reference\n\t         *\n\t         * var newElementHtml = '&lt;div class=\"mix\"&gt;&lt;/div&gt;';\n\t         *\n\t         * // Create and insert the new element at index 1\n\t         *\n\t         * mixer.insert(newElementHtml, 1)\n\t         *     .then(function(state) {\n\t         *         console.log(state.totalShow === 2); // true\n\t         *         console.log(state.show[1].outerHTML === newElementHtml); // true\n\t         *     });\n\t         *\n\t         * @example <caption>Example 3: Inserting multiple elements via reference</caption>\n\t         *\n\t         * console.log(mixer.getState().totalShow); // 2\n\t         *\n\t         * // Create an array of new elements to insert.\n\t         *\n\t         * var newElement1 = document.createElement('div');\n\t         * var newElement2 = document.createElement('div');\n\t         *\n\t         * newElement1.classList.add('mix');\n\t         * newElement2.classList.add('mix');\n\t         *\n\t         * var newElementsCollection = [newElement1, newElement2];\n\t         *\n\t         * // Insert the new elements starting at index 1\n\t         *\n\t         * mixer.insert(newElementsCollection, 1)\n\t         *     .then(function(state) {\n\t         *         console.log(state.totalShow === 4); // true\n\t         *         console.log(state.show[1] === newElement1); // true\n\t         *         console.log(state.show[2] === newElement2); // true\n\t         *     });\n\t         *\n\t         * @example <caption>Example 4: Inserting a jQuery collection object containing one or more elements</caption>\n\t         *\n\t         * console.log(mixer.getState().totalShow); // 4\n\t         *\n\t         * var $newElement = $('&lt;div class=\"mix\"&gt;&lt;/div&gt;');\n\t         *\n\t         * // Insert the new elements starting at index 3\n\t         *\n\t         * mixer.insert(newElementsCollection, 3)\n\t         *     .then(function(state) {\n\t         *         console.log(state.totalShow === 5); // true\n\t         *         console.log(state.show[3] === $newElement[0]); // true\n\t         *     });\n\t         *\n\t         * @public\n\t         * @instance\n\t         * @since       2.0.0\n\t         * @param       {(HTMLElement|Array.<HTMLElement>|string)}    newElements\n\t         *      A reference to a single element to insert, an array-like collection of elements, or an HTML string representing a single element.\n\t         * @param       {number}    index=0\n\t         *      The index at which to insert the new element(s). `0` by default.\n\t         * @param       {boolean}   [animate=true]\n\t         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n\t         * @param       {function}  [callback=null]\n\t         *      An optional callback function to be invoked after the operation has completed.\n\t         * @return      {Promise.<mixitup.State>}\n\t         *      A promise resolving with the current state object.\n\t         */\n\t\n\t        insert: function() {\n\t            var self = this,\n\t                args = self.parseInsertArgs(arguments);\n\t\n\t            return self.multimix({\n\t                insert: args.command\n\t            }, args.animate, args.callback);\n\t        },\n\t\n\t        /**\n\t         * Inserts one or more new elements before a provided reference element.\n\t         *\n\t         * @example\n\t         *\n\t         * .insertBefore(newElements, referenceElement [, animate] [, callback])\n\t         *\n\t         * @example <caption>Example: Inserting a new element before a reference element</caption>\n\t         *\n\t         * // An existing reference element is chosen at index 2\n\t         *\n\t         * var referenceElement = mixer.getState().show[2];\n\t         *\n\t         * // Create a new element\n\t         *\n\t         * var newElement = document.createElement('div');\n\t         * newElement.classList.add('mix');\n\t         *\n\t         * mixer.insertBefore(newElement, referenceElement)\n\t         *     .then(function(state) {\n\t         *         // The new element is inserted into the container at index 2, before the reference element\n\t         *\n\t         *         console.log(state.show[2] === newElement); // true\n\t         *\n\t         *         // The reference element is now at index 3\n\t         *\n\t         *         console.log(state.show[3] === referenceElement); // true\n\t         *     });\n\t         *\n\t         * @public\n\t         * @instance\n\t         * @since       3.0.0\n\t         * @param       {(HTMLElement|Array.<HTMLElement>|string)}    newElements\n\t         *      A reference to a single element to insert, an array-like collection of elements, or an HTML string representing a single element.\n\t         * @param       {HTMLElement}    referenceElement\n\t         *      A reference to an existing element in the container to insert new elements before.\n\t         *@param       {boolean}   [animate=true]\n\t         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n\t         * @param       {function}  [callback=null]\n\t         *      An optional callback function to be invoked after the operation has completed.\n\t         * @return      {Promise.<mixitup.State>}\n\t         *      A promise resolving with the current state object.\n\t         */\n\t\n\t        insertBefore: function() {\n\t            var self = this,\n\t                args = self.parseInsertArgs(arguments);\n\t\n\t            return self.insert(args.command.collection, 'before', args.command.sibling, args.animate, args.callback);\n\t        },\n\t\n\t        /**\n\t         * Inserts one or more new elements after a provided reference element.\n\t         *\n\t         * @example\n\t         *\n\t         * .insertAfter(newElements, referenceElement [, animate] [, callback])\n\t         *\n\t         * @example <caption>Example: Inserting a new element after a reference element</caption>\n\t         *\n\t         * // An existing reference element is chosen at index 2\n\t         *\n\t         * var referenceElement = mixer.getState().show[2];\n\t         *\n\t         * // Create a new element\n\t         *\n\t         * var newElement = document.createElement('div');\n\t         * newElement.classList.add('mix');\n\t         *\n\t         * mixer.insertAfter(newElement, referenceElement)\n\t         *     .then(function(state) {\n\t         *         // The new element is inserted into the container at index 3, after the reference element\n\t         *\n\t         *         console.log(state.show[3] === newElement); // true\n\t         *     });\n\t         *\n\t         * @public\n\t         * @instance\n\t         * @since       3.0.0\n\t         * @param       {(HTMLElement|Array.<HTMLElement>|string)}    newElements\n\t         *      A reference to a single element to insert, an array-like collection of elements, or an HTML string representing a single element.\n\t         * @param       {HTMLElement}    referenceElement\n\t         *      A reference to an existing element in the container to insert new elements after.\n\t         * @param       {boolean}   [animate=true]\n\t         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n\t         * @param       {function}  [callback=null]\n\t         *      An optional callback function to be invoked after the operation has completed.\n\t         * @return      {Promise.<mixitup.State>}\n\t         *      A promise resolving with the current state object.\n\t         */\n\t\n\t        insertAfter: function() {\n\t            var self = this,\n\t                args = self.parseInsertArgs(arguments);\n\t\n\t            return self.insert(args.command.collection, 'after', args.command.sibling, args.animate, args.callback);\n\t        },\n\t\n\t        /**\n\t         * Inserts one or more new elements into the container before all existing targets.\n\t         *\n\t         * @example\n\t         *\n\t         * .prepend(newElements [,animate] [,callback])\n\t         *\n\t         * @example <caption>Example: Prepending a new element</caption>\n\t         *\n\t         * // Create a new element\n\t         *\n\t         * var newElement = document.createElement('div');\n\t         * newElement.classList.add('mix');\n\t         *\n\t         * // Insert the element into the container\n\t         *\n\t         * mixer.prepend(newElement)\n\t         *     .then(function(state) {\n\t         *         console.log(state.show[0] === newElement); // true\n\t         *     });\n\t         *\n\t         * @public\n\t         * @instance\n\t         * @since       3.0.0\n\t         * @param       {(HTMLElement|Array.<HTMLElement>|string)}    newElements\n\t         *      A reference to a single element to insert, an array-like collection of elements, or an HTML string representing a single element.\n\t         * @param       {boolean}   [animate=true]\n\t         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n\t         * @param       {function}  [callback=null]\n\t         *      An optional callback function to be invoked after the operation has completed.\n\t         * @return      {Promise.<mixitup.State>}\n\t         *      A promise resolving with the current state object.\n\t         */\n\t\n\t        prepend: function() {\n\t            var self = this,\n\t                args = self.parseInsertArgs(arguments);\n\t\n\t            return self.insert(0, args.command.collection, args.animate, args.callback);\n\t        },\n\t\n\t        /**\n\t         * Inserts one or more new elements into the container after all existing targets.\n\t         *\n\t         * @example\n\t         *\n\t         * .append(newElements [,animate] [,callback])\n\t         *\n\t         * @example <caption>Example: Appending a new element</caption>\n\t         *\n\t         * // Create a new element\n\t         *\n\t         * var newElement = document.createElement('div');\n\t         * newElement.classList.add('mix');\n\t         *\n\t         * // Insert the element into the container\n\t         *\n\t         * mixer.append(newElement)\n\t         *     .then(function(state) {\n\t         *         console.log(state.show[state.show.length - 1] === newElement); // true\n\t         *     });\n\t         *\n\t         * @public\n\t         * @instance\n\t         * @since       3.0.0\n\t         * @param       {(HTMLElement|Array.<HTMLElement>|string)}    newElements\n\t         *      A reference to a single element to insert, an array-like collection of elements, or an HTML string representing a single element.\n\t         * @param       {boolean}   [animate=true]\n\t         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n\t         * @param       {function}  [callback=null]\n\t         *      An optional callback function to be invoked after the operation has completed.\n\t         * @return      {Promise.<mixitup.State>}\n\t         *      A promise resolving with the current state object.\n\t         */\n\t\n\t        append: function() {\n\t            var self = this,\n\t                args = self.parseInsertArgs(arguments);\n\t\n\t            return self.insert(self.state.totalTargets, args.command.collection, args.animate, args.callback);\n\t        },\n\t\n\t        /**\n\t         * Removes one or more existing target elements from the container.\n\t         *\n\t         * @example\n\t         *\n\t         * .remove(elements [, animate] [, callback])\n\t         *\n\t         * @example <caption>Example 1: Removing an element by reference</caption>\n\t         *\n\t         * var elementToRemove = containerEl.firstElementChild;\n\t         *\n\t         * mixer.remove(elementToRemove)\n\t         *      .then(function(state) {\n\t         *          console.log(state.targets.indexOf(elementToRemove) === -1); // true\n\t         *      });\n\t         *\n\t         * @example <caption>Example 2: Removing a collection of elements by reference</caption>\n\t         *\n\t         * var elementsToRemove = containerEl.querySelectorAll('.category-a');\n\t         *\n\t         * console.log(elementsToRemove.length) // 3\n\t         *\n\t         * mixer.remove(elementsToRemove)\n\t         *      .then(function() {\n\t         *          console.log(containerEl.querySelectorAll('.category-a').length); // 0\n\t         *      });\n\t         *\n\t         * @example <caption>Example 3: Removing one or more elements by selector</caption>\n\t         *\n\t         * mixer.remove('.category-a')\n\t         *      .then(function() {\n\t         *          console.log(containerEl.querySelectorAll('.category-a').length); // 0\n\t         *      });\n\t         *\n\t         * @example <caption>Example 4: Removing an element by index</caption>\n\t         *\n\t         * console.log(mixer.getState.totalShow); // 4\n\t         *\n\t         * // Remove the element at index 3\n\t         *\n\t         * mixer.remove(3)\n\t         *      .then(function(state) {\n\t         *          console.log(state.totalShow); // 3\n\t         *          console.log(state.show[3]); // undefined\n\t         *      });\n\t         *\n\t         *\n\t         * @public\n\t         * @instance\n\t         * @since       3.0.0\n\t         * @param       {(HTMLElement|Array.<HTMLElement>|string|number)}    elements\n\t         *      A reference to a single element to remove, an array-like collection of elements, a selector string, or the index of an element to remove.\n\t         * @param       {boolean}   [animate=true]\n\t         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n\t         * @param       {function}  [callback=null]\n\t         *      An optional callback function to be invoked after the operation has completed.\n\t         * @return      {Promise.<mixitup.State>}\n\t         *      A promise resolving with the current state object.\n\t         */\n\t\n\t        remove: function() {\n\t            var self = this,\n\t                args = self.parseRemoveArgs(arguments);\n\t\n\t            return self.multimix({\n\t                remove: args.command\n\t            }, args.animate, args.callback);\n\t        },\n\t\n\t        /**\n\t         * Retrieves the the value of any property or sub-object within the current\n\t         * mixitup configuration, or the whole configuration object.\n\t         *\n\t         * @example\n\t         *\n\t         * .getConfig([stringKey])\n\t         *\n\t         * @example <caption>Example 1: retrieve the entire configuration object</caption>\n\t         *\n\t         * var config = mixer.getConfig(); // Config { ... }\n\t         *\n\t         * @example <caption>Example 2: retrieve a named sub-object of configuration object</caption>\n\t         *\n\t         * var animation = mixer.getConfig('animation'); // ConfigAnimation { ... }\n\t         *\n\t         * @example <caption>Example 3: retrieve a value of configuration object via a dot-notation string key</caption>\n\t         *\n\t         * var effects = mixer.getConfig('animation.effects'); // 'fade scale'\n\t         *\n\t         * @public\n\t         * @instance\n\t         * @since       2.0.0\n\t         * @param       {string}    [stringKey]    A \"dot-notation\" string key\n\t         * @return      {*}\n\t         */\n\t\n\t        getConfig: function(stringKey) {\n\t            var self    = this,\n\t                value   = null;\n\t\n\t            if (!stringKey) {\n\t                value = self.config;\n\t            } else {\n\t                value = h.getProperty(self.config, stringKey);\n\t            }\n\t\n\t            return self.callFilters('valueGetConfig', value, arguments);\n\t        },\n\t\n\t        /**\n\t         * Updates the configuration of the mixer, after it has been instantiated.\n\t         *\n\t         * See the Configuration Object documentation for a full list of avilable\n\t         * configuration options.\n\t         *\n\t         * @example\n\t         *\n\t         * .configure(config)\n\t         *\n\t         * @example <caption>Example 1: Updating animation options</caption>\n\t         *\n\t         * mixer.configure({\n\t         *     animation: {\n\t         *         effects: 'fade translateX(-100%)',\n\t         *         duration: 300\n\t         *     }\n\t         * });\n\t         *\n\t         * @example <caption>Example 2: Removing a callback after it has been set</caption>\n\t         *\n\t         * var mixer;\n\t         *\n\t         * function handleMixEndOnce() {\n\t         *     // Do something ..\n\t         *\n\t         *     // Then nullify the callback\n\t         *\n\t         *     mixer.configure({\n\t         *         callbacks: {\n\t         *             onMixEnd: null\n\t         *         }\n\t         *     });\n\t         * };\n\t         *\n\t         * // Instantiate a mixer with a callback defined\n\t         *\n\t         * mixer = mixitup(containerEl, {\n\t         *     callbacks: {\n\t         *         onMixEnd: handleMixEndOnce\n\t         *     }\n\t         * });\n\t         *\n\t         * @public\n\t         * @instance\n\t         * @since       3.0.0\n\t         * @param       {object}    config\n\t         *      An object containing one of more configuration options.\n\t         * @return      {void}\n\t         */\n\t\n\t        configure: function(config) {\n\t            var self = this;\n\t\n\t            self.callActions('beforeConfigure', arguments);\n\t\n\t            h.extend(self.config, config, true, true);\n\t\n\t            self.callActions('afterConfigure', arguments);\n\t        },\n\t\n\t        /**\n\t         * Returns an object containing information about the current state of the\n\t         * mixer. See the State Object documentation for more information.\n\t         *\n\t         * NB: State objects are immutable and should therefore be regenerated\n\t         * after any operation.\n\t         *\n\t         * @example\n\t         *\n\t         * .getState();\n\t         *\n\t         * @example <caption>Example: Retrieving a state object</caption>\n\t         *\n\t         * var state = mixer.getState();\n\t         *\n\t         * console.log(state.totalShow + 'targets are currently shown');\n\t         *\n\t         * @public\n\t         * @instance\n\t         * @since       2.0.0\n\t         * @return      {mixitup.State} An object reflecting the current state of the mixer.\n\t         */\n\t\n\t        getState: function() {\n\t            var self    = this,\n\t                state   = null;\n\t\n\t            state = new mixitup.State();\n\t\n\t            h.extend(state, self.state);\n\t\n\t            h.freeze(state);\n\t\n\t            return self.callFilters('stateGetState', state, arguments);\n\t        },\n\t\n\t        /**\n\t         * Forces the re-indexing all targets within the container.\n\t         *\n\t         * This should only be used if some other piece of code in your application\n\t         * has manipulated the contents of your container, which should be avoided.\n\t         *\n\t         * If you need to add or remove target elements from the container, use\n\t         * the built-in `.insert()` or `.remove()` methods, and MixItUp will keep\n\t         * itself up to date.\n\t         *\n\t         * @example\n\t         *\n\t         * .forceRefresh()\n\t         *\n\t         * @example <caption>Example: Force refreshing the mixer after external DOM manipulation</caption>\n\t         *\n\t         * console.log(mixer.getState().totalShow); // 3\n\t         *\n\t         * // An element is removed from the container via some external DOM manipulation code:\n\t         *\n\t         * containerEl.removeChild(containerEl.firstElementChild);\n\t         *\n\t         * // The mixer does not know that the number of targets has changed:\n\t         *\n\t         * console.log(mixer.getState().totalShow); // 3\n\t         *\n\t         * mixer.forceRefresh();\n\t         *\n\t         * // After forceRefresh, the mixer is in sync again:\n\t         *\n\t         * console.log(mixer.getState().totalShow); // 2\n\t         *\n\t         * @public\n\t         * @instance\n\t         * @since 2.1.2\n\t         * @return {void}\n\t         */\n\t\n\t        forceRefresh: function() {\n\t            var self = this;\n\t\n\t            self.indexTargets();\n\t        },\n\t\n\t        /**\n\t         * Forces the re-rendering of all targets when using the Dataset API.\n\t         *\n\t         * By default, targets are only re-rendered when `data.dirtyCheck` is\n\t         * enabled, and an item's data has changed when `dataset()` is called.\n\t         *\n\t         * The `forceRender()` method allows for the re-rendering of all targets\n\t         * in response to some arbitrary event, such as the changing of the target\n\t         * render function.\n\t         *\n\t         * Targets are rendered against their existing data.\n\t         *\n\t         * @example\n\t         *\n\t         * .forceRender()\n\t         *\n\t         * @example <caption>Example: Force render targets after changing the target render function</caption>\n\t         *\n\t         * console.log(container.innerHTML); // ... &lt;span class=\"mix\"&gt;Foo&lt;/span&gt; ...\n\t         *\n\t         * mixer.configure({\n\t         *     render: {\n\t         *         target: (item) => `&lt;a href=\"/${item.slug}/\" class=\"mix\"&gt;${item.title}&lt;/a&gt;`\n\t         *     }\n\t         * });\n\t         *\n\t         * mixer.forceRender();\n\t         *\n\t         * console.log(container.innerHTML); // ... &lt;a href=\"/foo/\" class=\"mix\"&gt;Foo&lt;/a&gt; ...\n\t         *\n\t         * @public\n\t         * @instance\n\t         * @since 3.2.1\n\t         * @return {void}\n\t         */\n\t\n\t        forceRender: function() {\n\t            var self    = this,\n\t                target  = null,\n\t                el      = null,\n\t                id      = '';\n\t\n\t            for (id in self.cache) {\n\t                target = self.cache[id];\n\t\n\t                el = target.render(target.data);\n\t\n\t                if (el !== target.dom.el) {\n\t                    // Update target element reference\n\t\n\t                    if (target.isInDom) {\n\t                        target.unbindEvents();\n\t\n\t                        self.dom.parent.replaceChild(el, target.dom.el);\n\t                    }\n\t\n\t                    if (!target.isShown) {\n\t                        el.style.display = 'none';\n\t                    }\n\t\n\t                    target.dom.el = el;\n\t\n\t                    if (target.isInDom) {\n\t                        target.bindEvents();\n\t                    }\n\t                }\n\t            }\n\t\n\t            self.state = self.buildState(self.lastOperation);\n\t        },\n\t\n\t        /**\n\t         * Removes mixitup functionality from the container, unbinds all control\n\t         * event handlers, and deletes the mixer instance from MixItUp's internal\n\t         * cache.\n\t         *\n\t         * This should be performed whenever a mixer's container is removed from\n\t         * the DOM, such as during a page change in a single page application,\n\t         * or React's `componentWillUnmount()`.\n\t         *\n\t         * @example\n\t         *\n\t         * .destroy([cleanUp])\n\t         *\n\t         * @example <caption>Example: Destroying the mixer before removing its container element</caption>\n\t         *\n\t         * mixer.destroy();\n\t         *\n\t         * containerEl.parentElement.removeChild(containerEl);\n\t         *\n\t         * @public\n\t         * @instance\n\t         * @since   2.0.0\n\t         * @param   {boolean}   [cleanUp=false]\n\t         *     An optional boolean dictating whether or not to clean up any inline `display: none;` styling applied to hidden targets.\n\t         * @return  {void}\n\t         */\n\t\n\t        destroy: function(cleanUp) {\n\t            var self    = this,\n\t                control = null,\n\t                target  = null,\n\t                i       = 0;\n\t\n\t            self.callActions('beforeDestroy', arguments);\n\t\n\t            for (i = 0; control = self.controls[i]; i++) {\n\t                control.removeBinding(self);\n\t            }\n\t\n\t            for (i = 0; target = self.targets[i]; i++) {\n\t                if (cleanUp) {\n\t                    target.show();\n\t                }\n\t\n\t                target.unbindEvents();\n\t            }\n\t\n\t            if (self.dom.container.id.match(/^MixItUp/)) {\n\t                self.dom.container.removeAttribute('id');\n\t            }\n\t\n\t            delete mixitup.instances[self.id];\n\t\n\t            self.callActions('afterDestroy', arguments);\n\t        }\n\t    });\n\t\n\t    /**\n\t     * @constructor\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.IMoveData = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        this.posIn          = null;\n\t        this.posOut         = null;\n\t        this.operation      = null;\n\t        this.callback       = null;\n\t        this.statusChange   = '';\n\t        this.duration       = -1;\n\t        this.staggerIndex   = -1;\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.IMoveData);\n\t\n\t    mixitup.IMoveData.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.IMoveData.prototype.constructor = mixitup.IMoveData;\n\t\n\t    /**\n\t     * @constructor\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.TargetDom = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        this.el = null;\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.TargetDom);\n\t\n\t    mixitup.TargetDom.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.TargetDom.prototype.constructor = mixitup.TargetDom;\n\t\n\t    /**\n\t     * @constructor\n\t     * @namespace\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.Target = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        this.id         = '';\n\t        this.sortString = '';\n\t        this.mixer      = null;\n\t        this.callback   = null;\n\t        this.isShown    = false;\n\t        this.isBound    = false;\n\t        this.isExcluded = false;\n\t        this.isInDom    = false;\n\t        this.handler    = null;\n\t        this.operation  = null;\n\t        this.data       = null;\n\t        this.dom        = new mixitup.TargetDom();\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.Target);\n\t\n\t    mixitup.Target.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    h.extend(mixitup.Target.prototype, {\n\t        constructor: mixitup.Target,\n\t\n\t        /**\n\t         * Initialises a newly instantiated Target.\n\t         *\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {(Element|null)}    el\n\t         * @param   {object}            mixer\n\t         * @param   {object}            [data]\n\t         * @return  {void}\n\t         */\n\t\n\t        init: function(el, mixer, data) {\n\t            var self = this,\n\t                id   = '';\n\t\n\t            self.callActions('beforeInit', arguments);\n\t\n\t            self.mixer = mixer;\n\t\n\t            if (!el) {\n\t                // If no element is provided, render it\n\t\n\t                el = self.render(data);\n\t            }\n\t\n\t            self.cacheDom(el);\n\t\n\t            self.bindEvents();\n\t\n\t            if (self.dom.el.style.display !== 'none') {\n\t                self.isShown = true;\n\t            }\n\t\n\t            if (data && mixer.config.data.uidKey) {\n\t                if (typeof (id = data[mixer.config.data.uidKey]) === 'undefined' || id.toString().length < 1) {\n\t                    throw new TypeError(mixitup.messages.errorDatasetInvalidUidKey({\n\t                        uidKey: mixer.config.data.uidKey\n\t                    }));\n\t                }\n\t\n\t                self.id     = id;\n\t                self.data   = data;\n\t\n\t                mixer.cache[id] = self;\n\t            }\n\t\n\t            self.callActions('afterInit', arguments);\n\t        },\n\t\n\t        /**\n\t         * Renders the target element using a user-defined renderer function.\n\t         *\n\t         * @private\n\t         * @instance\n\t         * @since   3.1.4\n\t         * @param   {object} data\n\t         * @return  {void}\n\t         */\n\t\n\t        render: function(data) {\n\t            var self    = this,\n\t                render  = null,\n\t                el      = null,\n\t                temp    = null,\n\t                output  = '';\n\t\n\t            self.callActions('beforeRender', arguments);\n\t\n\t            render = self.callFilters('renderRender', self.mixer.config.render.target, arguments);\n\t\n\t            if (typeof render !== 'function') {\n\t                throw new TypeError(mixitup.messages.errorDatasetRendererNotSet());\n\t            }\n\t\n\t            output = render(data);\n\t\n\t            if (output && typeof output === 'object' && h.isElement(output)) {\n\t                el = output;\n\t            } else if (typeof output === 'string') {\n\t                temp = document.createElement('div');\n\t                temp.innerHTML = output;\n\t\n\t                el = temp.firstElementChild;\n\t            }\n\t\n\t            return self.callFilters('elRender', el, arguments);\n\t        },\n\t\n\t        /**\n\t         * Caches references of DOM elements neccessary for the target's functionality.\n\t         *\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {Element} el\n\t         * @return  {void}\n\t         */\n\t\n\t        cacheDom: function(el) {\n\t            var self = this;\n\t\n\t            self.callActions('beforeCacheDom', arguments);\n\t\n\t            self.dom.el = el;\n\t\n\t            self.callActions('afterCacheDom', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {string}    attributeName\n\t         * @return  {void}\n\t         */\n\t\n\t        getSortString: function(attributeName) {\n\t            var self    = this,\n\t                value   = self.dom.el.getAttribute('data-' + attributeName) || '';\n\t\n\t            self.callActions('beforeGetSortString', arguments);\n\t\n\t            value = isNaN(value * 1) ?\n\t                value.toLowerCase() :\n\t                value * 1;\n\t\n\t            self.sortString = value;\n\t\n\t            self.callActions('afterGetSortString', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @return  {void}\n\t         */\n\t\n\t        show: function() {\n\t            var self = this;\n\t\n\t            self.callActions('beforeShow', arguments);\n\t\n\t            if (!self.isShown) {\n\t                self.dom.el.style.display = '';\n\t\n\t                self.isShown = true;\n\t            }\n\t\n\t            self.callActions('afterShow', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @return  {void}\n\t         */\n\t\n\t        hide: function() {\n\t            var self = this;\n\t\n\t            self.callActions('beforeHide', arguments);\n\t\n\t            if (self.isShown) {\n\t                self.dom.el.style.display = 'none';\n\t\n\t                self.isShown = false;\n\t            }\n\t\n\t            self.callActions('afterHide', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {mixitup.IMoveData} moveData\n\t         * @return  {void}\n\t         */\n\t\n\t        move: function(moveData) {\n\t            var self = this;\n\t\n\t            self.callActions('beforeMove', arguments);\n\t\n\t            if (!self.isExcluded) {\n\t                self.mixer.targetsMoved++;\n\t            }\n\t\n\t            self.applyStylesIn(moveData);\n\t\n\t            requestAnimationFrame(function() {\n\t                self.applyStylesOut(moveData);\n\t            });\n\t\n\t            self.callActions('afterMove', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {object}    posData\n\t         * @param   {number}    multiplier\n\t         * @return  {void}\n\t         */\n\t\n\t        applyTween: function(posData, multiplier) {\n\t            var self                    = this,\n\t                propertyName            = '',\n\t                tweenData               = null,\n\t                posIn                   = posData.posIn,\n\t                currentTransformValues  = [],\n\t                currentValues           = new mixitup.StyleData(),\n\t                i                       = -1;\n\t\n\t            self.callActions('beforeApplyTween', arguments);\n\t\n\t            currentValues.x     = posIn.x;\n\t            currentValues.y     = posIn.y;\n\t\n\t            if (multiplier === 0) {\n\t                self.hide();\n\t            } else if (!self.isShown) {\n\t                self.show();\n\t            }\n\t\n\t            for (i = 0; propertyName = mixitup.features.TWEENABLE[i]; i++) {\n\t                tweenData = posData.tweenData[propertyName];\n\t\n\t                if (propertyName === 'x') {\n\t                    if (!tweenData) continue;\n\t\n\t                    currentValues.x = posIn.x + (tweenData * multiplier);\n\t                } else if (propertyName === 'y') {\n\t                    if (!tweenData) continue;\n\t\n\t                    currentValues.y = posIn.y + (tweenData * multiplier);\n\t                } else if (tweenData instanceof mixitup.TransformData) {\n\t                    if (!tweenData.value) continue;\n\t\n\t                    currentValues[propertyName].value =\n\t                        posIn[propertyName].value + (tweenData.value * multiplier);\n\t\n\t                    currentValues[propertyName].unit  = tweenData.unit;\n\t\n\t                    currentTransformValues.push(\n\t                        propertyName + '(' + currentValues[propertyName].value + tweenData.unit + ')'\n\t                    );\n\t                } else {\n\t                    if (!tweenData) continue;\n\t\n\t                    currentValues[propertyName] = posIn[propertyName] + (tweenData * multiplier);\n\t\n\t                    self.dom.el.style[propertyName] = currentValues[propertyName];\n\t                }\n\t            }\n\t\n\t            if (currentValues.x || currentValues.y) {\n\t                currentTransformValues.unshift('translate(' + currentValues.x + 'px, ' + currentValues.y + 'px)');\n\t            }\n\t\n\t            if (currentTransformValues.length) {\n\t                self.dom.el.style[mixitup.features.transformProp] = currentTransformValues.join(' ');\n\t            }\n\t\n\t            self.callActions('afterApplyTween', arguments);\n\t        },\n\t\n\t        /**\n\t         * Applies the initial styling to a target element before any transition\n\t         * is applied.\n\t         *\n\t         * @private\n\t         * @instance\n\t         * @param   {mixitup.IMoveData} moveData\n\t         * @return  {void}\n\t         */\n\t\n\t        applyStylesIn: function(moveData) {\n\t            var self            = this,\n\t                posIn           = moveData.posIn,\n\t                isFading        = self.mixer.effectsIn.opacity !== 1,\n\t                transformValues = [];\n\t\n\t            self.callActions('beforeApplyStylesIn', arguments);\n\t\n\t            transformValues.push('translate(' + posIn.x + 'px, ' + posIn.y + 'px)');\n\t\n\t            if (self.mixer.config.animation.animateResizeTargets) {\n\t                if (moveData.statusChange !== 'show') {\n\t                    // Don't apply posIn width or height or showing, as will be 0\n\t\n\t                    self.dom.el.style.width  = posIn.width + 'px';\n\t                    self.dom.el.style.height = posIn.height + 'px';\n\t                }\n\t\n\t                self.dom.el.style.marginRight  = posIn.marginRight + 'px';\n\t                self.dom.el.style.marginBottom = posIn.marginBottom + 'px';\n\t            }\n\t\n\t            isFading && (self.dom.el.style.opacity = posIn.opacity);\n\t\n\t            if (moveData.statusChange === 'show') {\n\t                transformValues = transformValues.concat(self.mixer.transformIn);\n\t            }\n\t\n\t            self.dom.el.style[mixitup.features.transformProp] = transformValues.join(' ');\n\t\n\t            self.callActions('afterApplyStylesIn', arguments);\n\t        },\n\t\n\t        /**\n\t         * Applies a transition followed by the final styles for the element to\n\t         * transition towards.\n\t         *\n\t         * @private\n\t         * @instance\n\t         * @param   {mixitup.IMoveData} moveData\n\t         * @return  {void}\n\t         */\n\t\n\t        applyStylesOut: function(moveData) {\n\t            var self            = this,\n\t                transitionRules = [],\n\t                transformValues = [],\n\t                isResizing      = self.mixer.config.animation.animateResizeTargets,\n\t                isFading        = typeof self.mixer.effectsIn.opacity !== 'undefined';\n\t\n\t            self.callActions('beforeApplyStylesOut', arguments);\n\t\n\t            // Build the transition rules\n\t\n\t            transitionRules.push(self.writeTransitionRule(\n\t                mixitup.features.transformRule,\n\t                moveData.staggerIndex\n\t            ));\n\t\n\t            if (moveData.statusChange !== 'none') {\n\t                transitionRules.push(self.writeTransitionRule(\n\t                    'opacity',\n\t                    moveData.staggerIndex,\n\t                    moveData.duration\n\t                ));\n\t            }\n\t\n\t            if (isResizing) {\n\t                transitionRules.push(self.writeTransitionRule(\n\t                    'width',\n\t                    moveData.staggerIndex,\n\t                    moveData.duration\n\t                ));\n\t\n\t                transitionRules.push(self.writeTransitionRule(\n\t                    'height',\n\t                    moveData.staggerIndex,\n\t                    moveData.duration\n\t                ));\n\t\n\t                transitionRules.push(self.writeTransitionRule(\n\t                    'margin',\n\t                    moveData.staggerIndex,\n\t                    moveData.duration\n\t                ));\n\t            }\n\t\n\t            // If no callback was provided, the element will\n\t            // not transition in any way so tag it as \"immovable\"\n\t\n\t            if (!moveData.callback) {\n\t                self.mixer.targetsImmovable++;\n\t\n\t                if (self.mixer.targetsMoved === self.mixer.targetsImmovable) {\n\t                    // If the total targets moved is equal to the\n\t                    // number of immovable targets, the operation\n\t                    // should be considered finished\n\t\n\t                    self.mixer.cleanUp(moveData.operation);\n\t                }\n\t\n\t                return;\n\t            }\n\t\n\t            // If the target will transition in some fasion,\n\t            // assign a callback function\n\t\n\t            self.operation = moveData.operation;\n\t            self.callback = moveData.callback;\n\t\n\t            // As long as the target is not excluded, increment\n\t            // the total number of targets bound\n\t\n\t            !self.isExcluded && self.mixer.targetsBound++;\n\t\n\t            // Tag the target as bound to differentiate from transitionEnd\n\t            // events that may come from stylesheet driven effects\n\t\n\t            self.isBound = true;\n\t\n\t            // Apply the transition\n\t\n\t            self.applyTransition(transitionRules);\n\t\n\t            // Apply width, height and margin negation\n\t\n\t            if (isResizing && moveData.posOut.width > 0 && moveData.posOut.height > 0) {\n\t                self.dom.el.style.width        = moveData.posOut.width + 'px';\n\t                self.dom.el.style.height       = moveData.posOut.height + 'px';\n\t                self.dom.el.style.marginRight  = moveData.posOut.marginRight + 'px';\n\t                self.dom.el.style.marginBottom = moveData.posOut.marginBottom + 'px';\n\t            }\n\t\n\t            if (!self.mixer.config.animation.nudge && moveData.statusChange === 'hide') {\n\t                // If we're not nudging, the translation should be\n\t                // applied before any other transforms to prevent\n\t                // lateral movement\n\t\n\t                transformValues.push('translate(' + moveData.posOut.x + 'px, ' + moveData.posOut.y + 'px)');\n\t            }\n\t\n\t            // Apply fade\n\t\n\t            switch (moveData.statusChange) {\n\t                case 'hide':\n\t                    isFading && (self.dom.el.style.opacity = self.mixer.effectsOut.opacity);\n\t\n\t                    transformValues = transformValues.concat(self.mixer.transformOut);\n\t\n\t                    break;\n\t                case 'show':\n\t                    isFading && (self.dom.el.style.opacity = 1);\n\t            }\n\t\n\t            if (\n\t                self.mixer.config.animation.nudge ||\n\t                (!self.mixer.config.animation.nudge && moveData.statusChange !== 'hide')\n\t            ) {\n\t                // Opposite of above - apply translate after\n\t                // other transform\n\t\n\t                transformValues.push('translate(' + moveData.posOut.x + 'px, ' + moveData.posOut.y + 'px)');\n\t            }\n\t\n\t            // Apply transforms\n\t\n\t            self.dom.el.style[mixitup.features.transformProp] = transformValues.join(' ');\n\t\n\t            self.callActions('afterApplyStylesOut', arguments);\n\t        },\n\t\n\t        /**\n\t         * Combines the name of a CSS property with the appropriate duration and delay\n\t         * values to created a valid transition rule.\n\t         *\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {string}    property\n\t         * @param   {number}    staggerIndex\n\t         * @param   {number}    duration\n\t         * @return  {string}\n\t         */\n\t\n\t        writeTransitionRule: function(property, staggerIndex, duration) {\n\t            var self  = this,\n\t                delay = self.getDelay(staggerIndex),\n\t                rule  = '';\n\t\n\t            rule = property + ' ' +\n\t                (duration > 0 ? duration : self.mixer.config.animation.duration) + 'ms ' +\n\t                delay + 'ms ' +\n\t                (property === 'opacity' ? 'linear' : self.mixer.config.animation.easing);\n\t\n\t            return self.callFilters('ruleWriteTransitionRule', rule, arguments);\n\t        },\n\t\n\t        /**\n\t         * Calculates the transition delay for each target element based on its index, if\n\t         * staggering is applied. If defined, A custom `animation.staggerSeqeuence`\n\t         * function can be used to manipulate the order of indices to produce custom\n\t         * stagger effects (e.g. for use in a grid with irregular row lengths).\n\t         *\n\t         * @private\n\t         * @instance\n\t         * @since   2.0.0\n\t         * @param   {number}    index\n\t         * @return  {number}\n\t         */\n\t\n\t        getDelay: function(index) {\n\t            var self    = this,\n\t                delay   = -1;\n\t\n\t            if (typeof self.mixer.config.animation.staggerSequence === 'function') {\n\t                index = self.mixer.config.animation.staggerSequence.call(self, index, self.state);\n\t            }\n\t\n\t            delay = !!self.mixer.staggerDuration ? index * self.mixer.staggerDuration : 0;\n\t\n\t            return self.callFilters('delayGetDelay', delay, arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {string[]}  rules\n\t         * @return  {void}\n\t         */\n\t\n\t        applyTransition: function(rules) {\n\t            var self                = this,\n\t                transitionString    = rules.join(', ');\n\t\n\t            self.callActions('beforeApplyTransition', arguments);\n\t\n\t            self.dom.el.style[mixitup.features.transitionProp] = transitionString;\n\t\n\t            self.callActions('afterApplyTransition', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {Event} e\n\t         * @return  {void}\n\t         */\n\t\n\t        handleTransitionEnd: function(e) {\n\t            var self        = this,\n\t                propName    = e.propertyName,\n\t                canResize   = self.mixer.config.animation.animateResizeTargets;\n\t\n\t            self.callActions('beforeHandleTransitionEnd', arguments);\n\t\n\t            if (\n\t                self.isBound &&\n\t                e.target.matches(self.mixer.config.selectors.target) &&\n\t                (\n\t                    propName.indexOf('transform') > -1 ||\n\t                    propName.indexOf('opacity') > -1 ||\n\t                    canResize && propName.indexOf('height') > -1 ||\n\t                    canResize && propName.indexOf('width') > -1 ||\n\t                    canResize && propName.indexOf('margin') > -1\n\t                )\n\t            ) {\n\t                self.callback.call(self, self.operation);\n\t\n\t                self.isBound = false;\n\t                self.callback = null;\n\t                self.operation = null;\n\t            }\n\t\n\t            self.callActions('afterHandleTransitionEnd', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {Event}     e\n\t         * @return  {void}\n\t         */\n\t\n\t        eventBus: function(e) {\n\t            var self = this;\n\t\n\t            self.callActions('beforeEventBus', arguments);\n\t\n\t            switch (e.type) {\n\t                case 'webkitTransitionEnd':\n\t                case 'transitionend':\n\t                    self.handleTransitionEnd(e);\n\t            }\n\t\n\t            self.callActions('afterEventBus', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @return  {void}\n\t         */\n\t\n\t        unbindEvents: function() {\n\t            var self = this;\n\t\n\t            self.callActions('beforeUnbindEvents', arguments);\n\t\n\t            h.off(self.dom.el, 'webkitTransitionEnd', self.handler);\n\t            h.off(self.dom.el, 'transitionend', self.handler);\n\t\n\t            self.callActions('afterUnbindEvents', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @return  {void}\n\t         */\n\t\n\t        bindEvents: function() {\n\t            var self                = this,\n\t                transitionEndEvent  = '';\n\t\n\t            self.callActions('beforeBindEvents', arguments);\n\t\n\t            transitionEndEvent = mixitup.features.transitionPrefix === 'webkit' ? 'webkitTransitionEnd' : 'transitionend';\n\t\n\t            self.handler = function(e) {\n\t                return self.eventBus(e);\n\t            };\n\t\n\t            h.on(self.dom.el, transitionEndEvent, self.handler);\n\t\n\t            self.callActions('afterBindEvents', arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since   3.0.0\n\t         * @param   {boolean}   [getBox]\n\t         * @return  {PosData}\n\t         */\n\t\n\t        getPosData: function(getBox) {\n\t            var self    = this,\n\t                styles  = {},\n\t                rect    = null,\n\t                posData = new mixitup.StyleData();\n\t\n\t            self.callActions('beforeGetPosData', arguments);\n\t\n\t            posData.x = self.dom.el.offsetLeft;\n\t            posData.y = self.dom.el.offsetTop;\n\t\n\t            if (self.mixer.config.animation.animateResizeTargets || getBox) {\n\t                rect = self.dom.el.getBoundingClientRect();\n\t\n\t                posData.top     = rect.top;\n\t                posData.right   = rect.right;\n\t                posData.bottom  = rect.bottom;\n\t                posData.left    = rect.left;\n\t\n\t                posData.width  = rect.width;\n\t                posData.height = rect.height;\n\t            }\n\t\n\t            if (self.mixer.config.animation.animateResizeTargets) {\n\t                styles = window.getComputedStyle(self.dom.el);\n\t\n\t                posData.marginBottom = parseFloat(styles.marginBottom);\n\t                posData.marginRight  = parseFloat(styles.marginRight);\n\t            }\n\t\n\t            return self.callFilters('posDataGetPosData', posData, arguments);\n\t        },\n\t\n\t        /**\n\t         * @private\n\t         * @instance\n\t         * @since       3.0.0\n\t         * @return      {void}\n\t         */\n\t\n\t        cleanUp: function() {\n\t            var self = this;\n\t\n\t            self.callActions('beforeCleanUp', arguments);\n\t\n\t            self.dom.el.style[mixitup.features.transformProp]  = '';\n\t            self.dom.el.style[mixitup.features.transitionProp] = '';\n\t            self.dom.el.style.opacity                          = '';\n\t\n\t            if (self.mixer.config.animation.animateResizeTargets) {\n\t                self.dom.el.style.width        = '';\n\t                self.dom.el.style.height       = '';\n\t                self.dom.el.style.marginRight  = '';\n\t                self.dom.el.style.marginBottom = '';\n\t            }\n\t\n\t            self.callActions('afterCleanUp', arguments);\n\t        }\n\t    });\n\t\n\t    /**\n\t     * A jQuery-collection-like wrapper around one or more `mixitup.Mixer` instances\n\t     * allowing simultaneous control of said instances similar to the MixItUp 2 API.\n\t     *\n\t     * @example\n\t     * new mixitup.Collection(instances)\n\t     *\n\t     * @constructor\n\t     * @namespace\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     * @param       {mixitup.Mixer[]}   instances\n\t     */\n\t\n\t    mixitup.Collection = function(instances) {\n\t        var instance    = null,\n\t            i           = -1;\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        for (i = 0; instance = instances[i]; i++) {\n\t            this[i] = instance;\n\t        }\n\t\n\t        this.length = instances.length;\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.freeze(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.Collection);\n\t\n\t    mixitup.Collection.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    h.extend(mixitup.Collection.prototype,\n\t    /** @lends mixitup.Collection */\n\t    {\n\t        constructor: mixitup.Collection,\n\t\n\t        /**\n\t         * Calls a method on all instances in the collection by passing the method\n\t         * name as a string followed by any applicable parameters to be curried into\n\t         * to the method.\n\t         *\n\t         * @example\n\t         * .mixitup(methodName[,arg1][,arg2..]);\n\t         *\n\t         * @example\n\t         * var collection = new Collection([mixer1, mixer2]);\n\t         *\n\t         * return collection.mixitup('filter', '.category-a')\n\t         *     .then(function(states) {\n\t         *         state.forEach(function(state) {\n\t         *             console.log(state.activeFilter.selector); // .category-a\n\t         *         });\n\t         *     });\n\t         *\n\t         * @public\n\t         * @instance\n\t         * @since       3.0.0\n\t         * @param       {string}  methodName\n\t         * @return      {Promise<Array<mixitup.State>>}\n\t         */\n\t\n\t        mixitup: function(methodName) {\n\t            var self        = this,\n\t                instance    = null,\n\t                args        = Array.prototype.slice.call(arguments),\n\t                tasks       = [],\n\t                i           = -1;\n\t\n\t            this.callActions('beforeMixitup');\n\t\n\t            args.shift();\n\t\n\t            for (i = 0; instance = self[i]; i++) {\n\t                tasks.push(instance[methodName].apply(instance, args));\n\t            }\n\t\n\t            return self.callFilters('promiseMixitup', h.all(tasks, mixitup.libraries), arguments);\n\t        }\n\t    });\n\t\n\t    /**\n\t     * `mixitup.Operation` objects contain all data neccessary to describe the full\n\t     * lifecycle of any MixItUp operation. They can be used to compute and store an\n\t     * operation for use at a later time (e.g. programmatic tweening).\n\t     *\n\t     * @constructor\n\t     * @namespace\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.Operation = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        this.id                      = '';\n\t\n\t        this.args                    = [];\n\t        this.command                 = null;\n\t        this.showPosData             = [];\n\t        this.toHidePosData           = [];\n\t\n\t        this.startState              = null;\n\t        this.newState                = null;\n\t        this.docState                = null;\n\t\n\t        this.willSort                = false;\n\t        this.willChangeLayout        = false;\n\t        this.hasEffect               = false;\n\t        this.hasFailed               = false;\n\t\n\t        this.triggerElement          = null;\n\t\n\t        this.show                    = [];\n\t        this.hide                    = [];\n\t        this.matching                = [];\n\t        this.toShow                  = [];\n\t        this.toHide                  = [];\n\t        this.toMove                  = [];\n\t        this.toRemove                = [];\n\t        this.startOrder              = [];\n\t        this.newOrder                = [];\n\t        this.startSort               = null;\n\t        this.newSort                 = null;\n\t        this.startFilter             = null;\n\t        this.newFilter               = null;\n\t        this.startDataset            = null;\n\t        this.newDataset              = null;\n\t        this.viewportDeltaX          = 0;\n\t        this.viewportDeltaY          = 0;\n\t        this.startX                  = 0;\n\t        this.startY                  = 0;\n\t        this.startHeight             = 0;\n\t        this.startWidth              = 0;\n\t        this.newX                    = 0;\n\t        this.newY                    = 0;\n\t        this.newHeight               = 0;\n\t        this.newWidth                = 0;\n\t        this.startContainerClassName = '';\n\t        this.startDisplay            = '';\n\t        this.newContainerClassName   = '';\n\t        this.newDisplay              = '';\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.Operation);\n\t\n\t    mixitup.Operation.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.Operation.prototype.constructor = mixitup.Operation;\n\t\n\t    /**\n\t     * `mixitup.State` objects expose various pieces of data detailing the state of\n\t     * a MixItUp instance. They are provided at the start and end of any operation via\n\t     * callbacks and events, with the most recent state stored between operations\n\t     * for retrieval at any time via the API.\n\t     *\n\t     * @constructor\n\t     * @namespace\n\t     * @memberof    mixitup\n\t     * @public\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.State = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        /**\n\t         * The ID of the mixer instance.\n\t         *\n\t         * @name        id\n\t         * @memberof    mixitup.State\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     ''\n\t         */\n\t\n\t        this.id = '';\n\t\n\t        /**\n\t         * The currently active filter command as set by a control click or API call.\n\t         *\n\t         * @name        activeFilter\n\t         * @memberof    mixitup.State\n\t         * @instance\n\t         * @type        {mixitup.CommandFilter}\n\t         * @default     null\n\t         */\n\t\n\t        this.activeFilter = null;\n\t\n\t        /**\n\t         * The currently active sort command as set by a control click or API call.\n\t         *\n\t         * @name        activeSort\n\t         * @memberof    mixitup.State\n\t         * @instance\n\t         * @type        {mixitup.CommandSort}\n\t         * @default     null\n\t         */\n\t\n\t        this.activeSort = null;\n\t\n\t        /**\n\t         * The current layout-specific container class name, if applied.\n\t         *\n\t         * @name        activeContainerClassName\n\t         * @memberof    mixitup.State\n\t         * @instance\n\t         * @type        {string}\n\t         * @default     ''\n\t         */\n\t\n\t        this.activeContainerClassName = '';\n\t\n\t        /**\n\t         * A reference to the container element that the mixer is instantiated on.\n\t         *\n\t         * @name        container\n\t         * @memberof    mixitup.State\n\t         * @instance\n\t         * @type        {Element}\n\t         * @default     null\n\t         */\n\t\n\t        this.container = null;\n\t\n\t        /**\n\t         * An array of all target elements indexed by the mixer.\n\t         *\n\t         * @name        targets\n\t         * @memberof    mixitup.State\n\t         * @instance\n\t         * @type        {Array.<Element>}\n\t         * @default     []\n\t         */\n\t\n\t        this.targets = [];\n\t\n\t        /**\n\t         * An array of all target elements not matching the current filter.\n\t         *\n\t         * @name        hide\n\t         * @memberof    mixitup.State\n\t         * @instance\n\t         * @type        {Array.<Element>}\n\t         * @default     []\n\t         */\n\t\n\t        this.hide = [];\n\t\n\t        /**\n\t         * An array of all target elements matching the current filter and any additional\n\t         * limits applied such as pagination.\n\t         *\n\t         * @name        show\n\t         * @memberof    mixitup.State\n\t         * @instance\n\t         * @type        {Array.<Element>}\n\t         * @default     []\n\t         */\n\t\n\t        this.show = [];\n\t\n\t        /**\n\t         * An array of all target elements matching the current filter irrespective of\n\t         * any additional limits applied such as pagination.\n\t         *\n\t         * @name        matching\n\t         * @memberof    mixitup.State\n\t         * @instance\n\t         * @type        {Array.<Element>}\n\t         * @default     []\n\t         */\n\t\n\t        this.matching = [];\n\t\n\t        /**\n\t         * An integer representing the total number of target elements indexed by the\n\t         * mixer. Equivalent to `state.targets.length`.\n\t         *\n\t         * @name        totalTargets\n\t         * @memberof    mixitup.State\n\t         * @instance\n\t         * @type        {number}\n\t         * @default     -1\n\t         */\n\t\n\t        this.totalTargets = -1;\n\t\n\t        /**\n\t         * An integer representing the total number of target elements matching the\n\t         * current filter and any additional limits applied such as pagination.\n\t         * Equivalent to `state.show.length`.\n\t         *\n\t         * @name        totalShow\n\t         * @memberof    mixitup.State\n\t         * @instance\n\t         * @type        {number}\n\t         * @default     -1\n\t         */\n\t\n\t        this.totalShow = -1;\n\t\n\t        /**\n\t         * An integer representing the total number of target elements not matching\n\t         * the current filter. Equivalent to `state.hide.length`.\n\t         *\n\t         * @name        totalHide\n\t         * @memberof    mixitup.State\n\t         * @instance\n\t         * @type        {number}\n\t         * @default     -1\n\t         */\n\t\n\t        this.totalHide = -1;\n\t\n\t        /**\n\t         * An integer representing the total number of target elements matching the\n\t         * current filter irrespective of any other limits applied such as pagination.\n\t         * Equivalent to `state.matching.length`.\n\t         *\n\t         * @name        totalMatching\n\t         * @memberof    mixitup.State\n\t         * @instance\n\t         * @type        {number}\n\t         * @default     -1\n\t         */\n\t\n\t        this.totalMatching = -1;\n\t\n\t        /**\n\t         * A boolean indicating whether the last operation \"failed\", i.e. no targets\n\t         * could be found matching the filter.\n\t         *\n\t         * @name        hasFailed\n\t         * @memberof    mixitup.State\n\t         * @instance\n\t         * @type        {boolean}\n\t         * @default     false\n\t         */\n\t\n\t        this.hasFailed = false;\n\t\n\t        /**\n\t         * The DOM element that was clicked if the last operation was triggered by the\n\t         * clicking of a control and not an API call.\n\t         *\n\t         * @name        triggerElement\n\t         * @memberof    mixitup.State\n\t         * @instance\n\t         * @type        {Element|null}\n\t         * @default     null\n\t         */\n\t\n\t        this.triggerElement = null;\n\t\n\t        /**\n\t         * The currently active dataset underlying the rendered targets, if the\n\t         * dataset API is in use.\n\t         *\n\t         * @name        activeDataset\n\t         * @memberof    mixitup.State\n\t         * @instance\n\t         * @type        {Array.<object>}\n\t         * @default     null\n\t         */\n\t\n\t        this.activeDataset = null;\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.State);\n\t\n\t    mixitup.State.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.State.prototype.constructor = mixitup.State;\n\t\n\t    /**\n\t     * @constructor\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.UserInstruction = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        this.command    = {};\n\t        this.animate    = false;\n\t        this.callback   = null;\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.UserInstruction);\n\t\n\t    mixitup.UserInstruction.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.UserInstruction.prototype.constructor = mixitup.UserInstruction;\n\t\n\t    /**\n\t     * @constructor\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     */\n\t\n\t    mixitup.Messages = function() {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct');\n\t\n\t        /* Errors\n\t        ----------------------------------------------------------------------------- */\n\t\n\t        this.ERROR_FACTORY_INVALID_CONTAINER =\n\t            '[MixItUp] An invalid selector or element reference was passed to the mixitup factory function';\n\t\n\t        this.ERROR_FACTORY_CONTAINER_NOT_FOUND =\n\t            '[MixItUp] The provided selector yielded no container element';\n\t\n\t        this.ERROR_CONFIG_INVALID_ANIMATION_EFFECTS =\n\t            '[MixItUp] Invalid value for `animation.effects`';\n\t\n\t        this.ERROR_CONFIG_INVALID_CONTROLS_SCOPE =\n\t            '[MixItUp] Invalid value for `controls.scope`';\n\t\n\t        this.ERROR_CONFIG_INVALID_PROPERTY =\n\t            '[MixitUp] Invalid configuration object property \"${erroneous}\"${suggestion}';\n\t\n\t        this.ERROR_CONFIG_INVALID_PROPERTY_SUGGESTION =\n\t            '. Did you mean \"${probableMatch}\"?';\n\t\n\t        this.ERROR_CONFIG_DATA_UID_KEY_NOT_SET =\n\t            '[MixItUp] To use the dataset API, a UID key must be specified using `data.uidKey`';\n\t\n\t        this.ERROR_DATASET_INVALID_UID_KEY =\n\t            '[MixItUp] The specified UID key \"${uidKey}\" is not present on one or more dataset items';\n\t\n\t        this.ERROR_DATASET_DUPLICATE_UID =\n\t            '[MixItUp] The UID \"${uid}\" was found on two or more dataset items. UIDs must be unique.';\n\t\n\t        this.ERROR_INSERT_INVALID_ARGUMENTS =\n\t            '[MixItUp] Please provider either an index or a sibling and position to insert, not both';\n\t\n\t        this.ERROR_INSERT_PREEXISTING_ELEMENT =\n\t            '[MixItUp] An element to be inserted already exists in the container';\n\t\n\t        this.ERROR_FILTER_INVALID_ARGUMENTS =\n\t            '[MixItUp] Please provide either a selector or collection `.filter()`, not both';\n\t\n\t        this.ERROR_DATASET_NOT_SET =\n\t            '[MixItUp] To use the dataset API with pre-rendered targets, a starting dataset must be set using `load.dataset`';\n\t\n\t        this.ERROR_DATASET_PRERENDERED_MISMATCH =\n\t            '[MixItUp] `load.dataset` does not match pre-rendered targets';\n\t\n\t        this.ERROR_DATASET_RENDERER_NOT_SET =\n\t            '[MixItUp] To insert an element via the dataset API, a target renderer function must be provided to `render.target`';\n\t\n\t        /* Warnings\n\t        ----------------------------------------------------------------------------- */\n\t\n\t        this.WARNING_FACTORY_PREEXISTING_INSTANCE =\n\t            '[MixItUp] WARNING: This element already has an active MixItUp instance. The provided configuration object will be ignored.' +\n\t            ' If you wish to perform additional methods on this instance, please create a reference.';\n\t\n\t        this.WARNING_INSERT_NO_ELEMENTS =\n\t            '[MixItUp] WARNING: No valid elements were passed to `.insert()`';\n\t\n\t        this.WARNING_REMOVE_NO_ELEMENTS =\n\t            '[MixItUp] WARNING: No valid elements were passed to `.remove()`';\n\t\n\t        this.WARNING_MULTIMIX_INSTANCE_QUEUE_FULL =\n\t            '[MixItUp] WARNING: An operation was requested but the MixItUp instance was busy. The operation was rejected because the ' +\n\t            'queue is full or queuing is disabled.';\n\t\n\t        this.WARNING_GET_OPERATION_INSTANCE_BUSY =\n\t            '[MixItUp] WARNING: Operations can be be created while the MixItUp instance is busy.';\n\t\n\t        this.WARNING_NO_PROMISE_IMPLEMENTATION =\n\t            '[MixItUp] WARNING: No Promise implementations could be found. If you wish to use promises with MixItUp please install' +\n\t            ' an ES6 Promise polyfill.';\n\t\n\t        this.WARNING_INCONSISTENT_SORTING_ATTRIBUTES =\n\t            '[MixItUp] WARNING: The requested sorting data attribute \"${attribute}\" was not present on one or more target elements' +\n\t            ' which may product unexpected sort output';\n\t\n\t        this.callActions('afterConstruct');\n\t\n\t        this.compileTemplates();\n\t\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.Messages);\n\t\n\t    mixitup.Messages.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.Messages.prototype.constructor = mixitup.Messages;\n\t\n\t    /**\n\t     * @return {void}\n\t     */\n\t\n\t    mixitup.Messages.prototype.compileTemplates = function() {\n\t        var errorKey        = '';\n\t        var errorMessage    = '';\n\t\n\t        for (errorKey in this) {\n\t            if (typeof (errorMessage = this[errorKey]) !== 'string') continue;\n\t\n\t            this[h.camelCase(errorKey)] = h.template(errorMessage);\n\t        }\n\t    };\n\t\n\t    mixitup.messages = new mixitup.Messages();\n\t\n\t    /**\n\t     * @constructor\n\t     * @memberof    mixitup\n\t     * @private\n\t     * @since       3.0.0\n\t     * @param       {mixitup.Mixer} mixer\n\t     */\n\t\n\t    mixitup.Facade = function Mixer(mixer) {\n\t        mixitup.Base.call(this);\n\t\n\t        this.callActions('beforeConstruct', arguments);\n\t\n\t        this.configure          = mixer.configure.bind(mixer);\n\t        this.show               = mixer.show.bind(mixer);\n\t        this.hide               = mixer.hide.bind(mixer);\n\t        this.filter             = mixer.filter.bind(mixer);\n\t        this.toggleOn           = mixer.toggleOn.bind(mixer);\n\t        this.toggleOff          = mixer.toggleOff.bind(mixer);\n\t        this.sort               = mixer.sort.bind(mixer);\n\t        this.changeLayout       = mixer.changeLayout.bind(mixer);\n\t        this.multimix           = mixer.multimix.bind(mixer);\n\t        this.dataset            = mixer.dataset.bind(mixer);\n\t        this.tween              = mixer.tween.bind(mixer);\n\t        this.insert             = mixer.insert.bind(mixer);\n\t        this.insertBefore       = mixer.insertBefore.bind(mixer);\n\t        this.insertAfter        = mixer.insertAfter.bind(mixer);\n\t        this.prepend            = mixer.prepend.bind(mixer);\n\t        this.append             = mixer.append.bind(mixer);\n\t        this.remove             = mixer.remove.bind(mixer);\n\t        this.destroy            = mixer.destroy.bind(mixer);\n\t        this.forceRefresh       = mixer.forceRefresh.bind(mixer);\n\t        this.forceRender        = mixer.forceRender.bind(mixer);\n\t        this.isMixing           = mixer.isMixing.bind(mixer);\n\t        this.getOperation       = mixer.getOperation.bind(mixer);\n\t        this.getConfig          = mixer.getConfig.bind(mixer);\n\t        this.getState           = mixer.getState.bind(mixer);\n\t\n\t        this.callActions('afterConstruct', arguments);\n\t\n\t        h.freeze(this);\n\t        h.seal(this);\n\t    };\n\t\n\t    mixitup.BaseStatic.call(mixitup.Facade);\n\t\n\t    mixitup.Facade.prototype = Object.create(mixitup.Base.prototype);\n\t\n\t    mixitup.Facade.prototype.constructor = mixitup.Facade;\n\t\n\t    if (true) {\n\t        module.exports = mixitup;\n\t    } else if (typeof define === 'function' && define.amd) {\n\t        define(function() {\n\t            return mixitup;\n\t        });\n\t    } else if (typeof window.mixitup === 'undefined' || typeof window.mixitup !== 'function') {\n\t        window.mixitup = mixitup;\n\t    }\n\t    mixitup.BaseStatic.call(mixitup.constructor);\n\t\n\t    mixitup.NAME = 'mixitup';\n\t    mixitup.CORE_VERSION = '3.2.2';\n\t})(window);\n\n/***/ }),\n\n/***/ 340:\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 396:\n/***/ (function(module, exports) {\n\n\t// empty (null-loader)\n\n/***/ }),\n\n/***/ 260:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(15);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _gatsbyConfig = __webpack_require__(254);\n\t\n\t__webpack_require__(396);\n\t\n\t__webpack_require__(397);\n\t\n\t__webpack_require__(337);\n\t\n\t__webpack_require__(339);\n\t\n\t__webpack_require__(340);\n\t\n\t__webpack_require__(338);\n\t\n\tvar _jquery = __webpack_require__(379);\n\t\n\tvar _jquery2 = _interopRequireDefault(_jquery);\n\t\n\tvar _mixitup = __webpack_require__(392);\n\t\n\tvar _mixitup2 = _interopRequireDefault(_mixitup);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Template = function (_React$Component) {\n\t  _inherits(Template, _React$Component);\n\t\n\t  function Template() {\n\t    _classCallCheck(this, Template);\n\t\n\t    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n\t  }\n\t\n\t  Template.prototype.componentDidMount = function componentDidMount() {\n\t    (0, _jquery2.default)('#loader').fadeOut();\n\t\n\t    var porfolio = document.getElementById('portfolio');\n\t\n\t    setTimeout(function () {\n\t      (0, _mixitup2.default)(porfolio);\n\t    }, 1000);\n\t\n\t    (0, _jquery2.default)(window).on('scroll', function () {\n\t      if ((0, _jquery2.default)(window).scrollTop() > 20) {\n\t        (0, _jquery2.default)('.header-top-area').addClass('menu-bg');\n\t      } else {\n\t        (0, _jquery2.default)('.header-top-area').removeClass('menu-bg');\n\t      }\n\t    });\n\t\n\t    var offset = 200;\n\t    var duration = 500;\n\t\n\t    (0, _jquery2.default)(window).scroll(function () {\n\t      if ((0, _jquery2.default)(this).scrollTop() > offset) {\n\t        (0, _jquery2.default)('.back-to-top').fadeIn(400);\n\t      } else {\n\t        (0, _jquery2.default)('.back-to-top').fadeOut(400);\n\t      }\n\t    });\n\t    (0, _jquery2.default)('.back-to-top').click(function (event) {\n\t      event.preventDefault();\n\t      (0, _jquery2.default)('html, body').animate({\n\t        scrollTop: 0\n\t      }, 600);\n\t      return false;\n\t    });\n\t\n\t    (0, _jquery2.default)(window).on('scroll', function () {\n\t      if ((0, _jquery2.default)(window).scrollTop() > 200) {\n\t        (0, _jquery2.default)('.fixed-top').addClass('menu-bg');\n\t      } else {\n\t        (0, _jquery2.default)('.fixed-top').removeClass('menu-bg');\n\t      }\n\t    });\n\t\n\t    // const WOW = require('wowjs')\n\t    // this.wow = new WOW.WOW()\n\t    // this.wow.init()\n\t  };\n\t\n\t  Template.prototype.componentDidUpdate = function componentDidUpdate() {\n\t    // this.wow.sync()\n\t  };\n\t\n\t  Template.prototype.render = function render() {\n\t    var _props = this.props,\n\t        location = _props.location,\n\t        children = _props.children;\n\t\n\t    return _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      children()\n\t    );\n\t  };\n\t\n\t  return Template;\n\t}(_react2.default.Component);\n\t\n\texports.default = Template;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 397:\n/***/ (function(module, exports) {\n\n\t// empty (null-loader)\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-layouts-index-js-1cc64f5e94488355ec1d.js","module.exports = {\"layoutContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/layout-index.json\n// module id = 104\n// module chunks = 60335399758886 114276838955818","\n  import React from \"react\"\n  import Component from \"/var/www/jhannifer.github.io/src/layouts/index.js\"\n  import data from \"/var/www/jhannifer.github.io/.cache/json/layout-index.json\"\n\n  export default (props) => <Component {...props} {...data} />\n  \n\n\n// WEBPACK FOOTER //\n// ./.cache/layouts/index.js","module.exports = {\n  siteMetadata: {\n    title: 'Jhannifer Oliveira | Arquiteta e Urbanista',\n    description: 'Site e portfólio da Arquiteta e Urbanista Jhannifer Oliveira',\n    url: 'https://jhannifer.com.br',\n    author: 'jhanniferoliveira',\n  },\n  pathPrefix: '/',\n  plugins: [\n    {\n      resolve: 'gatsby-source-filesystem',\n      options: {\n        path: `${__dirname}/src/pages`,\n        name: 'pages',\n      },\n    },\n    {\n      resolve: 'gatsby-transformer-remark',\n      options: {\n        plugins: [\n          {\n            resolve: 'gatsby-remark-images',\n            options: {\n              maxWidth: 750,\n              linkImagesToOriginal: false,\n              wrapperStyle: 'margin-bottom: 1.0725rem;',\n            },\n          },\n          {\n            resolve: 'gatsby-remark-responsive-iframe',\n            options: {\n              wrapperStyle: 'margin-bottom: 1.0725rem',\n            },\n          },\n          'gatsby-remark-prismjs',\n          'gatsby-remark-copy-linked-files',\n          'gatsby-remark-smartypants',\n        ],\n      },\n    },\n    'gatsby-transformer-sharp',\n    'gatsby-plugin-sass',\n    'gatsby-plugin-sharp',\n    'gatsby-plugin-offline',\n    'gatsby-plugin-react-helmet',\n  ],\n}\n\n\n\n// WEBPACK FOOTER //\n// ./gatsby-config.js","/*!\n * jQuery JavaScript Library v3.3.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2018-01-20T17:24Z\n */\n( function( global, factory ) {\n\n\t\"use strict\";\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar document = window.document;\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\nvar isFunction = function isFunction( obj ) {\n\n      // Support: Chrome <=57, Firefox <=52\n      // In some browsers, typeof returns \"function\" for HTML <object> elements\n      // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n      // We don't want to classify *any* DOM node as a function.\n      return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n  };\n\n\nvar isWindow = function isWindow( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t};\n\n\n\n\n\tvar preservedScriptAttributes = {\n\t\ttype: true,\n\t\tsrc: true,\n\t\tnoModule: true\n\t};\n\n\tfunction DOMEval( code, doc, node ) {\n\t\tdoc = doc || document;\n\n\t\tvar i,\n\t\t\tscript = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tif ( node ) {\n\t\t\tfor ( i in preservedScriptAttributes ) {\n\t\t\t\tif ( node[ i ] ) {\n\t\t\t\t\tscript[ i ] = node[ i ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n\n\nfunction toType( obj ) {\n\tif ( obj == null ) {\n\t\treturn obj + \"\";\n\t}\n\n\t// Support: Android <=2.3 only (functionish RegExp)\n\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\ttypeof obj;\n}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.3.1\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android <=4.0 only\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\n\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && Array.isArray( src ) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\n\t\t/* eslint-disable no-unused-vars */\n\t\t// See https://github.com/eslint/eslint/issues/6125\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tDOMEval( code );\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android <=4.0 only\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = toType( obj );\n\n\tif ( isFunction( obj ) || isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.3\n * https://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-08-08\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tdisabledAncestor = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && (\"form\" in elem || \"label\" in elem);\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( (m = match[1]) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!compilerCache[ selector + \" \" ] &&\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\n\t\t\t\tif ( nodeType !== 1 ) {\n\t\t\t\t\tnewContext = context;\n\t\t\t\t\tnewSelector = selector;\n\n\t\t\t\t// qSA looks outside Element context, which is not what we want\n\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\n\t\t\t\t// Support: IE <=8\n\t\t\t\t// Exclude object elements\n\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\n\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[i] = \"#\" + nid + \" \" + toSelector( groups[i] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\t\t\t\t}\n\n\t\t\t\tif ( newSelector ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement(\"fieldset\");\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\t\tdisabledAncestor( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9-11, Edge\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\tif ( preferredDoc !== document &&\n\t\t(subWindow = document.defaultView) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( el ) {\n\t\tel.appendChild( document.createComment(\"\") );\n\t\treturn !el.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t});\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( (elem = elems[i++]) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( el ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll(\":enabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll(\":disabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( el ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === document ? -1 :\n\t\t\t\tb === document ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!compilerCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn (sel + \"\").replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( (oldCache = uniqueCache[ key ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( el ) {\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement(\"fieldset\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( el ) {\n\treturn el.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\n\n\nfunction nodeName( elem, name ) {\n\n  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\n};\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Filtered directly for both simple and complex selectors\n\treturn jQuery.filter( qualifier, elements, not );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n        if ( nodeName( elem, \"iframe\" ) ) {\n            return elem.contentDocument;\n        }\n\n        // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n        // Treat the template element as a regular one in browsers that\n        // don't support it.\n        if ( nodeName( elem, \"template\" ) ) {\n            elem = elem.content || elem;\n        }\n\n        return jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = locked || options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject, noValue ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\n\t\t\t// * true: [ value ].slice( 1 ) => resolve()\n\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.apply( undefined, [ value ] );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// rejected_handlers.disable\n\t\t\t\t\t// fulfilled_handlers.disable\n\t\t\t\t\ttuples[ 3 - i ][ 3 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock,\n\n\t\t\t\t\t// progress_handlers.lock\n\t\t\t\t\ttuples[ 0 ][ 3 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the master Deferred\n\t\t\tmaster = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tmaster.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,\n\t\t\t\t!remaining );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( master.state() === \"pending\" ||\n\t\t\t\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn master.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\n\t\t}\n\n\t\treturn master.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( toType( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\n\n// Matches dashed string for camelizing\nvar rmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g;\n\n// Used by camelCase as callback to replace()\nfunction fcamelCase( all, letter ) {\n\treturn letter.toUpperCase();\n}\n\n// Convert dashed to camelCase; used by the css and data modules\n// Support: IE <=9 - 11, Edge 12 - 15\n// Microsoft forgot to hump their vendor prefix (#9572)\nfunction camelCase( string ) {\n\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n}\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( Array.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( camelCase );\n\t\t\t} else {\n\t\t\t\tkey = camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tjQuery.contains( elem.ownerDocument, elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\nvar swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted, scale,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Support: Firefox <=54\n\t\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n\t\tinitial = initial / 2;\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\twhile ( maxIterations-- ) {\n\n\t\t\t// Evaluate and update our best guess (doubling guesses that zero out).\n\t\t\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\t\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\n\t\t\t\tmaxIterations = 0;\n\t\t\t}\n\t\t\tinitialInUnit = initialInUnit / scale;\n\n\t\t}\n\n\t\tinitialInUnit = initialInUnit * 2;\n\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i );\n\nvar rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\n\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// Support: IE <=9 only\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\n// Support: IE <=9 only\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, contains, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( toType( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( contains ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n} )();\nvar documentElement = document.documentElement;\n\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 only\n// See #13393 for more info\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tvar event = jQuery.event.fix( nativeEvent );\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (#504, #13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || Date.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\n\twhich: function( event ) {\n\t\tvar button = event.button;\n\n\t\t// Add which for key events\n\t\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\n\t\t\treturn event.charCode != null ? event.charCode : event.keyCode;\n\t\t}\n\n\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\n\t\t\tif ( button & 1 ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ( button & 2 ) {\n\t\t\t\treturn 3;\n\t\t\t}\n\n\t\t\tif ( button & 4 ) {\n\t\t\t\treturn 2;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn event.which;\n\t}\n}, jQuery.event.addProp );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t/* eslint-disable max-len */\n\n\t// See https://github.com/eslint/eslint/issues/3229\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n\n\t/* eslint-enable */\n\n\t// Support: IE <=10 - 11, Edge 12 - 13 only\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n// Prefer a tbody over its parent table for containing new rows\nfunction manipulationTarget( elem, content ) {\n\tif ( nodeName( elem, \"table\" ) &&\n\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\n\t\telem.type = elem.type.slice( 5 );\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.access( src );\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = concat.apply( [], args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tvalueIsFunction = isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( valueIsFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), doc, node );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\n\t\t\t\"margin-top:1px;padding:0;border:0\";\n\t\tdiv.style.cssText =\n\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"width:60%;top:1%\";\n\t\tdocumentElement.appendChild( container ).appendChild( div );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\n\n\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.right = \"60%\";\n\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\n\n\t\t// Support: IE 9 - 11 only\n\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\n\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\n\n\t\t// Support: IE 9 only\n\t\t// Detect overflow:scroll screwiness (gh-3699)\n\t\tdiv.style.position = \"absolute\";\n\t\tscrollboxSizeVal = div.offsetWidth === 36 || \"absolute\";\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tfunction roundPixelMeasures( measure ) {\n\t\treturn Math.round( parseFloat( measure ) );\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\n\t\treliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tjQuery.extend( support, {\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelBoxStyles: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelBoxStylesVal;\n\t\t},\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\tscrollboxSize: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn scrollboxSizeVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, #12537)\n\t//   .css('--customProperty) (#3144)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trcustomProp = /^--/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style;\n\n// Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( name ) {\n\n\t// Shortcut for names that are not vendor prefixed\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\n// Return a property mapped along what jQuery.cssProps suggests or to\n// a vendor prefixed property.\nfunction finalPropName( name ) {\n\tvar ret = jQuery.cssProps[ name ];\n\tif ( !ret ) {\n\t\tret = jQuery.cssProps[ name ] = vendorPropName( name ) || name;\n\t}\n\treturn ret;\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\n\tvar i = dimension === \"width\" ? 1 : 0,\n\t\textra = 0,\n\t\tdelta = 0;\n\n\t// Adjustment may not be necessary\n\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\treturn 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin\n\t\tif ( box === \"margin\" ) {\n\t\t\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\t// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\t\tif ( !isBorderBox ) {\n\n\t\t\t// Add padding\n\t\t\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// For \"border\" or \"margin\", add border\n\t\t\tif ( box !== \"padding\" ) {\n\t\t\t\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\n\t\t\t// But still keep track of it otherwise\n\t\t\t} else {\n\t\t\t\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\n\t\t// If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n\t\t// \"padding\" or \"margin\"\n\t\t} else {\n\n\t\t\t// For \"content\", subtract padding\n\t\t\tif ( box === \"content\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// For \"content\" or \"padding\", subtract border\n\t\t\tif ( box !== \"margin\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Account for positive content-box scroll gutter when requested by providing computedVal\n\tif ( !isBorderBox && computedVal >= 0 ) {\n\n\t\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n\t\t// Assuming integer scroll gutter, subtract the rest and round down\n\t\tdelta += Math.max( 0, Math.ceil(\n\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\tcomputedVal -\n\t\t\tdelta -\n\t\t\textra -\n\t\t\t0.5\n\t\t) );\n\t}\n\n\treturn delta;\n}\n\nfunction getWidthOrHeight( elem, dimension, extra ) {\n\n\t// Start with computed style\n\tvar styles = getStyles( elem ),\n\t\tval = curCSS( elem, dimension, styles ),\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\tvalueIsBorderBox = isBorderBox;\n\n\t// Support: Firefox <=54\n\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\n\tif ( rnumnonpx.test( val ) ) {\n\t\tif ( !extra ) {\n\t\t\treturn val;\n\t\t}\n\t\tval = \"auto\";\n\t}\n\n\t// Check for style in case a browser which returns unreliable values\n\t// for getComputedStyle silently falls back to the reliable elem.style\n\tvalueIsBorderBox = valueIsBorderBox &&\n\t\t( support.boxSizingReliable() || val === elem.style[ dimension ] );\n\n\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\n\t// This happens for inline elements with no explicit setting (gh-3571)\n\t// Support: Android <=4.1 - 4.3 only\n\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\tif ( val === \"auto\" ||\n\t\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) {\n\n\t\tval = elem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ];\n\n\t\t// offsetWidth/offsetHeight provide border-box values\n\t\tvalueIsBorderBox = true;\n\t}\n\n\t// Normalize \"\" and auto\n\tval = parseFloat( val ) || 0;\n\n\t// Adjust for the element's box model\n\treturn ( val +\n\t\tboxModelAdjustment(\n\t\t\telem,\n\t\t\tdimension,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles,\n\n\t\t\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\n\t\t\tval\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name ),\n\t\t\tstyle = elem.style;\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to query the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\tif ( type === \"number\" ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tif ( isCustomProp ) {\n\t\t\t\t\tstyle.setProperty( name, value );\n\t\t\t\t} else {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name );\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to modify the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( i, dimension ) {\n\tjQuery.cssHooks[ dimension ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, dimension, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, dimension, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = getStyles( elem ),\n\t\t\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\tsubtract = extra && boxModelAdjustment(\n\t\t\t\t\telem,\n\t\t\t\t\tdimension,\n\t\t\t\t\textra,\n\t\t\t\t\tisBorderBox,\n\t\t\t\t\tstyles\n\t\t\t\t);\n\n\t\t\t// Account for unreliable border-box dimensions by comparing offset* to computed and\n\t\t\t// faking a content-box to get border and padding (gh-3699)\n\t\t\tif ( isBorderBox && support.scrollboxSize() === styles.position ) {\n\t\t\t\tsubtract -= Math.ceil(\n\t\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\t\t\tparseFloat( styles[ dimension ] ) -\n\t\t\t\t\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\n\t\t\t\t\t0.5\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ dimension ] = value;\n\t\t\t\tvalue = jQuery.css( elem, dimension );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( prefix !== \"margin\" ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 &&\n\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9 only\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, inProgress,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\nfunction schedule() {\n\tif ( inProgress ) {\n\t\tif ( document.hidden === false && window.requestAnimationFrame ) {\n\t\t\twindow.requestAnimationFrame( schedule );\n\t\t} else {\n\t\t\twindow.setTimeout( schedule, jQuery.fx.interval );\n\t\t}\n\n\t\tjQuery.fx.tick();\n\t}\n}\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = Date.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\tisBox = \"width\" in props || \"height\" in props,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Queue-skipping animations hijack the fx hooks\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Detect show/hide animations\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.test( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\n\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\t// Bail out if this is a no-op like .hide().hide()\n\tpropTween = !jQuery.isEmptyObject( props );\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\treturn;\n\t}\n\n\t// Restrict \"overflow\" and \"display\" styles during box animations\n\tif ( isBox && elem.nodeType === 1 ) {\n\n\t\t// Support: IE <=9 - 11, Edge 12 - 15\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t// from identically-valued overflowX and overflowY and Edge just mirrors\n\t\t// the overflowX value there.\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\trestoreDisplay = dataShow && dataShow.display;\n\t\tif ( restoreDisplay == null ) {\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t}\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\tif ( display === \"none\" ) {\n\t\t\tif ( restoreDisplay ) {\n\t\t\t\tdisplay = restoreDisplay;\n\t\t\t} else {\n\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\tshowHide( [ elem ] );\n\t\t\t}\n\t\t}\n\n\t\t// Animate inline elements as inline-block\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\tif ( !propTween ) {\n\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t} );\n\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// Implement show/hide animations\n\tpropTween = false;\n\tfor ( prop in orig ) {\n\n\t\t// General show/hide setup for this element animation\n\t\tif ( !propTween ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t}\n\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\n\t\t\t// Show elements before animating them\n\t\t\tif ( hidden ) {\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t}\n\n\t\t\t/* eslint-disable no-loop-func */\n\n\t\t\tanim.done( function() {\n\n\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\tif ( !hidden ) {\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Per-property setup\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\tif ( !( prop in dataShow ) ) {\n\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\tif ( hidden ) {\n\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\tpropTween.start = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( Array.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\t// If there's more to do, yield\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t}\n\n\t\t\t// If this was an empty animation, synthesize a final progress notification\n\t\t\tif ( !length ) {\n\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t}\n\n\t\t\t// Resolve the animation and report its conclusion\n\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\treturn false;\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tresult.stop.bind( result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\t// Attach callbacks from options\n\tanimation\n\t\t.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\treturn animation;\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnothtmlwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tisFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !isFunction( easing ) && easing\n\t};\n\n\t// Go to the end state if fx are off\n\tif ( jQuery.fx.off ) {\n\t\topt.duration = 0;\n\n\t} else {\n\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\n\t\t\t} else {\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = Date.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Run the timer and safely remove it when done (allowing for external removal)\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tjQuery.fx.start();\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( inProgress ) {\n\t\treturn;\n\t}\n\n\tinProgress = true;\n\tschedule();\n};\n\njQuery.fx.stop = function() {\n\tinProgress = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tnodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\nfunction classesToArray( value ) {\n\tif ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\tif ( typeof value === \"string\" ) {\n\t\treturn value.match( rnothtmlwhite ) || [];\n\t}\n\treturn [];\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value,\n\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\n\n\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( isValidValue ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = classesToArray( value );\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, valueIsFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueIsFunction = isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\tstopPropagationCallback = function( e ) {\n\t\te.stopPropagation();\n\t};\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = lastElement = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tlastElement = cur;\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.addEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\telem[ type ]();\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.removeEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = Date.now();\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( Array.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && toType( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\nvar\n\tr20 = /%20/g,\n\trhash = /#.*$/,\n\trantiCache = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\toriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": JSON.parse,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\tcompleted,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// uncached part of the url\n\t\t\tuncached,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( completed ) {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR );\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 15\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t// e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( completed ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\t// Remove hash to simplify url manipulation\n\t\tcacheURL = s.url.replace( rhash, \"\" );\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// Remember the hash so we can put it back\n\t\t\tuncached = s.url.slice( cacheURL.length );\n\n\t\t\t// If data is available and should be processed, append data to url\n\t\t\tif ( s.data && ( s.processData || typeof s.data === \"string\" ) ) {\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add or update anti-cache param if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce++ ) + uncached;\n\t\t\t}\n\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\ts.url = cacheURL + uncached;\n\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t} else if ( s.data && s.processData &&\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tcompleteDeferred.add( s.complete );\n\t\tjqXHR.done( s.success );\n\t\tjqXHR.fail( s.error );\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcompleted = false;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\tif ( completed ) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// Propagate others as results\n\t\t\t\tdone( -1, e );\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar htmlIsFunction = isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE <=9 only\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.ontimeout =\n\t\t\t\t\t\t\t\t\txhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \"error\" );\n\n\t\t\t\t// Support: IE 9 only\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\njQuery.ajaxPrefilter( function( s ) {\n\tif ( s.crossDomain ) {\n\t\ts.contents.script = false;\n\t}\n} );\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t} ).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.expr.pseudos.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\n\t// offset() relates an element's border box to the document origin\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar rect, win,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\t\trect = elem.getBoundingClientRect();\n\t\twin = elem.ownerDocument.defaultView;\n\t\treturn {\n\t\t\ttop: rect.top + win.pageYOffset,\n\t\t\tleft: rect.left + win.pageXOffset\n\t\t};\n\t},\n\n\t// position() relates an element's margin box to its offset parent's padding box\n\t// This corresponds to the behavior of CSS absolute positioning\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset, doc,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// position:fixed elements are offset from the viewport, which itself always has zero offset\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume position:fixed implies availability of getBoundingClientRect\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\toffset = this.offset();\n\n\t\t\t// Account for the *real* offset parent, which can be the document or its root element\n\t\t\t// when a statically positioned element is identified\n\t\t\tdoc = elem.ownerDocument;\n\t\t\toffsetParent = elem.offsetParent || doc.documentElement;\n\t\t\twhile ( offsetParent &&\n\t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\n\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\n\t\t\t\toffsetParent = offsetParent.parentNode;\n\t\t\t}\n\t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\n\n\t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\n\t\t\t\tparentOffset = jQuery( offsetParent ).offset();\n\t\t\t\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\n\t\t\t\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\n\t\t\t}\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\n\t\t\t// Coalesce documents and windows\n\t\t\tvar win;\n\t\t\tif ( isWindow( elem ) ) {\n\t\t\t\twin = elem;\n\t\t\t} else if ( elem.nodeType === 9 ) {\n\t\t\t\twin = elem.defaultView;\n\t\t\t}\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.each( ( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n} );\n\njQuery.fn.extend( {\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\n\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t}\n} );\n\n// Bind a function to a context, optionally partially applying any\n// arguments.\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n// However, it is not slated for removal any time soon\njQuery.proxy = function( fn, context ) {\n\tvar tmp, args, proxy;\n\n\tif ( typeof context === \"string\" ) {\n\t\ttmp = fn[ context ];\n\t\tcontext = fn;\n\t\tfn = tmp;\n\t}\n\n\t// Quick check to determine if target is callable, in the spec\n\t// this throws a TypeError, but we will just return undefined.\n\tif ( !isFunction( fn ) ) {\n\t\treturn undefined;\n\t}\n\n\t// Simulated bind\n\targs = slice.call( arguments, 2 );\n\tproxy = function() {\n\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t};\n\n\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\treturn proxy;\n};\n\njQuery.holdReady = function( hold ) {\n\tif ( hold ) {\n\t\tjQuery.readyWait++;\n\t} else {\n\t\tjQuery.ready( true );\n\t}\n};\njQuery.isArray = Array.isArray;\njQuery.parseJSON = JSON.parse;\njQuery.nodeName = nodeName;\njQuery.isFunction = isFunction;\njQuery.isWindow = isWindow;\njQuery.camelCase = camelCase;\njQuery.type = toType;\n\njQuery.now = Date.now;\n\njQuery.isNumeric = function( obj ) {\n\n\t// As of jQuery 3.0, isNumeric is limited to\n\t// strings and numbers (primitives or objects)\n\t// that can be coerced to finite numbers (gh-2662)\n\tvar type = jQuery.type( obj );\n\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t!isNaN( obj - parseFloat( obj ) );\n};\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t} );\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( !noGlobal ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n} );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jquery/dist/jquery.js\n// module id = 379\n// module chunks = 114276838955818","/**!\n * MixItUp v3.2.2\n * A high-performance, dependency-free library for animated filtering, sorting and more\n * Build 20a1a182-d7bd-4c8f-807d-b888e325e44d\n *\n * @copyright Copyright 2014-2017 KunkaLabs Limited.\n * @author    KunkaLabs Limited.\n * @link      https://www.kunkalabs.com/mixitup/\n *\n * @license   Commercial use requires a commercial license.\n *            https://www.kunkalabs.com/mixitup/licenses/\n *\n *            Non-commercial use permitted under same terms as CC BY-NC 3.0 license.\n *            http://creativecommons.org/licenses/by-nc/3.0/\n */\n\n(function(window) {\n    'use strict';\n\n    var mixitup = null,\n        h       = null;\n\n    (function() {\n        var VENDORS = ['webkit', 'moz', 'o', 'ms'],\n            canary  = window.document.createElement('div'),\n            i       = -1;\n\n        // window.requestAnimationFrame\n\n        for (i = 0; i < VENDORS.length && !window.requestAnimationFrame; i++) {\n            window.requestAnimationFrame = window[VENDORS[i] + 'RequestAnimationFrame'];\n        }\n\n        // Element.nextElementSibling\n\n        if (typeof canary.nextElementSibling === 'undefined') {\n            Object.defineProperty(window.Element.prototype, 'nextElementSibling', {\n                get: function() {\n                    var el = this.nextSibling;\n\n                    while (el) {\n                        if (el.nodeType === 1) {\n                            return el;\n                        }\n\n                        el = el.nextSibling;\n                    }\n\n                    return null;\n                }\n            });\n        }\n\n        // Element.matches\n\n        (function(ElementPrototype) {\n            ElementPrototype.matches =\n                ElementPrototype.matches ||\n                ElementPrototype.machesSelector ||\n                ElementPrototype.mozMatchesSelector ||\n                ElementPrototype.msMatchesSelector ||\n                ElementPrototype.oMatchesSelector ||\n                ElementPrototype.webkitMatchesSelector ||\n                function (selector) {\n                    return Array.prototype.indexOf.call(this.parentElement.querySelectorAll(selector), this) > -1;\n                };\n        })(window.Element.prototype);\n\n        // Object.keys\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n\n        if (!Object.keys) {\n            Object.keys = (function() {\n                var hasOwnProperty      = Object.prototype.hasOwnProperty,\n                    hasDontEnumBug      = false,\n                    dontEnums           = [],\n                    dontEnumsLength     = -1;\n\n                hasDontEnumBug = !({\n                    toString: null\n                })\n                    .propertyIsEnumerable('toString');\n\n                dontEnums = [\n                    'toString',\n                    'toLocaleString',\n                    'valueOf',\n                    'hasOwnProperty',\n                    'isPrototypeOf',\n                    'propertyIsEnumerable',\n                    'constructor'\n                ];\n\n                dontEnumsLength = dontEnums.length;\n\n                return function(obj) {\n                    var result  = [],\n                        prop    = '',\n                        i       = -1;\n\n                    if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\n                        throw new TypeError('Object.keys called on non-object');\n                    }\n\n                    for (prop in obj) {\n                        if (hasOwnProperty.call(obj, prop)) {\n                            result.push(prop);\n                        }\n                    }\n\n                    if (hasDontEnumBug) {\n                        for (i = 0; i < dontEnumsLength; i++) {\n                            if (hasOwnProperty.call(obj, dontEnums[i])) {\n                                result.push(dontEnums[i]);\n                            }\n                        }\n                    }\n\n                    return result;\n                };\n            }());\n        }\n\n        // Array.isArray\n        // https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\n\n        if (!Array.isArray) {\n            Array.isArray = function(arg) {\n                return Object.prototype.toString.call(arg) === '[object Array]';\n            };\n        }\n\n        // Object.create\n        // https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n\n        if (typeof Object.create !== 'function') {\n            Object.create = (function(undefined) {\n                var Temp = function() {};\n\n                return function (prototype, propertiesObject) {\n                    if (prototype !== Object(prototype) && prototype !== null) {\n                        throw TypeError('Argument must be an object, or null');\n                    }\n\n                    Temp.prototype = prototype || {};\n\n                    var result = new Temp();\n\n                    Temp.prototype = null;\n\n                    if (propertiesObject !== undefined) {\n                        Object.defineProperties(result, propertiesObject);\n                    }\n\n                    if (prototype === null) {\n                        /* jshint ignore:start */\n                        result.__proto__ = null;\n                        /* jshint ignore:end */\n                    }\n\n                    return result;\n                };\n            })();\n        }\n\n        // String.prototyoe.trim\n\n        if (!String.prototype.trim) {\n            String.prototype.trim = function() {\n                return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n            };\n        }\n\n        // Array.prototype.indexOf\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\n\n        if (!Array.prototype.indexOf) {\n            Array.prototype.indexOf = function(searchElement) {\n                var n, k, t, len;\n\n                if (this === null) {\n                    throw new TypeError();\n                }\n\n                t = Object(this);\n\n                len = t.length >>> 0;\n\n                if (len === 0) {\n                    return -1;\n                }\n\n                n = 0;\n\n                if (arguments.length > 1) {\n                    n = Number(arguments[1]);\n\n                    if (n !== n) {\n                        n = 0;\n                    } else if (n !== 0 && n !== Infinity && n !== -Infinity) {\n                        n = (n > 0 || -1) * Math.floor(Math.abs(n));\n                    }\n                }\n\n                if (n >= len) {\n                    return -1;\n                }\n\n                for (k = n >= 0 ? n : Math.max(len - Math.abs(n), 0); k < len; k++) {\n                    if (k in t && t[k] === searchElement) {\n                        return k;\n                    }\n                }\n\n                return -1;\n            };\n        }\n\n        // Function.prototype.bind\n        // https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_objects/Function/bind\n\n        if (!Function.prototype.bind) {\n            Function.prototype.bind = function(oThis) {\n                var aArgs, self, FNOP, fBound;\n\n                if (typeof this !== 'function') {\n                    throw new TypeError();\n                }\n\n                aArgs = Array.prototype.slice.call(arguments, 1);\n\n                self = this;\n\n                FNOP = function() {};\n\n                fBound = function() {\n                    return self.apply(this instanceof FNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n                };\n\n                if (this.prototype) {\n                    FNOP.prototype = this.prototype;\n                }\n\n                fBound.prototype = new FNOP();\n\n                return fBound;\n            };\n        }\n\n        // Element.prototype.dispatchEvent\n\n        if (!window.Element.prototype.dispatchEvent) {\n            window.Element.prototype.dispatchEvent = function(event) {\n                try {\n                    return this.fireEvent('on' + event.type, event);\n                } catch (err) {}\n            };\n        }\n    })();\n\n    /**\n     * The `mixitup()` \"factory\" function creates and returns individual instances\n     * of MixItUp, known as \"mixers\", on which API methods can be called.\n     *\n     * When loading MixItUp via a script tag, the factory function is accessed\n     * via the global variable `mixitup`. When using a module loading\n     * system (e.g. ES2015, CommonJS, RequireJS), the factory function is\n     * exported into your module when you require the MixItUp library.\n     *\n     * @example\n     * mixitup(container [,config] [,foreignDoc])\n     *\n     * @example <caption>Example 1: Creating a mixer instance with an element reference</caption>\n     * var containerEl = document.querySelector('.container');\n     *\n     * var mixer = mixitup(containerEl);\n     *\n     * @example <caption>Example 2: Creating a mixer instance with a selector string</caption>\n     * var mixer = mixitup('.container');\n     *\n     * @example <caption>Example 3: Passing a configuration object</caption>\n     * var mixer = mixitup(containerEl, {\n     *     animation: {\n     *         effects: 'fade scale(0.5)'\n     *     }\n     * });\n     *\n     * @example <caption>Example 4: Passing an iframe reference</caption>\n     * var mixer = mixitup(containerEl, config, foreignDocument);\n     *\n     * @global\n     * @namespace\n     * @public\n     * @kind        function\n     * @since       3.0.0\n     * @param       {(Element|string)}  container\n     *      A DOM element or selector string representing the container(s) on which to instantiate MixItUp.\n     * @param       {object}            [config]\n     *      An optional \"configuration object\" used to customize the behavior of the MixItUp instance.\n     * @param       {object}            [foreignDoc]\n     *      An optional reference to a `document`, which can be used to control a MixItUp instance in an iframe.\n     * @return      {mixitup.Mixer}\n     *      A \"mixer\" object holding the MixItUp instance.\n     */\n\n    mixitup = function(container, config, foreignDoc) {\n        var el                  = null,\n            returnCollection    = false,\n            instance            = null,\n            facade              = null,\n            doc                 = null,\n            output              = null,\n            instances           = [],\n            id                  = '',\n            elements            = [],\n            i                   = -1;\n\n        doc = foreignDoc || window.document;\n\n        if (returnCollection = arguments[3]) {\n            // A non-documented 4th paramater enabling control of multiple instances\n\n            returnCollection = typeof returnCollection === 'boolean';\n        }\n\n        if (typeof container === 'string') {\n            elements = doc.querySelectorAll(container);\n        } else if (container && typeof container === 'object' && h.isElement(container, doc)) {\n            elements = [container];\n        } else if (container && typeof container === 'object' && container.length) {\n            // Although not documented, the container may also be an array-like list of\n            // elements such as a NodeList or jQuery collection, is returnCollection is true\n\n            elements = container;\n        } else {\n            throw new Error(mixitup.messages.errorFactoryInvalidContainer());\n        }\n\n        if (elements.length < 1) {\n            throw new Error(mixitup.messages.errorFactoryContainerNotFound());\n        }\n\n        for (i = 0; el = elements[i]; i++) {\n            if (i > 0 && !returnCollection) break;\n\n            if (!el.id) {\n                id = 'MixItUp' + h.randomHex();\n\n                el.id = id;\n            } else {\n                id = el.id;\n            }\n\n            if (mixitup.instances[id] instanceof mixitup.Mixer) {\n                instance = mixitup.instances[id];\n\n                if (!config || (config && config.debug && config.debug.showWarnings !== false)) {\n                    console.warn(mixitup.messages.warningFactoryPreexistingInstance());\n                }\n            } else {\n                instance = new mixitup.Mixer();\n\n                instance.attach(el, doc, id, config);\n\n                mixitup.instances[id] = instance;\n            }\n\n            facade = new mixitup.Facade(instance);\n\n            if (config && config.debug && config.debug.enable) {\n                instances.push(instance);\n            } else {\n                instances.push(facade);\n            }\n        }\n\n        if (returnCollection) {\n            output = new mixitup.Collection(instances);\n        } else {\n            // Return the first instance regardless\n\n            output = instances[0];\n        }\n\n        return output;\n    };\n\n    /**\n     * The `.use()` static method is used to extend the functionality of mixitup with compatible\n     * extensions and libraries in an environment with modular scoping e.g. ES2015, CommonJS, or RequireJS.\n     *\n     * You need only call the `.use()` function once per project, per extension, as module loaders\n     * will cache a single reference to MixItUp inclusive of all changes made.\n     *\n     * @example\n     * mixitup.use(extension)\n     *\n     * @example <caption>Example 1: Extending MixItUp with the Pagination Extension</caption>\n     *\n     * import mixitup from 'mixitup';\n     * import mixitupPagination from 'mixitup-pagination';\n     *\n     * mixitup.use(mixitupPagination);\n     *\n     * // All mixers created by the factory function in all modules will now\n     * // have pagination functionality\n     *\n     * var mixer = mixitup('.container');\n     *\n     * @public\n     * @name     use\n     * @memberof mixitup\n     * @kind     function\n     * @static\n     * @since    3.0.0\n     * @param    {*}  extension   A reference to the extension or library to be used.\n     * @return   {void}\n     */\n\n    mixitup.use = function(extension) {\n        mixitup.Base.prototype.callActions.call(mixitup, 'beforeUse', arguments);\n\n        // Call the extension's factory function, passing\n        // the mixitup factory as a paramater\n\n        if (typeof extension === 'function' && extension.TYPE === 'mixitup-extension') {\n            // Mixitup extension\n\n            if (typeof mixitup.extensions[extension.NAME] === 'undefined') {\n                extension(mixitup);\n\n                mixitup.extensions[extension.NAME] = extension;\n            }\n        } else if (extension.fn && extension.fn.jquery) {\n            // jQuery\n\n            mixitup.libraries.$ = extension;\n        }\n\n        mixitup.Base.prototype.callActions.call(mixitup, 'afterUse', arguments);\n    };\n\n    mixitup.instances   = {};\n    mixitup.extensions  = {};\n    mixitup.libraries   = {};\n\n    /**\n     * @private\n     */\n\n    h = {\n\n        /**\n         * @private\n         * @param   {HTMLElement}   el\n         * @param   {string}        cls\n         * @return  {boolean}\n         */\n\n        hasClass: function(el, cls) {\n            return !!el.className.match(new RegExp('(\\\\s|^)' + cls + '(\\\\s|$)'));\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}   el\n         * @param   {string}        cls\n         * @return  {void}\n         */\n\n        addClass: function(el, cls) {\n            if (!this.hasClass(el, cls)) el.className += el.className ? ' ' + cls : cls;\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}   el\n         * @param   {string}        cls\n         * @return  {void}\n         */\n\n        removeClass: function(el, cls) {\n            if (this.hasClass(el, cls)) {\n                var reg = new RegExp('(\\\\s|^)' + cls + '(\\\\s|$)');\n\n                el.className = el.className.replace(reg, ' ').trim();\n            }\n        },\n\n        /**\n         * Merges the properties of the source object onto the\n         * target object. Alters the target object.\n         *\n         * @private\n         * @param   {object}    destination\n         * @param   {object}    source\n         * @param   {boolean}   [deep=false]\n         * @param   {boolean}   [handleErrors=false]\n         * @return  {void}\n         */\n\n        extend: function(destination, source, deep, handleErrors) {\n            var sourceKeys  = [],\n                key         = '',\n                i           = -1;\n\n            deep = deep || false;\n            handleErrors = handleErrors || false;\n\n            try {\n                if (Array.isArray(source)) {\n                    for (i = 0; i < source.length; i++) {\n                        sourceKeys.push(i);\n                    }\n                } else if (source) {\n                    sourceKeys = Object.keys(source);\n                }\n\n                for (i = 0; i < sourceKeys.length; i++) {\n                    key = sourceKeys[i];\n\n                    if (!deep || typeof source[key] !== 'object' || this.isElement(source[key])) {\n                        // All non-object properties, or all properties if shallow extend\n\n                        destination[key] = source[key];\n                    } else if (Array.isArray(source[key])) {\n                        // Arrays\n\n                        if (!destination[key]) {\n                            destination[key] = [];\n                        }\n\n                        this.extend(destination[key], source[key], deep, handleErrors);\n                    } else {\n                        // Objects\n\n                        if (!destination[key]) {\n                            destination[key] = {};\n                        }\n\n                        this.extend(destination[key], source[key], deep, handleErrors);\n                    }\n                }\n            } catch(err) {\n                if (handleErrors) {\n                    this.handleExtendError(err, destination);\n                } else {\n                    throw err;\n                }\n            }\n\n            return destination;\n        },\n\n        /**\n         * @private\n         * @param   {Error}  err\n         * @param   {object} destination\n         * @return  {void}\n         */\n\n        handleExtendError: function(err, destination) {\n            var re                  = /property \"?(\\w*)\"?[,:] object/i,\n                matches             = null,\n                erroneous           = '',\n                message             = '',\n                suggestion          = '',\n                probableMatch       = '',\n                key                 = '',\n                mostMatchingChars   = -1,\n                i                   = -1;\n\n            if (err instanceof TypeError && (matches = re.exec(err.message))) {\n                erroneous = matches[1];\n\n                for (key in destination) {\n                    i = 0;\n\n                    while (i < erroneous.length && erroneous.charAt(i) === key.charAt(i)) {\n                        i++;\n                    }\n\n                    if (i > mostMatchingChars) {\n                        mostMatchingChars = i;\n                        probableMatch = key;\n                    }\n                }\n\n                if (mostMatchingChars > 1) {\n                    suggestion = mixitup.messages.errorConfigInvalidPropertySuggestion({\n                        probableMatch: probableMatch\n                    });\n                }\n\n                message = mixitup.messages.errorConfigInvalidProperty({\n                    erroneous: erroneous,\n                    suggestion: suggestion\n                });\n\n                throw new TypeError(message);\n            }\n\n            throw err;\n        },\n\n        /**\n         * @private\n         * @param   {string} str\n         * @return  {function}\n         */\n\n        template: function(str) {\n            var re          = /\\${([\\w]*)}/g,\n                dynamics    = {},\n                matches     = null;\n\n            while ((matches = re.exec(str))) {\n                dynamics[matches[1]] = new RegExp('\\\\${' + matches[1] + '}', 'g');\n            }\n\n            return function(data) {\n                var key     = '',\n                    output  = str;\n\n                data = data || {};\n\n                for (key in dynamics) {\n                    output = output.replace(dynamics[key], typeof data[key] !== 'undefined' ? data[key] : '');\n                }\n\n                return output;\n            };\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}   el\n         * @param   {string}        type\n         * @param   {function}      fn\n         * @param   {boolean}       useCapture\n         * @return  {void}\n         */\n\n        on: function(el, type, fn, useCapture) {\n            if (!el) return;\n\n            if (el.addEventListener) {\n                el.addEventListener(type, fn, useCapture);\n            } else if (el.attachEvent) {\n                el['e' + type + fn] = fn;\n\n                el[type + fn] = function() {\n                    el['e' + type + fn](window.event);\n                };\n\n                el.attachEvent('on' + type, el[type + fn]);\n            }\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}   el\n         * @param   {string}        type\n         * @param   {function}      fn\n         * @return  {void}\n         */\n\n        off: function(el, type, fn) {\n            if (!el) return;\n\n            if (el.removeEventListener) {\n                el.removeEventListener(type, fn, false);\n            } else if (el.detachEvent) {\n                el.detachEvent('on' + type, el[type + fn]);\n                el[type + fn] = null;\n            }\n        },\n\n        /**\n         * @private\n         * @param   {string}      eventType\n         * @param   {object}      detail\n         * @param   {Document}    [doc]\n         * @return  {CustomEvent}\n         */\n\n        getCustomEvent: function(eventType, detail, doc) {\n            var event = null;\n\n            doc = doc || window.document;\n\n            if (typeof window.CustomEvent === 'function') {\n                event = new window.CustomEvent(eventType, {\n                    detail: detail,\n                    bubbles: true,\n                    cancelable: true\n                });\n            } else if (typeof doc.createEvent === 'function') {\n                event = doc.createEvent('CustomEvent');\n                event.initCustomEvent(eventType, true, true, detail);\n            } else {\n                event = doc.createEventObject(),\n                event.type = eventType;\n\n                event.returnValue = false;\n                event.cancelBubble = false;\n                event.detail = detail;\n            }\n\n            return event;\n        },\n\n        /**\n         * @private\n         * @param   {Event} e\n         * @return  {Event}\n         */\n\n        getOriginalEvent: function(e) {\n            if (e.touches && e.touches.length) {\n                return e.touches[0];\n            } else if (e.changedTouches && e.changedTouches.length) {\n                return e.changedTouches[0];\n            } else {\n                return e;\n            }\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}   el\n         * @param   {string}        selector\n         * @return  {Number}\n         */\n\n        index: function(el, selector) {\n            var i = 0;\n\n            while ((el = el.previousElementSibling) !== null) {\n                if (!selector || el.matches(selector)) {\n                    ++i;\n                }\n            }\n\n            return i;\n        },\n\n        /**\n         * Converts a dash or snake-case string to camel case.\n         *\n         * @private\n         * @param   {string}    str\n         * @param   {boolean}   [isPascal]\n         * @return  {string}\n         */\n\n        camelCase: function(str) {\n            return str.toLowerCase().replace(/([_-][a-z])/g, function($1) {\n                return $1.toUpperCase().replace(/[_-]/, '');\n            });\n        },\n\n        /**\n         * Converts a dash or snake-case string to pascal case.\n         *\n         * @private\n         * @param   {string}    str\n         * @param   {boolean}   [isPascal]\n         * @return  {string}\n         */\n\n        pascalCase: function(str) {\n            return (str = this.camelCase(str)).charAt(0).toUpperCase() + str.slice(1);\n        },\n\n        /**\n         * Converts a camel or pascal-case string to dash case.\n         *\n         * @private\n         * @param   {string}    str\n         * @return  {string}\n         */\n\n        dashCase: function(str) {\n            return str.replace(/([A-Z])/g, '-$1').replace(/^-/, '').toLowerCase();\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}       el\n         * @param   {HTMLHtmlElement}   [doc]\n         * @return  {boolean}\n         */\n\n        isElement: function(el, doc) {\n            doc = doc || window.document;\n\n            if (\n                window.HTMLElement &&\n                el instanceof window.HTMLElement\n            ) {\n                return true;\n            } else if (\n                doc.defaultView &&\n                doc.defaultView.HTMLElement &&\n                el instanceof doc.defaultView.HTMLElement\n            ) {\n                return true;\n            } else {\n                return (\n                    el !== null &&\n                    el.nodeType === 1 &&\n                    typeof el.nodeName === 'string'\n                );\n            }\n        },\n\n        /**\n         * @private\n         * @param   {string}            htmlString\n         * @param   {HTMLHtmlElement}   [doc]\n         * @return  {DocumentFragment}\n         */\n\n        createElement: function(htmlString, doc) {\n            var frag = null,\n                temp = null;\n\n            doc = doc || window.document;\n\n            frag = doc.createDocumentFragment();\n            temp = doc.createElement('div');\n\n            temp.innerHTML = htmlString.trim();\n\n            while (temp.firstChild) {\n                frag.appendChild(temp.firstChild);\n            }\n\n            return frag;\n        },\n\n        /**\n         * @private\n         * @param   {Node} node\n         * @return  {void}\n         */\n\n        removeWhitespace: function(node) {\n            var deleting;\n\n            while (node && node.nodeName === '#text') {\n                deleting = node;\n\n                node = node.previousSibling;\n\n                deleting.parentElement && deleting.parentElement.removeChild(deleting);\n            }\n        },\n\n        /**\n         * @private\n         * @param   {Array<*>}  a\n         * @param   {Array<*>}  b\n         * @return  {boolean}\n         */\n\n        isEqualArray: function(a, b) {\n            var i = a.length;\n\n            if (i !== b.length) return false;\n\n            while (i--) {\n                if (a[i] !== b[i]) return false;\n            }\n\n            return true;\n        },\n\n        /**\n         * @private\n         * @param   {object}  a\n         * @param   {object}  b\n         * @return  {boolean}\n         */\n\n        deepEquals: function(a, b) {\n            var key;\n\n            if (typeof a === 'object' && a && typeof b === 'object' && b) {\n                if (Object.keys(a).length !== Object.keys(b).length) return false;\n\n                for (key in a) {\n                    if (!b.hasOwnProperty(key) || !this.deepEquals(a[key], b[key])) return false;\n                }\n            } else if (a !== b) {\n                return false;\n            }\n\n            return true;\n        },\n\n        /**\n         * @private\n         * @param   {Array<*>}  oldArray\n         * @return  {Array<*>}\n         */\n\n        arrayShuffle: function(oldArray) {\n            var newArray    = oldArray.slice(),\n                len         = newArray.length,\n                i           = len,\n                p           = -1,\n                t           = [];\n\n            while (i--) {\n                p = ~~(Math.random() * len);\n                t = newArray[i];\n\n                newArray[i] = newArray[p];\n                newArray[p] = t;\n            }\n\n            return newArray;\n        },\n\n        /**\n         * @private\n         * @param   {object}    list\n         */\n\n        arrayFromList: function(list) {\n            var output, i;\n\n            try {\n                return Array.prototype.slice.call(list);\n            } catch(err) {\n                output = [];\n\n                for (i = 0; i < list.length; i++) {\n                    output.push(list[i]);\n                }\n\n                return output;\n            }\n        },\n\n        /**\n         * @private\n         * @param   {function}  func\n         * @param   {Number}    wait\n         * @param   {boolean}   immediate\n         * @return  {function}\n         */\n\n        debounce: function(func, wait, immediate) {\n            var timeout;\n\n            return function() {\n                var self     = this,\n                    args     = arguments,\n                    callNow  = immediate && !timeout,\n                    later    = null;\n\n                later = function() {\n                    timeout  = null;\n\n                    if (!immediate) {\n                        func.apply(self, args);\n                    }\n                };\n\n                clearTimeout(timeout);\n\n                timeout = setTimeout(later, wait);\n\n                if (callNow) func.apply(self, args);\n            };\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}   element\n         * @return  {object}\n         */\n\n        position: function(element) {\n            var xPosition       = 0,\n                yPosition       = 0,\n                offsetParent    = element;\n\n            while (element) {\n                xPosition -= element.scrollLeft;\n                yPosition -= element.scrollTop;\n\n                if (element === offsetParent) {\n                    xPosition += element.offsetLeft;\n                    yPosition += element.offsetTop;\n\n                    offsetParent = element.offsetParent;\n                }\n\n                element = element.parentElement;\n            }\n\n            return {\n                x: xPosition,\n                y: yPosition\n            };\n        },\n\n        /**\n         * @private\n         * @param   {object}    node1\n         * @param   {object}    node2\n         * @return  {Number}\n         */\n\n        getHypotenuse: function(node1, node2) {\n            var distanceX = node1.x - node2.x,\n                distanceY = node1.y - node2.y;\n\n            distanceX = distanceX < 0 ? distanceX * -1 : distanceX,\n            distanceY = distanceY < 0 ? distanceY * -1 : distanceY;\n\n            return Math.sqrt(Math.pow(distanceX, 2) + Math.pow(distanceY, 2));\n        },\n\n        /**\n         * Calcuates the area of intersection between two rectangles and expresses it as\n         * a ratio in comparison to the area of the first rectangle.\n         *\n         * @private\n         * @param   {Rect}  box1\n         * @param   {Rect}  box2\n         * @return  {number}\n         */\n\n        getIntersectionRatio: function(box1, box2) {\n            var controlArea         = box1.width * box1.height,\n                intersectionX       = -1,\n                intersectionY       = -1,\n                intersectionArea    = -1,\n                ratio               = -1;\n\n            intersectionX =\n                Math.max(0, Math.min(box1.left + box1.width, box2.left + box2.width) - Math.max(box1.left, box2.left));\n\n            intersectionY =\n                Math.max(0, Math.min(box1.top + box1.height, box2.top + box2.height) - Math.max(box1.top, box2.top));\n\n            intersectionArea = intersectionY * intersectionX;\n\n            ratio = intersectionArea / controlArea;\n\n            return ratio;\n        },\n\n        /**\n         * @private\n         * @param   {object}            el\n         * @param   {string}            selector\n         * @param   {boolean}           [includeSelf]\n         * @param   {HTMLHtmlElement}   [doc]\n         * @return  {Element|null}\n         */\n\n        closestParent: function(el, selector, includeSelf, doc) {\n            var parent  = el.parentNode;\n\n            doc = doc || window.document;\n\n            if (includeSelf && el.matches(selector)) {\n                return el;\n            }\n\n            while (parent && parent != doc.body) {\n                if (parent.matches && parent.matches(selector)) {\n                    return parent;\n                } else if (parent.parentNode) {\n                    parent = parent.parentNode;\n                } else {\n                    return null;\n                }\n            }\n\n            return null;\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}       el\n         * @param   {string}            selector\n         * @param   {HTMLHtmlElement}   [doc]\n         * @return  {NodeList}\n         */\n\n        children: function(el, selector, doc) {\n            var children    = [],\n                tempId      = '';\n\n            doc = doc || window.doc;\n\n            if (el) {\n                if (!el.id) {\n                    tempId = 'Temp' + this.randomHexKey();\n\n                    el.id = tempId;\n                }\n\n                children = doc.querySelectorAll('#' + el.id + ' > ' + selector);\n\n                if (tempId) {\n                    el.removeAttribute('id');\n                }\n            }\n\n            return children;\n        },\n\n        /**\n         * Creates a clone of a provided array, with any empty strings removed.\n         *\n         * @private\n         * @param   {Array<*>} originalArray\n         * @return  {Array<*>}\n         */\n\n        clean: function(originalArray) {\n            var cleanArray = [],\n                i = -1;\n\n            for (i = 0; i < originalArray.length; i++) {\n                if (originalArray[i] !== '') {\n                    cleanArray.push(originalArray[i]);\n                }\n            }\n\n            return cleanArray;\n        },\n\n        /**\n         * Abstracts an ES6 promise into a q-like deferred interface for storage and deferred resolution.\n         *\n         * @private\n         * @param  {object} libraries\n         * @return {h.Deferred}\n         */\n\n        defer: function(libraries) {\n            var deferred       = null,\n                promiseWrapper = null,\n                $              = null;\n\n            promiseWrapper = new this.Deferred();\n\n            if (mixitup.features.has.promises) {\n                // ES6 native promise or polyfill\n\n                promiseWrapper.promise = new Promise(function(resolve, reject) {\n                    promiseWrapper.resolve = resolve;\n                    promiseWrapper.reject  = reject;\n                });\n            } else if (($ = (window.jQuery || libraries.$)) && typeof $.Deferred === 'function') {\n                // jQuery\n\n                deferred = $.Deferred();\n\n                promiseWrapper.promise = deferred.promise();\n                promiseWrapper.resolve = deferred.resolve;\n                promiseWrapper.reject  = deferred.reject;\n            } else if (window.console) {\n                // No implementation\n\n                console.warn(mixitup.messages.warningNoPromiseImplementation());\n            }\n\n            return promiseWrapper;\n        },\n\n        /**\n         * @private\n         * @param   {Array<Promise>}    tasks\n         * @param   {object}            libraries\n         * @return  {Promise<Array>}\n         */\n\n        all: function(tasks, libraries) {\n            var $ = null;\n\n            if (mixitup.features.has.promises) {\n                return Promise.all(tasks);\n            } else if (($ = (window.jQuery || libraries.$)) && typeof $.when === 'function') {\n                return $.when.apply($, tasks)\n                    .done(function() {\n                        // jQuery when returns spread arguments rather than an array or resolutions\n\n                        return arguments;\n                    });\n            }\n\n            // No implementation\n\n            if (window.console) {\n                console.warn(mixitup.messages.warningNoPromiseImplementation());\n            }\n\n            return [];\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}   el\n         * @param   {string}        property\n         * @param   {Array<string>} vendors\n         * @return  {string}\n         */\n\n        getPrefix: function(el, property, vendors) {\n            var i       = -1,\n                prefix  = '';\n\n            if (h.dashCase(property) in el.style) return '';\n\n            for (i = 0; prefix = vendors[i]; i++) {\n                if (prefix + property in el.style) {\n                    return prefix.toLowerCase();\n                }\n            }\n\n            return 'unsupported';\n        },\n\n        /**\n         * @private\n         * @return  {string}\n         */\n\n        randomHex: function() {\n            return ('00000' + (Math.random() * 16777216 << 0).toString(16)).substr(-6).toUpperCase();\n        },\n\n        /**\n         * @private\n         * @param   {HTMLDocument}  [doc]\n         * @return  {object}\n         */\n\n        getDocumentState: function(doc) {\n            doc = typeof doc.body === 'object' ? doc : window.document;\n\n            return {\n                scrollTop: window.pageYOffset,\n                scrollLeft: window.pageXOffset,\n                docHeight: doc.documentElement.scrollHeight,\n                docWidth: doc.documentElement.scrollWidth,\n                viewportHeight: doc.documentElement.clientHeight,\n                viewportWidth: doc.documentElement.clientWidth\n            };\n        },\n\n        /**\n         * @private\n         * @param   {object}    obj\n         * @param   {function}  fn\n         * @return  {function}\n         */\n\n        bind: function(obj, fn) {\n            return function() {\n                return fn.apply(obj, arguments);\n            };\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}   el\n         * @return  {boolean}\n         */\n\n        isVisible: function(el) {\n            var styles = null;\n\n            if (el.offsetParent) return true;\n\n            styles = window.getComputedStyle(el);\n\n            if (\n                styles.position === 'fixed' &&\n                styles.visibility !== 'hidden' &&\n                styles.opacity !== '0'\n            ) {\n                // Fixed elements report no offsetParent,\n                // but may still be invisible\n\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * @private\n         * @param   {object}    obj\n         */\n\n        seal: function(obj) {\n            if (typeof Object.seal === 'function') {\n                Object.seal(obj);\n            }\n        },\n\n        /**\n         * @private\n         * @param   {object}    obj\n         */\n\n        freeze: function(obj) {\n            if (typeof Object.freeze === 'function') {\n                Object.freeze(obj);\n            }\n        },\n\n        /**\n         * @private\n         * @param   {string}    control\n         * @param   {string}    specimen\n         * @return  {boolean}\n         */\n\n        compareVersions: function(control, specimen) {\n            var controlParts    = control.split('.'),\n                specimenParts   = specimen.split('.'),\n                controlPart     = -1,\n                specimenPart    = -1,\n                i               = -1;\n\n            for (i = 0; i < controlParts.length; i++) {\n                controlPart     = parseInt(controlParts[i].replace(/[^\\d.]/g, ''));\n                specimenPart    = parseInt(specimenParts[i].replace(/[^\\d.]/g, '') || 0);\n\n                if (specimenPart < controlPart) {\n                    return false;\n                } else if (specimenPart > controlPart) {\n                    return true;\n                }\n            }\n\n            return true;\n        },\n\n        /**\n         * @private\n         * @constructor\n         */\n\n        Deferred: function() {\n            this.promise    = null;\n            this.resolve    = null;\n            this.reject     = null;\n            this.id         = h.randomHex();\n        },\n\n        /**\n         * @private\n         * @param   {object}  obj\n         * @return  {boolean}\n         */\n\n        isEmptyObject: function(obj) {\n            var key = '';\n\n            if (typeof Object.keys === 'function') {\n                return Object.keys(obj).length === 0;\n            }\n\n            for (key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        /**\n         * @param   {mixitup.Config.ClassNames}   classNames\n         * @param   {string}                      elementName\n         * @param   {string}                      [modifier]\n         * @return  {string}\n         */\n\n        getClassname: function(classNames, elementName, modifier) {\n            var classname = '';\n\n            classname += classNames.block;\n\n            if (classname.length) {\n                classname += classNames.delineatorElement;\n            }\n\n            classname += classNames['element' + this.pascalCase(elementName)];\n\n            if (!modifier) return classname;\n\n            if (classname.length) {\n                classname += classNames.delineatorModifier;\n            }\n\n            classname += modifier;\n\n            return classname;\n        },\n\n        /**\n         * Returns the value of a property on a given object via its string key.\n         *\n         * @param   {object}    obj\n         * @param   {string}    stringKey\n         * @return  {*} value\n         */\n\n        getProperty: function(obj, stringKey) {\n            var parts           = stringKey.split('.'),\n                returnCurrent   = null,\n                current         = '',\n                i               = 0;\n\n            if (!stringKey) {\n                return obj;\n            }\n\n            returnCurrent = function(obj) {\n                if (!obj) {\n                    return null;\n                } else {\n                    return obj[current];\n                }\n            };\n\n            while (i < parts.length) {\n                current = parts[i];\n\n                obj = returnCurrent(obj);\n\n                i++;\n            }\n\n            if (typeof obj !== 'undefined') {\n                return obj;\n            } else {\n                return null;\n            }\n        }\n    };\n\n    mixitup.h = h;\n\n    /**\n     * The Base class adds instance methods to all other extensible MixItUp classes,\n     * enabling the calling of any registered hooks.\n     *\n     * @constructor\n     * @namespace\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.Base = function() {};\n\n    mixitup.Base.prototype = {\n        constructor: mixitup.Base,\n\n        /**\n         * Calls any registered hooks for the provided action.\n         *\n         * @memberof    mixitup.Base\n         * @private\n         * @instance\n         * @since       2.0.0\n         * @param       {string}    actionName\n         * @param       {Array<*>}  args\n         * @return      {void}\n         */\n\n        callActions: function(actionName, args) {\n            var self            = this,\n                hooks           = self.constructor.actions[actionName],\n                extensionName   = '';\n\n            if (!hooks || h.isEmptyObject(hooks)) return;\n\n            for (extensionName in hooks) {\n                hooks[extensionName].apply(self, args);\n            }\n        },\n\n        /**\n         * Calls any registered hooks for the provided filter.\n         *\n         * @memberof    mixitup.Base\n         * @private\n         * @instance\n         * @since       2.0.0\n         * @param       {string}    filterName\n         * @param       {*}         input\n         * @param       {Array<*>}  args\n         * @return      {*}\n         */\n\n        callFilters: function(filterName, input, args) {\n            var self            = this,\n                hooks           = self.constructor.filters[filterName],\n                output          = input,\n                extensionName   = '';\n\n            if (!hooks || h.isEmptyObject(hooks)) return output;\n\n            args = args || [];\n\n            for (extensionName in hooks) {\n                args = h.arrayFromList(args);\n\n                args.unshift(output);\n\n                output = hooks[extensionName].apply(self, args);\n            }\n\n            return output;\n        }\n    };\n\n    /**\n     * The BaseStatic class holds a set of static methods which are then added to all other\n     * extensible MixItUp classes as a means of integrating extensions via the addition of new\n     * methods and/or actions and hooks.\n     *\n     * @constructor\n     * @namespace\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.BaseStatic = function() {\n        this.actions = {};\n        this.filters = {};\n\n        /**\n         * Performs a shallow extend on the class's prototype, adding one or more new members to\n         * the class in a single operation.\n         *\n         * @memberof    mixitup.BaseStatic\n         * @public\n         * @static\n         * @since       2.1.0\n         * @param       {object} extension\n         * @return      {void}\n         */\n\n        this.extend = function(extension) {\n            h.extend(this.prototype, extension);\n        };\n\n        /**\n         * Registers a function to be called on the action hook of the provided name.\n         *\n         * @memberof    mixitup.BaseStatic\n         * @public\n         * @static\n         * @since       2.1.0\n         * @param       {string}    hookName\n         * @param       {string}    extensionName\n         * @param       {function}  func\n         * @return      {void}\n         */\n\n        this.registerAction = function(hookName, extensionName, func) {\n            (this.actions[hookName] = this.actions[hookName] || {})[extensionName] = func;\n        };\n\n        /**\n         * Registers a function to be called on the filter of the provided name.\n         *\n         * @memberof    mixitup.BaseStatic\n         * @public\n         * @static\n         * @since       2.1.0\n         * @param       {string}    hookName\n         * @param       {string}    extensionName\n         * @param       {function}  func\n         * @return      {void}\n         */\n\n        this.registerFilter = function(hookName, extensionName, func) {\n            (this.filters[hookName] = this.filters[hookName] || {})[extensionName] = func;\n        };\n    };\n\n    /**\n     * The `mixitup.Features` class performs all feature and CSS prefix detection\n     * neccessary for MixItUp to function correctly, as well as storing various\n     * string and array constants. All feature decection is on evaluation of the\n     * library and stored in a singleton instance for use by other internal classes.\n     *\n     * @constructor\n     * @namespace\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.Features = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.boxSizingPrefix            = '';\n        this.transformPrefix            = '';\n        this.transitionPrefix           = '';\n\n        this.boxSizingPrefix            = '';\n        this.transformProp              = '';\n        this.transformRule              = '';\n        this.transitionProp             = '';\n        this.perspectiveProp            = '';\n        this.perspectiveOriginProp      = '';\n\n        this.has                        = new mixitup.Has();\n\n        this.canary                     = null;\n\n        this.BOX_SIZING_PROP            = 'boxSizing';\n        this.TRANSITION_PROP            = 'transition';\n        this.TRANSFORM_PROP             = 'transform';\n        this.PERSPECTIVE_PROP           = 'perspective';\n        this.PERSPECTIVE_ORIGIN_PROP    = 'perspectiveOrigin';\n        this.VENDORS                    = ['Webkit', 'moz', 'O', 'ms'];\n\n        this.TWEENABLE = [\n            'opacity',\n            'width', 'height',\n            'marginRight', 'marginBottom',\n            'x', 'y',\n            'scale',\n            'translateX', 'translateY', 'translateZ',\n            'rotateX', 'rotateY', 'rotateZ'\n        ];\n\n        this.callActions('afterConstruct');\n    };\n\n    mixitup.BaseStatic.call(mixitup.Features);\n\n    mixitup.Features.prototype = Object.create(mixitup.Base.prototype);\n\n    h.extend(mixitup.Features.prototype,\n    /** @lends mixitup.Features */\n    {\n        constructor: mixitup.Features,\n\n        /**\n         * @private\n         * @return  {void}\n         */\n\n        init: function() {\n            var self = this;\n\n            self.callActions('beforeInit', arguments);\n\n            self.canary = document.createElement('div');\n\n            self.setPrefixes();\n            self.runTests();\n\n            self.callActions('beforeInit', arguments);\n        },\n\n        /**\n         * @private\n         * @return  {void}\n         */\n\n        runTests: function() {\n            var self = this;\n\n            self.callActions('beforeRunTests', arguments);\n\n            self.has.promises       = typeof window.Promise === 'function';\n            self.has.transitions    = self.transitionPrefix !== 'unsupported';\n\n            self.callActions('afterRunTests', arguments);\n\n            h.freeze(self.has);\n        },\n\n        /**\n         * @private\n         * @return  {void}\n         */\n\n        setPrefixes: function() {\n            var self = this;\n\n            self.callActions('beforeSetPrefixes', arguments);\n\n            self.transitionPrefix   = h.getPrefix(self.canary, 'Transition', self.VENDORS);\n            self.transformPrefix    = h.getPrefix(self.canary, 'Transform', self.VENDORS);\n            self.boxSizingPrefix    = h.getPrefix(self.canary, 'BoxSizing', self.VENDORS);\n\n            self.boxSizingProp = self.boxSizingPrefix ?\n                self.boxSizingPrefix + h.pascalCase(self.BOX_SIZING_PROP) : self.BOX_SIZING_PROP;\n\n            self.transitionProp = self.transitionPrefix ?\n                self.transitionPrefix + h.pascalCase(self.TRANSITION_PROP) : self.TRANSITION_PROP;\n\n            self.transformProp = self.transformPrefix ?\n                self.transformPrefix + h.pascalCase(self.TRANSFORM_PROP) : self.TRANSFORM_PROP;\n\n            self.transformRule = self.transformPrefix ?\n                '-' + self.transformPrefix + '-' + self.TRANSFORM_PROP : self.TRANSFORM_PROP;\n\n            self.perspectiveProp = self.transformPrefix ?\n                self.transformPrefix + h.pascalCase(self.PERSPECTIVE_PROP) : self.PERSPECTIVE_PROP;\n\n            self.perspectiveOriginProp = self.transformPrefix ?\n                self.transformPrefix + h.pascalCase(self.PERSPECTIVE_ORIGIN_PROP) :\n                self.PERSPECTIVE_ORIGIN_PROP;\n\n            self.callActions('afterSetPrefixes', arguments);\n        }\n    });\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.Has = function() {\n        this.transitions    = false;\n        this.promises       = false;\n\n        h.seal(this);\n    };\n\n    // Assign a singleton instance to `mixitup.features` and initialise:\n\n    mixitup.features = new mixitup.Features();\n\n    mixitup.features.init();\n\n    /**\n     * A group of properties defining the mixer's animation and effects settings.\n     *\n     * @constructor\n     * @memberof    mixitup.Config\n     * @name        animation\n     * @namespace\n     * @public\n     * @since       2.0.0\n     */\n\n    mixitup.ConfigAnimation = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A boolean dictating whether or not animation should be enabled for the MixItUp instance.\n         * If `false`, all operations will occur instantly and syncronously, although callback\n         * functions and any returned promises will still be fulfilled.\n         *\n         * @example <caption>Example: Create a mixer with all animations disabled</caption>\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         enable: false\n         *     }\n         * });\n         *\n         * @name        enable\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.enable = true;\n\n        /**\n         * A string of one or more space-seperated properties to which transitions will be\n         * applied for all filtering animations.\n         *\n         * Properties can be listed any order or combination, although they will be applied in a specific\n         * predefined order to produce consistent results.\n         *\n         * To learn more about available effects, experiment with our <a href=\"https://www.kunkalabs.com/mixitup/\">\n         * sandbox demo</a> and try out the \"Export config\" button in the Animation options drop down.\n         *\n         * @example <caption>Example: Apply \"fade\" and \"translateZ\" effects to all animations</caption>\n         * // As targets are filtered in and out, they will fade between\n         * // opacity 1 and 0 and transform between translateZ(-100px) and\n         * // translateZ(0).\n         *\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         effects: 'fade translateZ(-100px)'\n         *     }\n         * });\n         *\n         * @name        effects\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {string}\n         * @default     'fade scale'\n         */\n\n        this.effects = 'fade scale';\n\n        /**\n         * A string of one or more space-seperated effects to be applied only to filter-in\n         * animations, overriding `config.animation.effects` if set.\n         *\n         * @example <caption>Example: Apply downwards vertical translate to targets being filtered in</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         effectsIn: 'fade translateY(-100%)'\n         *     }\n         * });\n         *\n         * @name        effectsIn\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {string}\n         * @default     ''\n         */\n\n        this.effectsIn = '';\n\n        /**\n         * A string of one or more space-seperated effects to be applied only to filter-out\n         * animations, overriding `config.animation.effects` if set.\n         *\n         * @example <caption>Example: Apply upwards vertical translate to targets being filtered out</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         effectsOut: 'fade translateY(-100%)'\n         *     }\n         * });\n         *\n         * @name        effectsOut\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {string}\n         * @default     ''\n         */\n\n        this.effectsOut = '';\n\n        /**\n         * An integer dictating the duration of all MixItUp animations in milliseconds, not\n         * including any additional delay apllied via the `'stagger'` effect.\n         *\n         * @example <caption>Example: Apply an animation duration of 200ms to all mixitup animations</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         duration: 200\n         *     }\n         * });\n         *\n         * @name        duration\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {number}\n         * @default     600\n         */\n\n        this.duration = 600;\n\n        /**\n         * A valid CSS3 transition-timing function or shorthand. For a full list of accepted\n         * values, visit <a href=\"http://easings.net\" target=\"_blank\">easings.net</a>.\n         *\n         * @example <caption>Example 1: Apply \"ease-in-out\" easing to all animations</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         easing: 'ease-in-out'\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Apply a custom \"cubic-bezier\" easing function to all animations</caption>\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         easing: 'cubic-bezier(0.645, 0.045, 0.355, 1)'\n         *     }\n         * });\n         *\n         * @name        easing\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {string}\n         * @default     'ease'\n         */\n\n        this.easing = 'ease';\n\n        /**\n         * A boolean dictating whether or not to apply perspective to the MixItUp container\n         * during animations. By default, perspective is always applied and creates the\n         * illusion of three-dimensional space for effects such as `translateZ`, `rotateX`,\n         * and `rotateY`.\n         *\n         * You may wish to disable this and define your own perspective settings via CSS.\n         *\n         * @example <caption>Example: Prevent perspective from being applied to any 3D transforms</caption>\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         applyPerspective: false\n         *     }\n         * });\n         *\n         * @name        applyPerspective\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {bolean}\n         * @default     true\n         */\n\n        this.applyPerspective = true;\n\n        /**\n         * The perspective distance value to be applied to the container during animations,\n         * affecting any 3D-transform-based effects.\n         *\n         * @example <caption>Example: Set a perspective distance of 2000px</caption>\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         effects: 'rotateY(-25deg)',\n         *         perspectiveDistance: '2000px'\n         *     }\n         * });\n         *\n         * @name        perspectiveDistance\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {string}\n         * @default     '3000px'\n         */\n\n        this.perspectiveDistance = '3000px';\n\n        /**\n         * The perspective-origin value to be applied to the container during animations,\n         * affecting any 3D-transform-based effects.\n         *\n         * @example <caption>Example: Set a perspective origin in the top-right of the container</caption>\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         effects: 'transateZ(-200px)',\n         *         perspectiveOrigin: '100% 0'\n         *     }\n         * });\n         *\n         * @name        perspectiveOrigin\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {string}\n         * @default     '50% 50%'\n         */\n\n        this.perspectiveOrigin = '50% 50%';\n\n        /**\n         * A boolean dictating whether or not to enable the queuing of operations.\n         *\n         * If `true` (default), and a control is clicked or an API call is made while another\n         * operation is progress, the operation will go into the queue and will be automatically exectuted\n         * when the previous operaitons is finished.\n         *\n         * If `false`, any requested operations will be ignored, and the `onMixBusy` callback and `mixBusy`\n         * event will be fired. If `debug.showWarnings` is enabled, a console warning will also occur.\n         *\n         * @example <caption>Example: Disable queuing</caption>\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         queue: false\n         *     }\n         * });\n         *\n         * @name        queue\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.queue = true;\n\n        /**\n         * An integer dictacting the maximum number of operations allowed in the queue at\n         * any time, when queuing is enabled.\n         *\n         * @example <caption>Example: Allow a maximum of 5 operations in the queue at any time</caption>\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         queueLimit: 5\n         *     }\n         * });\n         *\n         * @name        queueLimit\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {number}\n         * @default     3\n         */\n\n        this.queueLimit = 3;\n\n        /**\n         * A boolean dictating whether or not to transition the height and width of the\n         * container as elements are filtered in and out. If disabled, the container height\n         * will change abruptly.\n         *\n         * It may be desirable to disable this on mobile devices as the CSS `height` and\n         * `width` properties do not receive GPU-acceleration and can therefore cause stuttering.\n         *\n         * @example <caption>Example 1: Disable the transitioning of the container height and/or width</caption>\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         animateResizeContainer: false\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Disable the transitioning of the container height and/or width for mobile devices only</caption>\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         animateResizeContainer: myFeatureTests.isMobile ? false : true\n         *     }\n         * });\n         *\n         * @name        animateResizeContainer\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.animateResizeContainer = true;\n\n        /**\n         * A boolean dictating whether or not to transition the height and width of target\n         * elements as they change throughout the course of an animation.\n         *\n         * This is often a must for flex-box grid layouts where the size of target elements may change\n         * depending on final their position in relation to their siblings, or for `.changeLayout()`\n         * operations where the size of targets change between layouts.\n         *\n         * NB: This feature requires additional calculations and manipulation to non-hardware-accelerated\n         * properties which may adversely affect performance on slower devices, and is therefore\n         * disabled by default.\n         *\n         * @example <caption>Example: Enable the transitioning of target widths and heights</caption>\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         animateResizeTargets: true\n         *     }\n         * });\n         *\n         * @name        animateResizeTargets\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {boolean}\n         * @default     false\n         */\n\n        this.animateResizeTargets = false;\n\n        /**\n         * A custom function used to manipulate the order in which the stagger delay is\n         * incremented when using the ‘stagger’ effect.\n         *\n         * When using the 'stagger' effect, the delay applied to each target element is incremented\n         * based on its index. You may create a custom function to manipulate the order in which the\n         * delay is incremented and create engaging non-linear stagger effects.\n         *\n         * The function receives the index of the target element as a parameter, and must\n         * return an integer which serves as the multiplier for the stagger delay.\n         *\n         * @example <caption>Example 1: Stagger target elements by column in a 3-column grid</caption>\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         effects: 'fade stagger(100ms)',\n         *         staggerSequence: function(i) {\n         *             return i % 3;\n         *         }\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Using an algorithm to produce a more complex sequence</caption>\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         effects: 'fade stagger(100ms)',\n         *         staggerSequence: function(i) {\n         *             return (2*i) - (5*((i/3) - ((1/3) * (i%3))));\n         *         }\n         *     }\n         * });\n         *\n         * @name        staggerSequence\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {function}\n         * @default     null\n         */\n\n        this.staggerSequence = null;\n\n        /**\n         * A boolean dictating whether or not to reverse the direction of `translate`\n         * and `rotate` transforms for elements being filtered out.\n         *\n         * It can be used to create carousel-like animations where elements enter and exit\n         * from opposite directions. If enabled, the effect `translateX(-100%)` for elements\n         * being filtered in would become `translateX(100%)` for targets being filtered out.\n         *\n         * This functionality can also be achieved by providing seperate effects\n         * strings for `config.animation.effectsIn` and `config.animation.effectsOut`.\n         *\n         * @example <caption>Example: Reverse the desired direction on any translate/rotate effect for targets being filtered out</caption>\n         * // Elements being filtered in will be translated from '100%' to '0' while\n         * // elements being filtered out will be translated from 0 to '-100%'\n         *\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         effects: 'fade translateX(100%)',\n         *         reverseOut: true,\n         *         nudge: false // Disable nudging to create a carousel-like effect\n         *     }\n         * });\n         *\n         * @name        reverseOut\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {boolean}\n         * @default     false\n         */\n\n        this.reverseOut = false;\n\n        /**\n         * A boolean dictating whether or not to \"nudge\" the animation path of targets\n         * when they are being filtered in and out simulatenously.\n         *\n         * This has been the default behavior of MixItUp since version 1, but it\n         * may be desirable to disable this effect when filtering directly from\n         * one exclusive set of targets to a different exclusive set of targets,\n         * to create a carousel-like effect, or a generally more subtle animation.\n         *\n         * @example <caption>Example: Disable the \"nudging\" of targets being filtered in and out simulatenously</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         nudge: false\n         *     }\n         * });\n         *\n         * @name        nudge\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.nudge = true;\n\n        /**\n         * A boolean dictating whether or not to clamp the height of the container while MixItUp's\n         * geometry tests are carried out before an operation.\n         *\n         * To prevent scroll-bar flicker, clamping is turned on by default. But in the case where the\n         * height of the container might affect its vertical positioning in the viewport\n         * (e.g. a vertically-centered container), this should be turned off to ensure accurate\n         * test results and a smooth animation.\n         *\n         * @example <caption>Example: Disable container height-clamping</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         clampHeight: false\n         *     }\n         * });\n         *\n         * @name        clampHeight\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.clampHeight = true;\n\n        /**\n         * A boolean dictating whether or not to clamp the width of the container while MixItUp's\n         * geometry tests are carried out before an operation.\n         *\n         * To prevent scroll-bar flicker, clamping is turned on by default. But in the case where the\n         * width of the container might affect its horitzontal positioning in the viewport\n         * (e.g. a horizontall-centered container), this should be turned off to ensure accurate\n         * test results and a smooth animation.\n         *\n         * @example <caption>Example: Disable container width-clamping</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         clampWidth: false\n         *     }\n         * });\n         *\n         * @name        clampWidth\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.clampWidth = true;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigAnimation);\n\n    mixitup.ConfigAnimation.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigAnimation.prototype.constructor = mixitup.ConfigAnimation;\n\n    /**\n     * A group of properties relating to the behavior of the Mixer.\n     *\n     * @constructor\n     * @memberof    mixitup.Config\n     * @name        behavior\n     * @namespace\n     * @public\n     * @since       3.1.12\n     */\n\n    mixitup.ConfigBehavior = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A boolean dictating whether to allow \"live\" sorting of the mixer.\n         *\n         * Because of the expensive nature of sorting, MixItUp makes use of several\n         * internal optimizations to skip redundant sorting operations, such as when\n         * the newly requested sort command is the same as the active one. The caveat\n         * to this optimization is that \"live\" edits to the value of a target's sorting\n         * attribute will be ignored when requesting a re-sort by the same attribute.\n         *\n         * By setting to `behavior.liveSort` to `true`, the mixer will always re-sort\n         * regardless of whether or not the sorting attribute and order have changed.\n         *\n         * @example <caption>Example: Enabling `liveSort` to allow for re-sorting</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     behavior: {\n         *         liveSort: true\n         *     },\n         *     load: {\n         *         sort: 'edited:desc'\n         *     }\n         * });\n         *\n         * var target = containerEl.children[3];\n         *\n         * console.log(target.getAttribute('data-edited')); // '2015-04-24'\n         *\n         * target.setAttribute('data-edited', '2017-08-10'); // Update the target's edited date\n         *\n         * mixer.sort('edited:desc')\n         *     .then(function(state) {\n         *         // The target is now at the top of the list\n         *\n         *         console.log(state.targets[0] === target); // true\n         *     });\n         *\n         * @name        liveSort\n         * @memberof    mixitup.Config.behavior\n         * @instance\n         * @type        {boolean}\n         * @default     false\n         */\n\n        this.liveSort = false;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigBehavior);\n\n    mixitup.ConfigBehavior.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigBehavior.prototype.constructor = mixitup.ConfigBehavior;\n\n    /**\n     * A group of optional callback functions to be invoked at various\n     * points within the lifecycle of a mixer operation.\n     *\n     * Each function is analogous to an event of the same name triggered from the\n     * container element, and is invoked immediately after it.\n     *\n     * All callback functions receive the current `state` object as their first\n     * argument, as well as other more specific arguments described below.\n     *\n     * @constructor\n     * @memberof    mixitup.Config\n     * @name        callbacks\n     * @namespace\n     * @public\n     * @since       2.0.0\n     */\n\n    mixitup.ConfigCallbacks = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A callback function invoked immediately after any MixItUp operation is requested\n         * and before animations have begun.\n         *\n         * A second `futureState` argument is passed to the function which represents the final\n         * state of the mixer once the requested operation has completed.\n         *\n         * @example <caption>Example: Adding an `onMixStart` callback function</caption>\n         * var mixer = mixitup(containerEl, {\n         *     callbacks: {\n         *         onMixStart: function(state, futureState) {\n         *              console.log('Starting operation...');\n         *         }\n         *     }\n         * });\n         *\n         * @name        onMixStart\n         * @memberof    mixitup.Config.callbacks\n         * @instance\n         * @type        {function}\n         * @default     null\n         */\n\n        this.onMixStart = null;\n\n        /**\n         * A callback function invoked when a MixItUp operation is requested while another\n         * operation is in progress, and the animation queue is full, or queueing\n         * is disabled.\n         *\n         * @example <caption>Example: Adding an `onMixBusy` callback function</caption>\n         * var mixer = mixitup(containerEl, {\n         *     callbacks: {\n         *         onMixBusy: function(state) {\n         *              console.log('Mixer busy');\n         *         }\n         *     }\n         * });\n         *\n         * @name        onMixBusy\n         * @memberof    mixitup.Config.callbacks\n         * @instance\n         * @type        {function}\n         * @default     null\n         */\n\n        this.onMixBusy  = null;\n\n        /**\n         * A callback function invoked after any MixItUp operation has completed, and the\n         * state has been updated.\n         *\n         * @example <caption>Example: Adding an `onMixEnd` callback function</caption>\n         * var mixer = mixitup(containerEl, {\n         *     callbacks: {\n         *         onMixEnd: function(state) {\n         *              console.log('Operation complete');\n         *         }\n         *     }\n         * });\n         *\n         * @name        onMixEnd\n         * @memberof    mixitup.Config.callbacks\n         * @instance\n         * @type        {function}\n         * @default     null\n         */\n\n        this.onMixEnd   = null;\n\n        /**\n         * A callback function invoked whenever an operation \"fails\", i.e. no targets\n         * could be found matching the requested filter.\n         *\n         * @example <caption>Example: Adding an `onMixFail` callback function</caption>\n         * var mixer = mixitup(containerEl, {\n         *     callbacks: {\n         *         onMixFail: function(state) {\n         *              console.log('No items could be found matching the requested filter');\n         *         }\n         *     }\n         * });\n         *\n         * @name        onMixFail\n         * @memberof    mixitup.Config.callbacks\n         * @instance\n         * @type        {function}\n         * @default     null\n         */\n\n        this.onMixFail  = null;\n\n        /**\n         * A callback function invoked whenever a MixItUp control is clicked, and before its\n         * respective operation is requested.\n         *\n         * The clicked element is assigned to the `this` keyword within the function. The original\n         * click event is passed to the function as the second argument, which can be useful if\n         * using `<a>` tags as controls where the default behavior needs to be prevented.\n         *\n         * Returning `false` from the callback will prevent the control click from triggering\n         * an operation.\n         *\n         * @example <caption>Example 1: Adding an `onMixClick` callback function</caption>\n         * var mixer = mixitup(containerEl, {\n         *     callbacks: {\n         *         onMixClick: function(state, originalEvent) {\n         *              console.log('The control \"' + this.innerText + '\" was clicked');\n         *         }\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Using `onMixClick` to manipulate the original click event</caption>\n         * var mixer = mixitup(containerEl, {\n         *     callbacks: {\n         *         onMixClick: function(state, originalEvent) {\n         *              // Prevent original click event from bubbling up:\n         *              originalEvent.stopPropagation();\n         *\n         *              // Prevent default behavior of clicked element:\n         *              originalEvent.preventDefault();\n         *         }\n         *     }\n         * });\n         *\n         * @example <caption>Example 3: Using `onMixClick` to conditionally cancel operations</caption>\n         * var mixer = mixitup(containerEl, {\n         *     callbacks: {\n         *         onMixClick: function(state, originalEvent) {\n         *              // Perform some conditional check:\n         *\n         *              if (myApp.isLoading) {\n         *                  // By returning false, we can prevent the control click from triggering an operation.\n         *\n         *                  return false;\n         *              }\n         *         }\n         *     }\n         * });\n         *\n         * @name        onMixClick\n         * @memberof    mixitup.Config.callbacks\n         * @instance\n         * @type        {function}\n         * @default     null\n         */\n\n        this.onMixClick = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigCallbacks);\n\n    mixitup.ConfigCallbacks.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigCallbacks.prototype.constructor = mixitup.ConfigCallbacks;\n\n    /**\n     * A group of properties relating to clickable control elements.\n     *\n     * @constructor\n     * @memberof    mixitup.Config\n     * @name        controls\n     * @namespace\n     * @public\n     * @since       2.0.0\n     */\n\n    mixitup.ConfigControls = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A boolean dictating whether or not controls should be enabled for the mixer instance.\n         *\n         * If `true` (default behavior), MixItUp will search the DOM for any clickable elements with\n         * `data-filter`, `data-sort` or `data-toggle` attributes, and bind them for click events.\n         *\n         * If `false`, no click handlers will be bound, and all functionality must therefore be performed\n         * via the mixer's API methods.\n         *\n         * If you do not intend to use the default controls, setting this property to `false` will\n         * marginally improve the startup time of your mixer instance, and will also prevent any other active\n         * mixer instances in the DOM which are bound to controls from controlling the instance.\n         *\n         * @example <caption>Example: Disabling controls</caption>\n         * var mixer = mixitup(containerEl, {\n         *     controls: {\n         *         enable: false\n         *     }\n         * });\n         *\n         * // With the default controls disabled, we can only control\n         * // the mixer via its API methods, e.g.:\n         *\n         * mixer.filter('.cat-1');\n         *\n         * @name        enable\n         * @memberof    mixitup.Config.controls\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.enable = true;\n\n        /**\n         * A boolean dictating whether or not to use event delegation when binding click events\n         * to the default controls.\n         *\n         * If `false` (default behavior), each control button in the DOM will be found and\n         * individually bound when a mixer is instantiated, with their corresponding actions\n         * cached for performance.\n         *\n         * If `true`, a single click handler will be applied to the `window` (or container element - see\n         * `config.controls.scope`), and any click events triggered by elements with `data-filter`,\n         * `data-sort` or `data-toggle` attributes present will be handled as they propagate upwards.\n         *\n         * If you require a user interface where control buttons may be added, removed, or changed during the\n         * lifetime of a mixer, `controls.live` should be set to `true`. There is a marginal but unavoidable\n         * performance deficit when using live controls, as the value of each control button must be read\n         * from the DOM in real time once the click event has propagated.\n         *\n         * @example <caption>Example: Setting live controls</caption>\n         * var mixer = mixitup(containerEl, {\n         *     controls: {\n         *         live: true\n         *     }\n         * });\n         *\n         * // Control buttons can now be added, remove and changed without breaking\n         * // the mixer's UI\n         *\n         * @name        live\n         * @memberof    mixitup.Config.controls\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.live = false;\n\n        /**\n         * A string dictating the \"scope\" to use when binding or querying the default controls. The available\n         * values are `'global'` or `'local'`.\n         *\n         * When set to `'global'` (default behavior), MixItUp will query the entire document for control buttons\n         * to bind, or delegate click events from (see `config.controls.live`).\n         *\n         * When set to `'local'`, MixItUp will only query (or bind click events to) its own container element.\n         * This may be desireable if you require multiple active mixer instances within the same document, with\n         * controls that would otherwise intefere with each other if scoped globally.\n         *\n         * Conversely, if you wish to control multiple instances with a single UI, you would create one\n         * set of controls and keep the controls scope of each mixer set to `global`.\n         *\n         * @example <caption>Example: Setting 'local' scoped controls</caption>\n         * var mixerOne = mixitup(containerOne, {\n         *     controls: {\n         *         scope: 'local'\n         *     }\n         * });\n         *\n         * var mixerTwo = mixitup(containerTwo, {\n         *     controls: {\n         *         scope: 'local'\n         *     }\n         * });\n         *\n         * // Both mixers can now exist within the same document with\n         * // isolated controls placed within their container elements.\n         *\n         * @name        scope\n         * @memberof    mixitup.Config.controls\n         * @instance\n         * @type        {string}\n         * @default     'global'\n         */\n\n        this.scope = 'global'; // enum: ['local' ,'global']\n\n        /**\n         * A string dictating the type of logic to apply when concatenating the filter selectors of\n         * active toggle buttons (i.e. any clickable element with a `data-toggle` attribute).\n         *\n         * If set to `'or'` (default behavior), selectors will be concatenated together as\n         * a comma-seperated list. For example:\n         *\n         * `'.cat-1, .cat-2'` (shows any elements matching `'.cat-1'` OR `'.cat-2'`)\n         *\n         * If set to `'and'`, selectors will be directly concatenated together. For example:\n         *\n         * `'.cat-1.cat-2'` (shows any elements which match both `'.cat-1'` AND `'.cat-2'`)\n         *\n         * @example <caption>Example: Setting \"and\" toggle logic</caption>\n         * var mixer = mixitup(containerEl, {\n         *     controls: {\n         *         toggleLogic: 'and'\n         *     }\n         * });\n         *\n         * @name        toggleLogic\n         * @memberof    mixitup.Config.controls\n         * @instance\n         * @type        {string}\n         * @default     'or'\n         */\n\n        this.toggleLogic = 'or'; // enum: ['or', 'and']\n\n        /**\n         * A string dictating the filter behavior when all toggles are inactive.\n         *\n         * When set to `'all'` (default behavior), *all* targets will be shown by default\n         * when no toggles are active, or at the moment all active toggles are toggled off.\n         *\n         * When set to `'none'`, no targets will be shown by default when no toggles are\n         * active, or at the moment all active toggles are toggled off.\n         *\n         * @example <caption>Example 1: Setting the default toggle behavior to `'all'`</caption>\n         * var mixer = mixitup(containerEl, {\n         *     controls: {\n         *         toggleDefault: 'all'\n         *     }\n         * });\n         *\n         * mixer.toggleOn('.cat-2')\n         *     .then(function() {\n         *         // Deactivate all active toggles\n         *\n         *         return mixer.toggleOff('.cat-2')\n         *     })\n         *     .then(function(state) {\n         *          console.log(state.activeFilter.selector); // 'all'\n         *          console.log(state.totalShow); // 12\n         *     });\n         *\n         * @example <caption>Example 2: Setting the default toggle behavior to `'none'`</caption>\n         * var mixer = mixitup(containerEl, {\n         *     controls: {\n         *         toggleDefault: 'none'\n         *     }\n         * });\n         *\n         * mixer.toggleOn('.cat-2')\n         *     .then(function() {\n         *         // Deactivate all active toggles\n         *\n         *         return mixer.toggleOff('.cat-2')\n         *     })\n         *     .then(function(state) {\n         *          console.log(state.activeFilter.selector); // 'none'\n         *          console.log(state.totalShow); // 0\n         *     });\n         *\n         * @name        toggleDefault\n         * @memberof    mixitup.Config.controls\n         * @instance\n         * @type        {string}\n         * @default     'all'\n         */\n\n        this.toggleDefault = 'all'; // enum: ['all', 'none']\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigControls);\n\n    mixitup.ConfigControls.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigControls.prototype.constructor = mixitup.ConfigControls;\n\n    /**\n     * A group of properties defining the output and structure of class names programmatically\n     * added to controls and containers to reflect the state of the mixer.\n     *\n     * Most commonly, class names are added to controls by MixItUp to indicate that\n     * the control is active so that it can be styled accordingly - `'mixitup-control-active'` by default.\n     *\n     * Using a \"BEM\" like structure, each classname is broken into the three parts:\n     * a block namespace (`'mixitup'`), an element name (e.g. `'control'`), and an optional modifier\n     * name (e.g. `'active'`) reflecting the state of the element.\n     *\n     * By default, each part of the classname is concatenated together using single hyphens as\n     * delineators, but this can be easily customised to match the naming convention and style of\n     * your project.\n     *\n     * @constructor\n     * @memberof    mixitup.Config\n     * @name        classNames\n     * @namespace\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.ConfigClassNames = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * The \"block\" portion, or top-level namespace added to the start of any class names created by MixItUp.\n         *\n         * @example <caption>Example 1: changing the `config.classNames.block` value</caption>\n         * var mixer = mixitup(containerEl, {\n         *     classNames: {\n         *         block: 'portfolio'\n         *     }\n         * });\n         *\n         * // Active control output: \"portfolio-control-active\"\n         *\n         * @example <caption>Example 2: Removing `config.classNames.block`</caption>\n         * var mixer = mixitup(containerEl, {\n         *     classNames: {\n         *         block: ''\n         *     }\n         * });\n         *\n         * // Active control output: \"control-active\"\n         *\n         * @name        block\n         * @memberof    mixitup.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'mixitup'\n         */\n\n        this.block = 'mixitup';\n\n        /**\n         * The \"element\" portion of the class name added to container.\n         *\n         * @name        elementContainer\n         * @memberof    mixitup.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'container'\n         */\n\n        this.elementContainer = 'container';\n\n        /**\n         * The \"element\" portion of the class name added to filter controls.\n         *\n         * By default, all filter, sort, multimix and toggle controls take the same element value of `'control'`, but\n         * each type's element value can be individually overwritten to match the unique classNames of your controls as needed.\n         *\n         * @example <caption>Example 1: changing the `config.classNames.elementFilter` value</caption>\n         * var mixer = mixitup(containerEl, {\n         *     classNames: {\n         *         elementFilter: 'filter'\n         *     }\n         * });\n         *\n         * // Active filter output: \"mixitup-filter-active\"\n         *\n         * @example <caption>Example 2: changing the `config.classNames.block` and `config.classNames.elementFilter` values</caption>\n         * var mixer = mixitup(containerEl, {\n         *     classNames: {\n         *         block: 'portfolio',\n         *         elementFilter: 'filter'\n         *     }\n         * });\n         *\n         * // Active filter output: \"portfolio-filter-active\"\n         *\n         * @name        elementFilter\n         * @memberof    mixitup.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'control'\n         */\n\n        this.elementFilter = 'control';\n\n        /**\n         * The \"element\" portion of the class name added to sort controls.\n         *\n         * By default, all filter, sort, multimix and toggle controls take the same element value of `'control'`, but\n         * each type's element value can be individually overwritten to match the unique classNames of your controls as needed.\n         *\n         * @example <caption>Example 1: changing the `config.classNames.elementSort` value</caption>\n         * var mixer = mixitup(containerEl, {\n         *     classNames: {\n         *         elementSort: 'sort'\n         *     }\n         * });\n         *\n         * // Active sort output: \"mixitup-sort-active\"\n         *\n         * @example <caption>Example 2: changing the `config.classNames.block` and `config.classNames.elementSort` values</caption>\n         * var mixer = mixitup(containerEl, {\n         *     classNames: {\n         *         block: 'portfolio',\n         *         elementSort: 'sort'\n         *     }\n         * });\n         *\n         * // Active sort output: \"portfolio-sort-active\"\n         *\n         * @name        elementSort\n         * @memberof    mixitup.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'control'\n         */\n\n        this.elementSort = 'control';\n\n        /**\n         * The \"element\" portion of the class name added to multimix controls.\n         *\n         * By default, all filter, sort, multimix and toggle controls take the same element value of `'control'`, but\n         * each type's element value can be individually overwritten to match the unique classNames of your controls as needed.\n         *\n         * @example <caption>Example 1: changing the `config.classNames.elementMultimix` value</caption>\n         * var mixer = mixitup(containerEl, {\n         *     classNames: {\n         *         elementMultimix: 'multimix'\n         *     }\n         * });\n         *\n         * // Active multimix output: \"mixitup-multimix-active\"\n         *\n         * @example <caption>Example 2: changing the `config.classNames.block` and `config.classNames.elementMultimix` values</caption>\n         * var mixer = mixitup(containerEl, {\n         *     classNames: {\n         *         block: 'portfolio',\n         *         elementSort: 'multimix'\n         *     }\n         * });\n         *\n         * // Active multimix output: \"portfolio-multimix-active\"\n         *\n         * @name        elementMultimix\n         * @memberof    mixitup.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'control'\n         */\n\n        this.elementMultimix = 'control';\n\n        /**\n         * The \"element\" portion of the class name added to toggle controls.\n         *\n         * By default, all filter, sort, multimix and toggle controls take the same element value of `'control'`, but\n         * each type's element value can be individually overwritten to match the unique classNames of your controls as needed.\n         *\n         * @example <caption>Example 1: changing the `config.classNames.elementToggle` value</caption>\n         * var mixer = mixitup(containerEl, {\n         *     classNames: {\n         *         elementToggle: 'toggle'\n         *     }\n         * });\n         *\n         * // Active toggle output: \"mixitup-toggle-active\"\n         *\n         * @example <caption>Example 2: changing the `config.classNames.block` and `config.classNames.elementToggle` values</caption>\n         * var mixer = mixitup(containerEl, {\n         *     classNames: {\n         *         block: 'portfolio',\n         *         elementToggle: 'toggle'\n         *     }\n         * });\n         *\n         * // Active toggle output: \"portfolio-toggle-active\"\n         *\n         * @name        elementToggle\n         * @memberof    mixitup.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'control'\n         */\n\n        this.elementToggle = 'control';\n\n        /**\n         * The \"modifier\" portion of the class name added to active controls.\n         * @name        modifierActive\n         * @memberof    mixitup.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'active'\n         */\n\n        this.modifierActive = 'active';\n\n        /**\n         * The \"modifier\" portion of the class name added to disabled controls.\n         *\n         * @name        modifierDisabled\n         * @memberof    mixitup.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'disabled'\n         */\n\n        this.modifierDisabled = 'disabled';\n\n        /**\n         * The \"modifier\" portion of the class name added to the container when in a \"failed\" state.\n         *\n         * @name        modifierFailed\n         * @memberof    mixitup.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'failed'\n         */\n\n        this.modifierFailed = 'failed';\n\n        /**\n         * The delineator used between the \"block\" and \"element\" portions of any class name added by MixItUp.\n         *\n         * If the block portion is ommited by setting it to an empty string, no delineator will be added.\n         *\n         * @example <caption>Example: changing the delineator to match BEM convention</caption>\n         * var mixer = mixitup(containerEl, {\n         *     classNames: {\n         *         delineatorElement: '__'\n         *     }\n         * });\n         *\n         * // example active control output: \"mixitup__control-active\"\n         *\n         * @name        delineatorElement\n         * @memberof    mixitup.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     '-'\n         */\n\n        this.delineatorElement = '-';\n\n        /**\n         * The delineator used between the \"element\" and \"modifier\" portions of any class name added by MixItUp.\n         *\n         * If the element portion is ommited by setting it to an empty string, no delineator will be added.\n         *\n         * @example <caption>Example: changing both delineators to match BEM convention</caption>\n         * var mixer = mixitup(containerEl, {\n         *     classNames: {\n         *         delineatorElement: '__'\n         *         delineatorModifier: '--'\n         *     }\n         * });\n         *\n         * // Active control output: \"mixitup__control--active\"\n         *\n         * @name        delineatorModifier\n         * @memberof    mixitup.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     '-'\n         */\n\n        this.delineatorModifier = '-';\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigClassNames);\n\n    mixitup.ConfigClassNames.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigClassNames.prototype.constructor = mixitup.ConfigClassNames;\n\n    /**\n     * A group of properties relating to MixItUp's dataset API.\n     *\n     * @constructor\n     * @memberof    mixitup.Config\n     * @name        data\n     * @namespace\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.ConfigData = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A string specifying the name of the key containing your data model's unique\n         * identifier (UID). To use the dataset API, a UID key must be specified and\n         * be present and unique on all objects in the dataset you provide to MixItUp.\n         *\n         * For example, if your dataset is made up of MongoDB documents, the UID\n         * key would be `'id'` or `'_id'`.\n         *\n         * @example <caption>Example: Setting the UID to `'id'`</caption>\n         * var mixer = mixitup(containerEl, {\n         *     data: {\n         *         uidKey: 'id'\n         *     }\n         * });\n         *\n         * @name        uidKey\n         * @memberof    mixitup.Config.data\n         * @instance\n         * @type        {string}\n         * @default     ''\n         */\n\n        this.uidKey = '';\n\n        /**\n         * A boolean dictating whether or not MixItUp should \"dirty check\" each object in\n         * your dataset for changes whenever `.dataset()` is called, and re-render any targets\n         * for which a change is found.\n         *\n         * Depending on the complexity of your data model, dirty checking can be expensive\n         * and is therefore disabled by default.\n         *\n         * NB: For changes to be detected, a new immutable instance of the edited model must be\n         * provided to mixitup, rather than manipulating properties on the existing instance.\n         * If your changes are a result of a DB write and read, you will most likely be calling\n         * `.dataset()` with a clean set of objects each time, so this will not be an issue.\n         *\n         * @example <caption>Example: Enabling dirty checking</caption>\n         *\n         * var myDataset = [\n         *     {\n         *         id: 0,\n         *         title: \"Blog Post Title 0\"\n         *         ...\n         *     },\n         *     {\n         *         id: 1,\n         *         title: \"Blog Post Title 1\"\n         *         ...\n         *     }\n         * ];\n         *\n         * // Instantiate a mixer with a pre-loaded dataset, and a target renderer\n         * // function defined\n         *\n         * var mixer = mixitup(containerEl, {\n         *     data: {\n         *         uidKey: 'id',\n         *         dirtyCheck: true\n         *     },\n         *     load: {\n         *         dataset: myDataset\n         *     },\n         *     render: {\n         *         target: function() { ... }\n         *     }\n         * });\n         *\n         * // For illustration, we will clone and edit the second object in the dataset.\n         * // NB: this would typically be done server-side in response to a DB update,\n         * and then re-queried via an API.\n         *\n         * myDataset[1] = Object.assign({}, myDataset[1]);\n         *\n         * myDataset[1].title = 'Blog Post Title 11';\n         *\n         * mixer.dataset(myDataset)\n         *    .then(function() {\n         *        // the target with ID \"1\", will be re-rendered reflecting its new title\n         *    });\n         *\n         * @name        dirtyCheck\n         * @memberof    mixitup.Config.data\n         * @instance\n         * @type        {boolean}\n         * @default     false\n         */\n\n        this.dirtyCheck = false;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigData);\n\n    mixitup.ConfigData.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigData.prototype.constructor = mixitup.ConfigData;\n\n    /**\n     * A group of properties allowing the toggling of various debug features.\n     *\n     * @constructor\n     * @memberof    mixitup.Config\n     * @name        debug\n     * @namespace\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.ConfigDebug = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A boolean dictating whether or not the mixer instance returned by the\n         * `mixitup()` factory function should expose private properties and methods.\n         *\n         * By default, mixer instances only expose their public API, but enabling\n         * debug mode will give you access to various mixer internals which may aid\n         * in debugging, or the authoring of extensions.\n         *\n         * @example <caption>Example: Enabling debug mode</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     debug: {\n         *         enable: true\n         *     }\n         * });\n         *\n         * // Private properties and methods will now be visible on the mixer instance:\n         *\n         * console.log(mixer);\n         *\n         * @name        enable\n         * @memberof    mixitup.Config.debug\n         * @instance\n         * @type        {boolean}\n         * @default     false\n         */\n\n        this.enable = false;\n\n        /**\n         * A boolean dictating whether or not warnings should be shown when various\n         * common gotchas occur.\n         *\n         * Warnings are intended to provide insights during development when something\n         * occurs that is not a fatal, but may indicate an issue with your integration,\n         * and are therefore turned on by default. However, you may wish to disable\n         * them in production.\n         *\n         * @example <caption>Example 1: Disabling warnings</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     debug: {\n         *         showWarnings: false\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Disabling warnings based on environment</caption>\n         *\n         * var showWarnings = myAppConfig.environment === 'development' ? true : false;\n         *\n         * var mixer = mixitup(containerEl, {\n         *     debug: {\n         *         showWarnings: showWarnings\n         *     }\n         * });\n         *\n         * @name        showWarnings\n         * @memberof    mixitup.Config.debug\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.showWarnings = true;\n\n        /**\n         * Used for server-side testing only.\n         *\n         * @private\n         * @name        fauxAsync\n         * @memberof    mixitup.Config.debug\n         * @instance\n         * @type        {boolean}\n         * @default     false\n         */\n\n        this.fauxAsync = false;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigDebug);\n\n    mixitup.ConfigDebug.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigDebug.prototype.constructor = mixitup.ConfigDebug;\n\n    /**\n     * A group of properties relating to the layout of the container.\n     *\n     * @constructor\n     * @memberof    mixitup.Config\n     * @name        layout\n     * @namespace\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.ConfigLayout = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A boolean dictating whether or not mixitup should query all descendants\n         * of the container for targets, or only immediate children.\n         *\n         * By default, mixitup will query all descendants matching the\n         * `selectors.target` selector when indexing targets upon instantiation.\n         * This allows for targets to be nested inside a sub-container which is\n         * useful when ring-fencing targets from locally scoped controls in your\n         * markup (see `controls.scope`).\n         *\n         * However, if you are building a more complex UI requiring the nesting\n         * of mixers within mixers, you will most likely want to limit targets to\n         * immediate children of the container by setting this property to `false`.\n         *\n         * @example <caption>Example: Restricting targets to immediate children</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     layout: {\n         *         allowNestedTargets: false\n         *     }\n         * });\n         *\n         * @name        allowNestedTargets\n         * @memberof    mixitup.Config.layout\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.allowNestedTargets = true;\n\n        /**\n         * A string specifying an optional class name to apply to the container when in\n         * its default state.\n         *\n         * By changing this class name or adding a class name to the container via the\n         * `.changeLayout()` API method, the CSS layout of the container can be changed,\n         * and MixItUp will attemp to gracefully animate the container and its targets\n         * between states.\n         *\n         * @example <caption>Example 1: Specifying a container class name</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     layout: {\n         *         containerClassName: 'grid'\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Changing the default class name with `.changeLayout()`</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     layout: {\n         *         containerClassName: 'grid'\n         *     }\n         * });\n         *\n         * mixer.changeLayout('list')\n         *     .then(function(state) {\n         *          console.log(state.activeContainerClass); // \"list\"\n         *     });\n         *\n         * @name        containerClassName\n         * @memberof    mixitup.Config.layout\n         * @instance\n         * @type        {string}\n         * @default     ''\n         */\n\n        this.containerClassName = '';\n\n        /**\n         * A reference to a non-target sibling element after which to insert targets\n         * when there are no targets in the container.\n         *\n         * @example <caption>Example: Setting a `siblingBefore` reference element</caption>\n         *\n         * var addButton = containerEl.querySelector('button');\n         *\n         * var mixer = mixitup(containerEl, {\n         *     layout: {\n         *         siblingBefore: addButton\n         *     }\n         * });\n         *\n         * @name        siblingBefore\n         * @memberof    mixitup.Config.layout\n         * @instance\n         * @type        {HTMLElement}\n         * @default     null\n         */\n\n        this.siblingBefore = null;\n\n        /**\n         * A reference to a non-target sibling element before which to insert targets\n         * when there are no targets in the container.\n         *\n         * @example <caption>Example: Setting an `siblingAfter` reference element</caption>\n         *\n         * var gap = containerEl.querySelector('.gap');\n         *\n         * var mixer = mixitup(containerEl, {\n         *     layout: {\n         *         siblingAfter: gap\n         *     }\n         * });\n         *\n         * @name        siblingAfter\n         * @memberof    mixitup.Config.layout\n         * @instance\n         * @type        {HTMLElement}\n         * @default     null\n         */\n\n        this.siblingAfter = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigLayout);\n\n    mixitup.ConfigLayout.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigLayout.prototype.constructor = mixitup.ConfigLayout;\n\n    /**\n     * A group of properties defining the initial state of the mixer on load (instantiation).\n     *\n     * @constructor\n     * @memberof    mixitup.Config\n     * @name        load\n     * @namespace\n     * @public\n     * @since       2.0.0\n     */\n\n    mixitup.ConfigLoad = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A string defining any filtering to be statically applied to the mixer on load.\n         * As per the `.filter()` API, this can be any valid selector string, or the\n         * values `'all'` or `'none'`.\n         *\n         * @example <caption>Example 1: Defining an initial filter selector to be applied on load</caption>\n         *\n         * // The mixer will show only those targets matching '.category-a' on load.\n         *\n         * var mixer = mixitup(containerEl, {\n         *     load: {\n         *         filter: '.category-a'\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Hiding all targets on load</caption>\n         *\n         * // The mixer will show hide all targets on load.\n         *\n         * var mixer = mixitup(containerEl, {\n         *     load: {\n         *         filter: 'none'\n         *     }\n         * });\n         *\n         * @name        filter\n         * @memberof    mixitup.Config.load\n         * @instance\n         * @type        {string}\n         * @default     'all'\n         */\n\n        this.filter = 'all';\n\n        /**\n         * A string defining any sorting to be statically applied to the mixer on load.\n         * As per the `.sort()` API, this should be a valid \"sort string\" made up of\n         * an attribute to sort by (or `'default'`) followed by an optional sorting\n         * order, or the value `'random'`;\n         *\n         * @example <caption>Example: Defining sorting to be applied on load</caption>\n         *\n         * // The mixer will sort the container by the value of the `data-published-date`\n         * // attribute, in descending order.\n         *\n         * var mixer = mixitup(containerEl, {\n         *     load: {\n         *         sort: 'published-date:desc'\n         *     }\n         * });\n         *\n         * @name        sort\n         * @memberof    mixitup.Config.load\n         * @instance\n         * @type        {string}\n         * @default     'default:asc'\n         */\n\n        this.sort = 'default:asc';\n\n        /**\n         * An array of objects representing the underlying data of any pre-rendered targets,\n         * when using the `.dataset()` API.\n         *\n         * NB: If targets are pre-rendered when the mixer is instantiated, this must be set.\n         *\n         * @example <caption>Example: Defining the initial underyling dataset</caption>\n         *\n         * var myDataset = [\n         *     {\n         *         id: 0,\n         *         title: \"Blog Post Title 0\",\n         *         ...\n         *     },\n         *     {\n         *         id: 1,\n         *         title: \"Blog Post Title 1\",\n         *         ...\n         *     }\n         * ];\n         *\n         * var mixer = mixitup(containerEl, {\n         *     data: {\n         *         uidKey: 'id'\n         *     },\n         *     load: {\n         *         dataset: myDataset\n         *     }\n         * });\n         *\n         * @name        dataset\n         * @memberof    mixitup.Config.load\n         * @instance\n         * @type        {Array.<object>}\n         * @default     null\n         */\n\n        this.dataset = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigLoad);\n\n    mixitup.ConfigLoad.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigLoad.prototype.constructor = mixitup.ConfigLoad;\n\n    /**\n     * A group of properties defining the selectors used to query elements within a mixitup container.\n     *\n     * @constructor\n     * @memberof    mixitup.Config\n     * @name        selectors\n     * @namespace\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.ConfigSelectors = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A selector string used to query and index target elements within the container.\n         *\n         * By default, the class selector `'.mix'` is used, but this can be changed to an\n         * attribute or element selector to match the style of your project.\n         *\n         * @example <caption>Example 1: Changing the target selector</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     selectors: {\n         *         target: '.portfolio-item'\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Using an attribute selector as a target selector</caption>\n         *\n         * // The mixer will search for any children with the attribute `data-ref=\"mix\"`\n         *\n         * var mixer = mixitup(containerEl, {\n         *     selectors: {\n         *         target: '[data-ref=\"mix\"]'\n         *     }\n         * });\n         *\n         * @name        target\n         * @memberof    mixitup.Config.selectors\n         * @instance\n         * @type        {string}\n         * @default     '.mix'\n         */\n\n        this.target = '.mix';\n\n        /**\n         * A optional selector string used to add further specificity to the querying of control elements,\n         * in addition to their mandatory data attribute (e.g. `data-filter`, `data-toggle`, `data-sort`).\n         *\n         * This can be used if other elements in your document must contain the above attributes\n         * (e.g. for use in third-party scripts), and would otherwise interfere with MixItUp. Adding\n         * an additional `control` selector of your choice allows MixItUp to restrict event handling\n         * to only those elements matching the defined selector.\n         *\n         * @name        control\n         * @memberof    mixitup.Config.selectors\n         * @instance\n         * @type        {string}\n         * @default     ''\n         *\n         * @example <caption>Example 1: Adding a `selectors.control` selector</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     selectors: {\n         *         control: '.mixitup-control'\n         *     }\n         * });\n         *\n         * // Will not be handled:\n         * // <button data-filter=\".category-a\"></button>\n         *\n         * // Will be handled:\n         * // <button class=\"mixitup-control\" data-filter=\".category-a\"></button>\n         */\n\n        this.control = '';\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigSelectors);\n\n    mixitup.ConfigSelectors.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigSelectors.prototype.constructor = mixitup.ConfigSelectors;\n\n    /**\n     * A group of optional render functions for creating and updating elements.\n     *\n     * All render functions receive a data object, and should return a valid HTML string.\n     *\n     * @constructor\n     * @memberof    mixitup.Config\n     * @name        render\n     * @namespace\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.ConfigRender = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A function returning an HTML string representing a target element, or a reference to a\n         * single DOM element.\n         *\n         * The function is invoked as part of the `.dataset()` API, whenever a new item is added\n         * to the dataset, or an item in the dataset changes (if `dataset.dirtyCheck` is enabled).\n         *\n         * The function receives the relevant dataset item as its first parameter.\n         *\n         * @example <caption>Example 1: Using string concatenation</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     render: {\n         *         target: function(item) {\n         *             return (\n         *                 '&lt;div class=\"mix\"&gt;' +\n         *                     '&lt;h2&gt;' + item.title + '&lt;/h2&gt;' +\n         *                 '&lt;/div&gt;'\n         *             );\n         *         }\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Using an ES2015 template literal</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     render: {\n         *         target: function(item) {\n         *             return (\n         *                 `&lt;div class=\"mix\"&gt;\n         *                     &lt;h2&gt;${item.title}&lt;/h2&gt;\n         *                  &lt;/div&gt;`\n         *             );\n         *         }\n         *     }\n         * });\n         *\n         * @example <caption>Example 3: Using a Handlebars template</caption>\n         *\n         * var targetTemplate = Handlebars.compile('&lt;div class=\"mix\"&gt;&lt;h2&gt;{{title}}&lt;/h2&gt;&lt;/div&gt;');\n         *\n         * var mixer = mixitup(containerEl, {\n         *     render: {\n         *         target: targetTemplate\n         *     }\n         * });\n         *\n         * @example <caption>Example 4: Returning a DOM element</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     render: {\n         *         target: function(item) {\n         *              // Create a single element using your framework's built-in renderer\n         *\n         *              var el = ...\n         *\n         *              return el;\n         *         }\n         *     }\n         * });\n         *\n         * @name        target\n         * @memberof    mixitup.Config.render\n         * @instance\n         * @type        {function}\n         * @default     'null'\n         */\n\n        this.target = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigRender);\n\n    mixitup.ConfigRender.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigRender.prototype.constructor = mixitup.ConfigRender;\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.ConfigTemplates = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigTemplates);\n\n    mixitup.ConfigTemplates.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigTemplates.prototype.constructor = mixitup.ConfigTemplates;\n\n    /**\n     * `mixitup.Config` is an interface used for customising the functionality of a\n     * mixer instance. It is organised into several semantically distinct sub-objects,\n     * each one pertaining to a particular aspect of MixItUp functionality.\n     *\n     * An object literal containing any or all of the available properies,\n     * known as the \"configuration object\", can be passed as the second parameter to\n     * the `mixitup` factory function when creating a mixer instance to customise its\n     * functionality as needed.\n     *\n     * If no configuration object is passed, the mixer instance will take on the default\n     * configuration values detailed below.\n     *\n     * @example <caption>Example 1: Creating and passing the configuration object</caption>\n     * // Create a configuration object with desired values\n     *\n     * var config = {\n     *     animation: {\n     *         enable: false\n     *     },\n     *     selectors: {\n     *         target: '.item'\n     *     }\n     * };\n     *\n     * // Pass the configuration object to the mixitup factory function\n     *\n     * var mixer = mixitup(containerEl, config);\n     *\n     * @example <caption>Example 2: Passing the configuration object inline</caption>\n     * // Typically, the configuration object is passed inline for brevity.\n     *\n     * var mixer = mixitup(containerEl, {\n     *     controls: {\n     *         live: true,\n     *         toggleLogic: 'and'\n     *     }\n     * });\n     *\n     *\n     * @constructor\n     * @memberof    mixitup\n     * @namespace\n     * @public\n     * @since       2.0.0\n     */\n\n    mixitup.Config = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.animation          = new mixitup.ConfigAnimation();\n        this.behavior           = new mixitup.ConfigBehavior();\n        this.callbacks          = new mixitup.ConfigCallbacks();\n        this.controls           = new mixitup.ConfigControls();\n        this.classNames         = new mixitup.ConfigClassNames();\n        this.data               = new mixitup.ConfigData();\n        this.debug              = new mixitup.ConfigDebug();\n        this.layout             = new mixitup.ConfigLayout();\n        this.load               = new mixitup.ConfigLoad();\n        this.selectors          = new mixitup.ConfigSelectors();\n        this.render             = new mixitup.ConfigRender();\n        this.templates          = new mixitup.ConfigTemplates();\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Config);\n\n    mixitup.Config.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.Config.prototype.constructor = mixitup.Config;\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.MixerDom = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.document               = null;\n        this.body                   = null;\n        this.container              = null;\n        this.parent                 = null;\n        this.targets                = [];\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.MixerDom);\n\n    mixitup.MixerDom.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.MixerDom.prototype.constructor = mixitup.MixerDom;\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.UiClassNames = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.base       = '';\n        this.active     = '';\n        this.disabled   = '';\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.UiClassNames);\n\n    mixitup.UiClassNames.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.UiClassNames.prototype.constructor = mixitup.UiClassNames;\n\n    /**\n     * An object into which all arbitrary arguments sent to '.dataset()' are mapped.\n     *\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.CommandDataset = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.dataset = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.CommandDataset);\n\n    mixitup.CommandDataset.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.CommandDataset.prototype.constructor = mixitup.CommandDataset;\n\n    /**\n     * An object into which all arbitrary arguments sent to '.multimix()' are mapped.\n     *\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.CommandMultimix = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.filter       = null;\n        this.sort         = null;\n        this.insert       = null;\n        this.remove       = null;\n        this.changeLayout = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.CommandMultimix);\n\n    mixitup.CommandMultimix.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.CommandMultimix.prototype.constructor = mixitup.CommandMultimix;\n\n    /**\n     * An object into which all arbitrary arguments sent to '.filter()' are mapped.\n     *\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.CommandFilter = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.selector   = '';\n        this.collection = null;\n        this.action     = 'show'; // enum: ['show', 'hide']\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.CommandFilter);\n\n    mixitup.CommandFilter.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.CommandFilter.prototype.constructor = mixitup.CommandFilter;\n\n    /**\n     * An object into which all arbitrary arguments sent to '.sort()' are mapped.\n     *\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.CommandSort = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.sortString = '';\n        this.attribute  = '';\n        this.order      = 'asc';\n        this.collection = null;\n        this.next       = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.CommandSort);\n\n    mixitup.CommandSort.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.CommandSort.prototype.constructor = mixitup.CommandSort;\n\n    /**\n     * An object into which all arbitrary arguments sent to '.insert()' are mapped.\n     *\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.CommandInsert = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.index      = 0;\n        this.collection = [];\n        this.position   = 'before'; // enum: ['before', 'after']\n        this.sibling    = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.CommandInsert);\n\n    mixitup.CommandInsert.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.CommandInsert.prototype.constructor = mixitup.CommandInsert;\n\n    /**\n     * An object into which all arbitrary arguments sent to '.remove()' are mapped.\n     *\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.CommandRemove = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.targets    = [];\n        this.collection = [];\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.CommandRemove);\n\n    mixitup.CommandRemove.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.CommandRemove.prototype.constructor = mixitup.CommandRemove;\n\n    /**\n     * An object into which all arbitrary arguments sent to '.changeLayout()' are mapped.\n     *\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.CommandChangeLayout = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.containerClassName = '';\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.CommandChangeLayout);\n\n    mixitup.CommandChangeLayout.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.CommandChangeLayout.prototype.constructor = mixitup.CommandChangeLayout;\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     * @param       {string}        type\n     * @param       {string}        selector\n     * @param       {boolean}       [live]\n     * @param       {string}        [parent]\n     *     An optional string representing the name of the mixer.dom property containing a reference to a parent element.\n     */\n\n    mixitup.ControlDefinition = function(type, selector, live, parent) {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.type    = type;\n        this.selector  = selector;\n        this.live      = live || false;\n        this.parent    = parent || '';\n\n        this.callActions('afterConstruct');\n\n        h.freeze(this);\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ControlDefinition);\n\n    mixitup.ControlDefinition.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ControlDefinition.prototype.constructor = mixitup.ControlDefinition;\n\n    mixitup.controlDefinitions = [];\n\n    mixitup.controlDefinitions.push(new mixitup.ControlDefinition('multimix', '[data-filter][data-sort]'));\n    mixitup.controlDefinitions.push(new mixitup.ControlDefinition('filter', '[data-filter]'));\n    mixitup.controlDefinitions.push(new mixitup.ControlDefinition('sort', '[data-sort]'));\n    mixitup.controlDefinitions.push(new mixitup.ControlDefinition('toggle', '[data-toggle]'));\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.Control = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.el         = null;\n        this.selector   = '';\n        this.bound      = [];\n        this.pending    = -1;\n        this.type       = '';\n        this.status     = 'inactive'; // enum: ['inactive', 'active', 'disabled', 'live']\n        this.filter     = '';\n        this.sort       = '';\n        this.canDisable = false;\n        this.handler    = null;\n        this.classNames = new mixitup.UiClassNames();\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Control);\n\n    mixitup.Control.prototype = Object.create(mixitup.Base.prototype);\n\n    h.extend(mixitup.Control.prototype,\n    /** @lends mixitup.Control */\n    {\n        constructor: mixitup.Control,\n\n        /**\n         * @private\n         * @param {HTMLElement} el\n         * @param {string}      type\n         * @param {string}      selector\n         */\n\n        init: function(el, type, selector) {\n            var self = this;\n\n            this.callActions('beforeInit', arguments);\n\n            self.el         = el;\n            self.type       = type;\n            self.selector   = selector;\n\n            if (self.selector) {\n                self.status = 'live';\n            } else {\n                self.canDisable = typeof self.el.disable === 'boolean';\n\n                switch (self.type) {\n                    case 'filter':\n                        self.filter = self.el.getAttribute('data-filter');\n\n                        break;\n                    case 'toggle':\n                        self.filter = self.el.getAttribute('data-toggle');\n\n                        break;\n                    case 'sort':\n                        self.sort   = self.el.getAttribute('data-sort');\n\n                        break;\n                    case 'multimix':\n                        self.filter = self.el.getAttribute('data-filter');\n                        self.sort   = self.el.getAttribute('data-sort');\n\n                        break;\n                }\n            }\n\n            self.bindClick();\n\n            mixitup.controls.push(self);\n\n            this.callActions('afterInit', arguments);\n        },\n\n        /**\n         * @private\n         * @param  {mixitup.Mixer} mixer\n         * @return {boolean}\n         */\n\n        isBound: function(mixer) {\n            var self    = this,\n                isBound = false;\n\n            this.callActions('beforeIsBound', arguments);\n\n            isBound = self.bound.indexOf(mixer) > -1;\n\n            return self.callFilters('afterIsBound', isBound, arguments);\n        },\n\n        /**\n         * @private\n         * @param  {mixitup.Mixer} mixer\n         * @return {void}\n         */\n\n        addBinding: function(mixer) {\n            var self = this;\n\n            this.callActions('beforeAddBinding', arguments);\n\n            if (!self.isBound()) {\n                self.bound.push(mixer);\n            }\n\n            this.callActions('afterAddBinding', arguments);\n        },\n\n        /**\n         * @private\n         * @param  {mixitup.Mixer} mixer\n         * @return {void}\n         */\n\n        removeBinding: function(mixer) {\n            var self        = this,\n                removeIndex = -1;\n\n            this.callActions('beforeRemoveBinding', arguments);\n\n            if ((removeIndex = self.bound.indexOf(mixer)) > -1) {\n                self.bound.splice(removeIndex, 1);\n            }\n\n            if (self.bound.length < 1) {\n                // No bindings exist, unbind event click handlers\n\n                self.unbindClick();\n\n                // Remove from `mixitup.controls` list\n\n                removeIndex = mixitup.controls.indexOf(self);\n\n                mixitup.controls.splice(removeIndex, 1);\n\n                if (self.status === 'active') {\n                    self.renderStatus(self.el, 'inactive');\n                }\n            }\n\n            this.callActions('afterRemoveBinding', arguments);\n        },\n\n        /**\n         * @private\n         * @return {void}\n         */\n\n        bindClick: function() {\n            var self = this;\n\n            this.callActions('beforeBindClick', arguments);\n\n            self.handler = function(e) {\n                self.handleClick(e);\n            };\n\n            h.on(self.el, 'click', self.handler);\n\n            this.callActions('afterBindClick', arguments);\n        },\n\n        /**\n         * @private\n         * @return {void}\n         */\n\n        unbindClick: function() {\n            var self = this;\n\n            this.callActions('beforeUnbindClick', arguments);\n\n            h.off(self.el, 'click', self.handler);\n\n            self.handler = null;\n\n            this.callActions('afterUnbindClick', arguments);\n        },\n\n        /**\n         * @private\n         * @param   {MouseEvent} e\n         * @return  {void}\n         */\n\n        handleClick: function(e) {\n            var self        = this,\n                button      = null,\n                mixer       = null,\n                isActive    = false,\n                returnValue = void(0),\n                command     = {},\n                clone       = null,\n                commands    = [],\n                i           = -1;\n\n            this.callActions('beforeHandleClick', arguments);\n\n            this.pending = 0;\n\n            mixer = self.bound[0];\n\n            if (!self.selector) {\n                button = self.el;\n            } else {\n                button = h.closestParent(e.target, mixer.config.selectors.control + self.selector, true, mixer.dom.document);\n            }\n\n            if (!button) {\n                self.callActions('afterHandleClick', arguments);\n\n                return;\n            }\n\n            switch (self.type) {\n                case 'filter':\n                    command.filter = self.filter || button.getAttribute('data-filter');\n\n                    break;\n                case 'sort':\n                    command.sort = self.sort || button.getAttribute('data-sort');\n\n                    break;\n                case 'multimix':\n                    command.filter  = self.filter || button.getAttribute('data-filter');\n                    command.sort    = self.sort || button.getAttribute('data-sort');\n\n                    break;\n                case 'toggle':\n                    command.filter  = self.filter || button.getAttribute('data-toggle');\n\n                    if (self.status === 'live') {\n                        isActive = h.hasClass(button, self.classNames.active);\n                    } else {\n                        isActive = self.status === 'active';\n                    }\n\n                    break;\n            }\n\n            for (i = 0; i < self.bound.length; i++) {\n                // Create a clone of the command for each bound mixer instance\n\n                clone = new mixitup.CommandMultimix();\n\n                h.extend(clone, command);\n\n                commands.push(clone);\n            }\n\n            commands = self.callFilters('commandsHandleClick', commands, arguments);\n\n            self.pending = self.bound.length;\n\n            for (i = 0; mixer = self.bound[i]; i++) {\n                command = commands[i];\n\n                if (!command) {\n                    // An extension may set a command null to indicate that the click should not be handled\n\n                    continue;\n                }\n\n                if (!mixer.lastClicked) {\n                    mixer.lastClicked = button;\n                }\n\n                mixitup.events.fire('mixClick', mixer.dom.container, {\n                    state: mixer.state,\n                    instance: mixer,\n                    originalEvent: e,\n                    control: mixer.lastClicked\n                }, mixer.dom.document);\n\n                if (typeof mixer.config.callbacks.onMixClick === 'function') {\n                    returnValue = mixer.config.callbacks.onMixClick.call(mixer.lastClicked, mixer.state, e, mixer);\n\n                    if (returnValue === false) {\n                        // User has returned `false` from the callback, so do not handle click\n\n                        continue;\n                    }\n                }\n\n                if (self.type === 'toggle') {\n                    isActive ? mixer.toggleOff(command.filter) : mixer.toggleOn(command.filter);\n                } else {\n                    mixer.multimix(command);\n                }\n            }\n\n            this.callActions('afterHandleClick', arguments);\n        },\n\n        /**\n         * @param   {object}          command\n         * @param   {Array<string>}   toggleArray\n         * @return  {void}\n         */\n\n        update: function(command, toggleArray) {\n            var self    = this,\n                actions = new mixitup.CommandMultimix();\n\n            self.callActions('beforeUpdate', arguments);\n\n            self.pending--;\n\n            self.pending = Math.max(0, self.pending);\n\n            if (self.pending > 0) return;\n\n            if (self.status === 'live') {\n                // Live control (status unknown)\n\n                self.updateLive(command, toggleArray);\n            } else {\n                // Static control\n\n                actions.sort    = self.sort;\n                actions.filter  = self.filter;\n\n                self.callFilters('actionsUpdate', actions, arguments);\n\n                self.parseStatusChange(self.el, command, actions, toggleArray);\n            }\n\n            self.callActions('afterUpdate', arguments);\n        },\n\n        /**\n         * @param   {mixitup.CommandMultimix} command\n         * @param   {Array<string>}           toggleArray\n         * @return  {void}\n         */\n\n        updateLive: function(command, toggleArray) {\n            var self            = this,\n                controlButtons  = null,\n                actions         = null,\n                button          = null,\n                i               = -1;\n\n            self.callActions('beforeUpdateLive', arguments);\n\n            if (!self.el) return;\n\n            controlButtons = self.el.querySelectorAll(self.selector);\n\n            for (i = 0; button = controlButtons[i]; i++) {\n                actions = new mixitup.CommandMultimix();\n\n                switch (self.type) {\n                    case 'filter':\n                        actions.filter = button.getAttribute('data-filter');\n\n                        break;\n                    case 'sort':\n                        actions.sort = button.getAttribute('data-sort');\n\n                        break;\n                    case 'multimix':\n                        actions.filter  = button.getAttribute('data-filter');\n                        actions.sort    = button.getAttribute('data-sort');\n\n                        break;\n                    case 'toggle':\n                        actions.filter  = button.getAttribute('data-toggle');\n\n                        break;\n                }\n\n                actions = self.callFilters('actionsUpdateLive', actions, arguments);\n\n                self.parseStatusChange(button, command, actions, toggleArray);\n            }\n\n            self.callActions('afterUpdateLive', arguments);\n        },\n\n        /**\n         * @param   {HTMLElement}             button\n         * @param   {mixitup.CommandMultimix} command\n         * @param   {mixitup.CommandMultimix} actions\n         * @param   {Array<string>}           toggleArray\n         * @return  {void}\n         */\n\n        parseStatusChange: function(button, command, actions, toggleArray) {\n            var self    = this,\n                alias   = '',\n                toggle  = '',\n                i       = -1;\n\n            self.callActions('beforeParseStatusChange', arguments);\n\n            switch (self.type) {\n                case 'filter':\n                    if (command.filter === actions.filter) {\n                        self.renderStatus(button, 'active');\n                    } else {\n                        self.renderStatus(button, 'inactive');\n                    }\n\n                    break;\n                case 'multimix':\n                    if (command.sort === actions.sort && command.filter === actions.filter) {\n                        self.renderStatus(button, 'active');\n                    } else {\n                        self.renderStatus(button, 'inactive');\n                    }\n\n                    break;\n                case 'sort':\n                    if (command.sort.match(/:asc/g)) {\n                        alias = command.sort.replace(/:asc/g, '');\n                    }\n\n                    if (command.sort === actions.sort || alias === actions.sort) {\n                        self.renderStatus(button, 'active');\n                    } else {\n                        self.renderStatus(button, 'inactive');\n                    }\n\n                    break;\n                case 'toggle':\n                    if (toggleArray.length < 1) self.renderStatus(button, 'inactive');\n\n                    if (command.filter === actions.filter) {\n                        self.renderStatus(button, 'active');\n                    }\n\n                    for (i = 0; i < toggleArray.length; i++) {\n                        toggle = toggleArray[i];\n\n                        if (toggle === actions.filter) {\n                            // Button matches one active toggle\n\n                            self.renderStatus(button, 'active');\n\n                            break;\n                        }\n\n                        self.renderStatus(button, 'inactive');\n                    }\n\n                    break;\n            }\n\n            self.callActions('afterParseStatusChange', arguments);\n        },\n\n        /**\n         * @param   {HTMLElement}   button\n         * @param   {string}        status\n         * @return  {void}\n         */\n\n        renderStatus: function(button, status) {\n            var self = this;\n\n            self.callActions('beforeRenderStatus', arguments);\n\n            switch (status) {\n                case 'active':\n                    h.addClass(button, self.classNames.active);\n                    h.removeClass(button, self.classNames.disabled);\n\n                    if (self.canDisable) self.el.disabled = false;\n\n                    break;\n                case 'inactive':\n                    h.removeClass(button, self.classNames.active);\n                    h.removeClass(button, self.classNames.disabled);\n\n                    if (self.canDisable) self.el.disabled = false;\n\n                    break;\n                case 'disabled':\n                    if (self.canDisable) self.el.disabled = true;\n\n                    h.addClass(button, self.classNames.disabled);\n                    h.removeClass(button, self.classNames.active);\n\n                    break;\n            }\n\n            if (self.status !== 'live') {\n                // Update the control's status propery if not live\n\n                self.status = status;\n            }\n\n            self.callActions('afterRenderStatus', arguments);\n        }\n    });\n\n    mixitup.controls = [];\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.StyleData = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.x              = 0;\n        this.y              = 0;\n        this.top            = 0;\n        this.right          = 0;\n        this.bottom         = 0;\n        this.left           = 0;\n        this.width          = 0;\n        this.height         = 0;\n        this.marginRight    = 0;\n        this.marginBottom   = 0;\n        this.opacity        = 0;\n        this.scale          = new mixitup.TransformData();\n        this.translateX     = new mixitup.TransformData();\n        this.translateY     = new mixitup.TransformData();\n        this.translateZ     = new mixitup.TransformData();\n        this.rotateX        = new mixitup.TransformData();\n        this.rotateY        = new mixitup.TransformData();\n        this.rotateZ        = new mixitup.TransformData();\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.StyleData);\n\n    mixitup.StyleData.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.StyleData.prototype.constructor = mixitup.StyleData;\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.TransformData = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.value  = 0;\n        this.unit   = '';\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.TransformData);\n\n    mixitup.TransformData.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.TransformData.prototype.constructor = mixitup.TransformData;\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.TransformDefaults = function() {\n        mixitup.StyleData.apply(this);\n\n        this.callActions('beforeConstruct');\n\n        this.scale.value        = 0.01;\n        this.scale.unit         = '';\n\n        this.translateX.value   = 20;\n        this.translateX.unit    = 'px';\n\n        this.translateY.value   = 20;\n        this.translateY.unit    = 'px';\n\n        this.translateZ.value   = 20;\n        this.translateZ.unit    = 'px';\n\n        this.rotateX.value      = 90;\n        this.rotateX.unit       = 'deg';\n\n        this.rotateY.value      = 90;\n        this.rotateY.unit       = 'deg';\n\n        this.rotateX.value      = 90;\n        this.rotateX.unit       = 'deg';\n\n        this.rotateZ.value      = 180;\n        this.rotateZ.unit       = 'deg';\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.TransformDefaults);\n\n    mixitup.TransformDefaults.prototype = Object.create(mixitup.StyleData.prototype);\n\n    mixitup.TransformDefaults.prototype.constructor = mixitup.TransformDefaults;\n\n    /**\n     * @private\n     * @static\n     * @since   3.0.0\n     * @type    {mixitup.TransformDefaults}\n     */\n\n    mixitup.transformDefaults = new mixitup.TransformDefaults();\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.EventDetail = function() {\n        this.state          = null;\n        this.futureState    = null;\n        this.instance       = null;\n        this.originalEvent  = null;\n    };\n\n    /**\n     * The `mixitup.Events` class contains all custom events dispatched by MixItUp at various\n     * points within the lifecycle of a mixer operation.\n     *\n     * Each event is analogous to the callback function of the same name defined in\n     * the `callbacks` configuration object, and is triggered immediately before it.\n     *\n     * Events are always triggered from the container element on which MixItUp is instantiated\n     * upon.\n     *\n     * As with any event, registered event handlers receive the event object as a parameter\n     * which includes a `detail` property containting references to the current `state`,\n     * the `mixer` instance, and other event-specific properties described below.\n     *\n     * @constructor\n     * @namespace\n     * @memberof    mixitup\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.Events = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A custom event triggered immediately after any MixItUp operation is requested\n         * and before animations have begun.\n         *\n         * The `mixStart` event also exposes a `futureState` property via the\n         * `event.detail` object, which represents the final state of the mixer once\n         * the requested operation has completed.\n         *\n         * @name        mixStart\n         * @memberof    mixitup.Events\n         * @static\n         * @type        {CustomEvent}\n         */\n\n        this.mixStart = null;\n\n        /**\n         * A custom event triggered when a MixItUp operation is requested while another\n         * operation is in progress, and the animation queue is full, or queueing\n         * is disabled.\n         *\n         * @name        mixBusy\n         * @memberof    mixitup.Events\n         * @static\n         * @type        {CustomEvent}\n         */\n\n        this.mixBusy = null;\n\n        /**\n         * A custom event triggered after any MixItUp operation has completed, and the\n         * state has been updated.\n         *\n         * @name        mixEnd\n         * @memberof    mixitup.Events\n         * @static\n         * @type        {CustomEvent}\n         */\n\n        this.mixEnd = null;\n\n        /**\n         * A custom event triggered whenever a filter operation \"fails\", i.e. no targets\n         * could be found matching the requested filter.\n         *\n         * @name        mixFail\n         * @memberof    mixitup.Events\n         * @static\n         * @type        {CustomEvent}\n         */\n\n        this.mixFail = null;\n\n        /**\n         * A custom event triggered whenever a MixItUp control is clicked, and before its\n         * respective operation is requested.\n         *\n         * This event also exposes an `originalEvent` property via the `event.detail`\n         * object, which holds a reference to the original click event.\n         *\n         * @name        mixClick\n         * @memberof    mixitup.Events\n         * @static\n         * @type        {CustomEvent}\n         */\n\n        this.mixClick = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Events);\n\n    mixitup.Events.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.Events.prototype.constructor = mixitup.Events;\n\n    /**\n     * @private\n     * @param   {string}      eventType\n     * @param   {Element}     el\n     * @param   {object}      detail\n     * @param   {Document}    [doc]\n     */\n\n    mixitup.Events.prototype.fire = function(eventType, el, detail, doc) {\n        var self        = this,\n            event       = null,\n            eventDetail = new mixitup.EventDetail();\n\n        self.callActions('beforeFire', arguments);\n\n        if (typeof self[eventType] === 'undefined') {\n            throw new Error('Event type \"' + eventType + '\" not found.');\n        }\n\n        eventDetail.state = new mixitup.State();\n\n        h.extend(eventDetail.state, detail.state);\n\n        if (detail.futureState) {\n            eventDetail.futureState = new mixitup.State();\n\n            h.extend(eventDetail.futureState, detail.futureState);\n        }\n\n        eventDetail.instance = detail.instance;\n\n        if (detail.originalEvent) {\n            eventDetail.originalEvent = detail.originalEvent;\n        }\n\n        event = h.getCustomEvent(eventType, eventDetail, doc);\n\n        self.callFilters('eventFire', event, arguments);\n\n        el.dispatchEvent(event);\n    };\n\n    // Asign a singleton instance to `mixitup.events`:\n\n    mixitup.events = new mixitup.Events();\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.QueueItem = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.args           = [];\n        this.instruction    = null;\n        this.triggerElement = null;\n        this.deferred       = null;\n        this.isToggling     = false;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.QueueItem);\n\n    mixitup.QueueItem.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.QueueItem.prototype.constructor = mixitup.QueueItem;\n\n    /**\n     * The `mixitup.Mixer` class is used to hold discreet, user-configured\n     * instances of MixItUp on a provided container element.\n     *\n     * Mixer instances are returned whenever the `mixitup()` factory function is called,\n     * which expose a range of methods enabling API-based filtering, sorting,\n     * insertion, removal and more.\n     *\n     * @constructor\n     * @namespace\n     * @memberof    mixitup\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.Mixer = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.config            = new mixitup.Config();\n\n        this.id                = '';\n\n        this.isBusy            = false;\n        this.isToggling        = false;\n        this.incPadding        = true;\n\n        this.controls          = [];\n        this.targets           = [];\n        this.origOrder         = [];\n        this.cache             = {};\n\n        this.toggleArray       = [];\n\n        this.targetsMoved      = 0;\n        this.targetsImmovable  = 0;\n        this.targetsBound      = 0;\n        this.targetsDone       = 0;\n\n        this.staggerDuration   = 0;\n        this.effectsIn         = null;\n        this.effectsOut        = null;\n        this.transformIn       = [];\n        this.transformOut      = [];\n        this.queue             = [];\n\n        this.state             = null;\n        this.lastOperation     = null;\n        this.lastClicked       = null;\n        this.userCallback      = null;\n        this.userDeferred      = null;\n\n        this.dom               = new mixitup.MixerDom();\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Mixer);\n\n    mixitup.Mixer.prototype = Object.create(mixitup.Base.prototype);\n\n    h.extend(mixitup.Mixer.prototype,\n    /** @lends mixitup.Mixer */\n    {\n        constructor: mixitup.Mixer,\n\n        /**\n         * @private\n         * @instance\n         * @since 3.0.0\n         * @param {HTMLElement} container\n         * @param {HTMLElement} document\n         * @param {string}      id\n         * @param {object}      [config]\n         */\n\n        attach: function(container, document, id, config) {\n            var self    = this,\n                target  = null,\n                i       = -1;\n\n            self.callActions('beforeAttach', arguments);\n\n            self.id = id;\n\n            if (config) {\n                h.extend(self.config, config, true, true);\n            }\n\n            self.sanitizeConfig();\n\n            self.cacheDom(container, document);\n\n            if (self.config.layout.containerClassName) {\n                h.addClass(self.dom.container, self.config.layout.containerClassName);\n            }\n\n            if (!mixitup.features.has.transitions) {\n                self.config.animation.enable = false;\n            }\n\n            if (typeof window.console === 'undefined') {\n                self.config.debug.showWarnings = false;\n            }\n\n            if (self.config.data.uidKey) {\n                // If the dataset API is in use, force disable controls\n\n                self.config.controls.enable = false;\n            }\n\n            self.indexTargets();\n\n            self.state = self.getInitialState();\n\n            for (i = 0; target = self.lastOperation.toHide[i]; i++) {\n                target.hide();\n            }\n\n            if (self.config.controls.enable) {\n                self.initControls();\n\n                self.buildToggleArray(null, self.state);\n\n                self.updateControls({\n                    filter: self.state.activeFilter,\n                    sort: self.state.activeSort\n                });\n            }\n\n            self.parseEffects();\n\n            self.callActions('afterAttach', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since 3.0.0\n         * @return {void}\n         */\n\n        sanitizeConfig: function() {\n            var self = this;\n\n            self.callActions('beforeSanitizeConfig', arguments);\n\n            // Sanitize enum/string config options\n\n            self.config.controls.scope          = self.config.controls.scope.toLowerCase().trim();\n            self.config.controls.toggleLogic    = self.config.controls.toggleLogic.toLowerCase().trim();\n            self.config.controls.toggleDefault  = self.config.controls.toggleDefault.toLowerCase().trim();\n\n            self.config.animation.effects       = self.config.animation.effects.trim();\n\n            self.callActions('afterSanitizeConfig', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @return  {mixitup.State}\n         */\n\n        getInitialState: function() {\n            var self        = this,\n                state       = new mixitup.State(),\n                operation   = new mixitup.Operation();\n\n            self.callActions('beforeGetInitialState', arguments);\n\n            // Map initial values into a mock state object in order to construct an operation\n\n            state.activeContainerClassName = self.config.layout.containerClassName;\n\n            if (self.config.load.dataset) {\n                // Dataset API\n\n                if (!self.config.data.uidKey || typeof self.config.data.uidKey !== 'string') {\n                    throw new TypeError(mixitup.messages.errorConfigDataUidKeyNotSet());\n                }\n\n                operation.startDataset = operation.newDataset = state.activeDataset = self.config.load.dataset.slice();\n                operation.startContainerClassName = operation.newContainerClassName = state.activeContainerClassName;\n                operation.show = self.targets.slice();\n\n                state = self.callFilters('stateGetInitialState', state, arguments);\n            } else {\n                // DOM API\n\n                state.activeFilter              = self.parseFilterArgs([self.config.load.filter]).command;\n                state.activeSort                = self.parseSortArgs([self.config.load.sort]).command;\n                state.totalTargets              = self.targets.length;\n\n                state = self.callFilters('stateGetInitialState', state, arguments);\n\n                if (\n                    state.activeSort.collection || state.activeSort.attribute ||\n                    state.activeSort.order === 'random' || state.activeSort.order === 'desc'\n                ) {\n                    // Sorting on load\n\n                    operation.newSort = state.activeSort;\n\n                    self.sortOperation(operation);\n\n                    self.printSort(false, operation);\n\n                    self.targets = operation.newOrder;\n                } else {\n                    operation.startOrder = operation.newOrder = self.targets;\n                }\n\n                operation.startFilter               = operation.newFilter               = state.activeFilter;\n                operation.startSort                 = operation.newSort                 = state.activeSort;\n                operation.startContainerClassName   = operation.newContainerClassName   = state.activeContainerClassName;\n\n                if (operation.newFilter.selector === 'all') {\n                    operation.newFilter.selector = self.config.selectors.target;\n                } else if (operation.newFilter.selector === 'none') {\n                    operation.newFilter.selector = '';\n                }\n            }\n\n            operation = self.callFilters('operationGetInitialState', operation, [state]);\n\n            self.lastOperation = operation;\n\n            if (operation.newFilter) {\n                self.filterOperation(operation);\n            }\n\n            state = self.buildState(operation);\n\n            return state;\n        },\n\n        /**\n         * Caches references of DOM elements neccessary for the mixer's functionality.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {HTMLElement}       el\n         * @param   {HTMLHtmlElement}   document\n         * @return  {void}\n         */\n\n        cacheDom: function(el, document) {\n            var self    = this;\n\n            self.callActions('beforeCacheDom', arguments);\n\n            self.dom.document  = document;\n            self.dom.body      = self.dom.document.querySelector('body');\n            self.dom.container = el;\n            self.dom.parent    = el;\n\n            self.callActions('afterCacheDom', arguments);\n        },\n\n        /**\n         * Indexes all child elements of the mixer matching the `selectors.target`\n         * selector, instantiating a mixitup.Target for each one.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @return  {void}\n         */\n\n        indexTargets: function() {\n            var self            = this,\n                target          = null,\n                el              = null,\n                dataset         = null,\n                i               = -1;\n\n            self.callActions('beforeIndexTargets', arguments);\n\n            self.dom.targets = self.config.layout.allowNestedTargets ?\n                self.dom.container.querySelectorAll(self.config.selectors.target) :\n                h.children(self.dom.container, self.config.selectors.target, self.dom.document);\n\n            self.dom.targets = h.arrayFromList(self.dom.targets);\n\n            self.targets = [];\n\n            if ((dataset = self.config.load.dataset) && dataset.length !== self.dom.targets.length) {\n                throw new Error(mixitup.messages.errorDatasetPrerenderedMismatch());\n            }\n\n            if (self.dom.targets.length) {\n                for (i = 0; el = self.dom.targets[i]; i++) {\n                    target = new mixitup.Target();\n\n                    target.init(el, self, dataset ? dataset[i] : void(0));\n\n                    target.isInDom = true;\n\n                    self.targets.push(target);\n                }\n\n                self.dom.parent = self.dom.targets[0].parentElement === self.dom.container ?\n                    self.dom.container :\n                    self.dom.targets[0].parentElement;\n            }\n\n            self.origOrder = self.targets;\n\n            self.callActions('afterIndexTargets', arguments);\n        },\n\n        initControls: function() {\n            var self                = this,\n                definition          = '',\n                controlElements     = null,\n                el                  = null,\n                parent              = null,\n                delagators          = null,\n                control             = null,\n                i                   = -1,\n                j                   = -1;\n\n            self.callActions('beforeInitControls', arguments);\n\n            switch (self.config.controls.scope) {\n                case 'local':\n                    parent = self.dom.container;\n\n                    break;\n                case 'global':\n                    parent = self.dom.document;\n\n                    break;\n                default:\n                    throw new Error(mixitup.messages.errorConfigInvalidControlsScope());\n            }\n\n            for (i = 0; definition = mixitup.controlDefinitions[i]; i++) {\n                if (self.config.controls.live || definition.live) {\n                    if (definition.parent) {\n                        delagators = self.dom[definition.parent];\n\n                        if (!delagators || delagators.length < 0) continue;\n\n                        if (typeof delagators.length !== 'number') {\n                            delagators = [delagators];\n                        }\n                    } else {\n                        delagators = [parent];\n                    }\n\n                    for (j = 0; (el = delagators[j]); j++) {\n                        control = self.getControl(el,  definition.type, definition.selector);\n\n                        self.controls.push(control);\n                    }\n                } else {\n                    controlElements = parent.querySelectorAll(self.config.selectors.control + definition.selector);\n\n                    for (j = 0; (el = controlElements[j]); j++) {\n                        control = self.getControl(el, definition.type, '');\n\n                        if (!control) continue;\n\n                        self.controls.push(control);\n                    }\n                }\n            }\n\n            self.callActions('afterInitControls', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {HTMLElement} el\n         * @param   {string}      type\n         * @param   {string}      selector\n         * @return  {mixitup.Control|null}\n         */\n\n        getControl: function(el, type, selector) {\n            var self    = this,\n                control = null,\n                i       = -1;\n\n            self.callActions('beforeGetControl', arguments);\n\n            if (!selector) {\n                // Static controls only\n\n                for (i = 0; control = mixitup.controls[i]; i++) {\n                    if (control.el === el && control.isBound(self)) {\n                        // Control already bound to this mixer (as another type).\n\n                        // NB: This prevents duplicate controls from being registered where a selector\n                        // might collide, eg: \"[data-filter]\" and \"[data-filter][data-sort]\"\n\n                        return self.callFilters('controlGetControl', null, arguments);\n                    } else if (control.el === el && control.type === type && control.selector === selector) {\n                        // Another mixer is already using this control, add this mixer as a binding\n\n                        control.addBinding(self);\n\n                        return self.callFilters('controlGetControl', control, arguments);\n                    }\n                }\n            }\n\n            // Create new control\n\n            control = new mixitup.Control();\n\n            control.init(el, type, selector);\n\n            control.classNames.base     = h.getClassname(self.config.classNames, type);\n            control.classNames.active   = h.getClassname(self.config.classNames, type, self.config.classNames.modifierActive);\n            control.classNames.disabled = h.getClassname(self.config.classNames, type, self.config.classNames.modifierDisabled);\n\n            // Add a reference to this mixer as a binding\n\n            control.addBinding(self);\n\n            return self.callFilters('controlGetControl', control, arguments);\n        },\n\n        /**\n         * Creates a compound selector by joining the `toggleArray` value as per the\n         * defined toggle logic.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @return  {string}\n         */\n\n        getToggleSelector: function() {\n            var self            = this,\n                delineator      = self.config.controls.toggleLogic === 'or' ? ', ' : '',\n                toggleSelector  = '';\n\n            self.callActions('beforeGetToggleSelector', arguments);\n\n            self.toggleArray = h.clean(self.toggleArray);\n\n            toggleSelector = self.toggleArray.join(delineator);\n\n            if (toggleSelector === '') {\n                toggleSelector = self.config.controls.toggleDefault;\n            }\n\n            return self.callFilters('selectorGetToggleSelector', toggleSelector, arguments);\n        },\n\n        /**\n         * Breaks compound selector strings in an array of discreet selectors,\n         * as per the active `controls.toggleLogic` configuration option. Accepts\n         * either a dynamic command object, or a state object.\n         *\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {object}        [command]\n         * @param   {mixitup.State} [state]\n         * @return  {void}\n         */\n\n        buildToggleArray: function(command, state) {\n            var self                    = this,\n                activeFilterSelector    = '';\n\n            self.callActions('beforeBuildToggleArray', arguments);\n\n            if (command && command.filter) {\n                activeFilterSelector = command.filter.selector.replace(/\\s/g, '');\n            } else if (state) {\n                activeFilterSelector = state.activeFilter.selector.replace(/\\s/g, '');\n            } else {\n                return;\n            }\n\n            if (activeFilterSelector === self.config.selectors.target || activeFilterSelector === 'all') {\n                activeFilterSelector = '';\n            }\n\n            if (self.config.controls.toggleLogic === 'or') {\n                self.toggleArray = activeFilterSelector.split(',');\n            } else {\n                self.toggleArray = self.splitCompoundSelector(activeFilterSelector);\n            }\n\n            self.toggleArray = h.clean(self.toggleArray);\n\n            self.callActions('afterBuildToggleArray', arguments);\n        },\n\n        /**\n         * Takes a compound selector (e.g. `.cat-1.cat-2`, `[data-cat=\"1\"][data-cat=\"2\"]`)\n         * and breaks into its individual selectors.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {string} compoundSelector\n         * @return  {string[]}\n         */\n\n        splitCompoundSelector: function(compoundSelector) {\n            // Break at a `.` or `[`, capturing the delineator\n\n            var partials    = compoundSelector.split(/([\\.\\[])/g),\n                toggleArray = [],\n                selector    = '',\n                i           = -1;\n\n            if (partials[0] === '') {\n                partials.shift();\n            }\n\n            for (i = 0; i < partials.length; i++) {\n                if (i % 2 === 0) {\n                    selector = '';\n                }\n\n                selector += partials[i];\n\n                if (i % 2 !== 0) {\n                    toggleArray.push(selector);\n                }\n            }\n\n            return toggleArray;\n        },\n\n        /**\n         * Updates controls to their active/inactive state based on the command or\n         * current state of the mixer.\n         *\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {object} command\n         * @return  {void}\n         */\n\n        updateControls: function(command) {\n            var self    = this,\n                control = null,\n                output  = new mixitup.CommandMultimix(),\n                i       = -1;\n\n            self.callActions('beforeUpdateControls', arguments);\n\n            // Sanitise to defaults\n\n            if (command.filter) {\n                output.filter = command.filter.selector;\n            } else {\n                output.filter = self.state.activeFilter.selector;\n            }\n\n            if (command.sort) {\n                output.sort = self.buildSortString(command.sort);\n            } else {\n                output.sort = self.buildSortString(self.state.activeSort);\n            }\n\n            if (output.filter === self.config.selectors.target) {\n                output.filter = 'all';\n            }\n\n            if (output.filter === '') {\n                output.filter = 'none';\n            }\n\n            h.freeze(output);\n\n            for (i = 0; control = self.controls[i]; i++) {\n                control.update(output, self.toggleArray);\n            }\n\n            self.callActions('afterUpdateControls', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {mixitup.CommandSort}   command\n         * @return  {string}\n         */\n\n        buildSortString: function(command) {\n            var self    = this;\n            var output  = '';\n\n            output += command.sortString;\n\n            if (command.next) {\n                output += ' ' + self.buildSortString(command.next);\n            }\n\n            return output;\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {object}        command\n         * @param   {Operation}     operation\n         * @return  {Promise.<mixitup.State>}\n         */\n\n        insertTargets: function(command, operation) {\n            var self            = this,\n                nextSibling     = null,\n                insertionIndex  = -1,\n                frag            = null,\n                target          = null,\n                el              = null,\n                i               = -1;\n\n            self.callActions('beforeInsertTargets', arguments);\n\n            if (typeof command.index === 'undefined') command.index = 0;\n\n            nextSibling = self.getNextSibling(command.index, command.sibling, command.position);\n            frag        = self.dom.document.createDocumentFragment();\n\n            if (nextSibling) {\n                insertionIndex = h.index(nextSibling, self.config.selectors.target);\n            } else {\n                insertionIndex = self.targets.length;\n            }\n\n            if (command.collection) {\n                for (i = 0; el = command.collection[i]; i++) {\n                    if (self.dom.targets.indexOf(el) > -1) {\n                        throw new Error(mixitup.messages.errorInsertPreexistingElement());\n                    }\n\n                    // Ensure elements are hidden when they are added to the DOM, so they can\n                    // be animated in gracefully\n\n                    el.style.display = 'none';\n\n                    frag.appendChild(el);\n                    frag.appendChild(self.dom.document.createTextNode(' '));\n\n                    if (!h.isElement(el, self.dom.document) || !el.matches(self.config.selectors.target)) continue;\n\n                    target = new mixitup.Target();\n\n                    target.init(el, self);\n\n                    target.isInDom = true;\n\n                    self.targets.splice(insertionIndex, 0, target);\n\n                    insertionIndex++;\n                }\n\n                self.dom.parent.insertBefore(frag, nextSibling);\n            }\n\n            // Since targets have been added, the original order must be updated\n\n            operation.startOrder = self.origOrder = self.targets;\n\n            self.callActions('afterInsertTargets', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Number}      [index]\n         * @param   {Element}     [sibling]\n         * @param   {string}      [position]\n         * @return  {Element}\n         */\n\n        getNextSibling: function(index, sibling, position) {\n            var self    = this,\n                element = null;\n\n            index = Math.max(index, 0);\n\n            if (sibling && position === 'before') {\n                // Explicit sibling\n\n                element = sibling;\n            } else if (sibling && position === 'after') {\n                // Explicit sibling\n\n                element = sibling.nextElementSibling || null;\n            } else if (self.targets.length > 0 && typeof index !== 'undefined') {\n                // Index and targets exist\n\n                element = (index < self.targets.length || !self.targets.length) ?\n                    self.targets[index].dom.el :\n                    self.targets[self.targets.length - 1].dom.el.nextElementSibling;\n            } else if (self.targets.length === 0 && self.dom.parent.children.length > 0) {\n                // No targets but other siblings\n\n                if (self.config.layout.siblingAfter) {\n                    element = self.config.layout.siblingAfter;\n                } else if (self.config.layout.siblingBefore) {\n                    element = self.config.layout.siblingBefore.nextElementSibling;\n                } else {\n                    self.dom.parent.children[0];\n                }\n            } else {\n                element === null;\n            }\n\n            return self.callFilters('elementGetNextSibling', element, arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        filterOperation: function(operation) {\n            var self        = this,\n                testResult  = false,\n                index       = -1,\n                action      = '',\n                target      = null,\n                i           = -1;\n\n            self.callActions('beforeFilterOperation', arguments);\n\n            action = operation.newFilter.action;\n\n            for (i = 0; target = operation.newOrder[i]; i++) {\n                if (operation.newFilter.collection) {\n                    // show via collection\n\n                    testResult = operation.newFilter.collection.indexOf(target.dom.el) > -1;\n                } else {\n                    // show via selector\n\n                    if (operation.newFilter.selector === '') {\n                        testResult = false;\n                    } else {\n                        testResult = target.dom.el.matches(operation.newFilter.selector);\n                    }\n                }\n\n                self.evaluateHideShow(testResult, target, action, operation);\n            }\n\n            if (operation.toRemove.length) {\n                for (i = 0; target = operation.show[i]; i++) {\n                    if (operation.toRemove.indexOf(target) > -1) {\n                        // If any shown targets should be removed, move them into the toHide array\n\n                        operation.show.splice(i, 1);\n\n                        if ((index = operation.toShow.indexOf(target)) > -1) {\n                            operation.toShow.splice(index, 1);\n                        }\n\n                        operation.toHide.push(target);\n                        operation.hide.push(target);\n\n                        i--;\n                    }\n                }\n            }\n\n            operation.matching = operation.show.slice();\n\n            if (operation.show.length === 0 && operation.newFilter.selector !== '' && self.targets.length !== 0) {\n                operation.hasFailed = true;\n            }\n\n            self.callActions('afterFilterOperation', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {boolean}   testResult\n         * @param   {Element}   target\n         * @param   {string}    action\n         * @param   {Operation} operation\n         * @return  {void}\n         */\n\n        evaluateHideShow: function(testResult, target, action, operation) {\n            var self = this;\n\n            self.callActions('beforeEvaluateHideShow', arguments);\n\n            if (testResult === true && action === 'show' || testResult === false && action === 'hide') {\n                operation.show.push(target);\n\n                !target.isShown && operation.toShow.push(target);\n            } else {\n                operation.hide.push(target);\n\n                target.isShown && operation.toHide.push(target);\n            }\n\n            self.callActions('afterEvaluateHideShow', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        sortOperation: function(operation) {\n            var self = this;\n\n            self.callActions('beforeSortOperation', arguments);\n\n            operation.startOrder = self.targets;\n\n            if (operation.newSort.collection) {\n                // Sort by collection\n\n                operation.newOrder = operation.newSort.collection;\n            } else if (operation.newSort.order === 'random') {\n                // Sort random\n\n                operation.newOrder = h.arrayShuffle(operation.startOrder);\n            } else if (operation.newSort.attribute === '') {\n                // Sort by default\n\n                operation.newOrder = self.origOrder.slice();\n\n                if (operation.newSort.order === 'desc') {\n                    operation.newOrder.reverse();\n                }\n            } else {\n                // Sort by attribute\n\n                operation.newOrder = operation.startOrder.slice();\n\n                operation.newOrder.sort(function(a, b) {\n                    return self.compare(a, b, operation.newSort);\n                });\n            }\n\n            if (h.isEqualArray(operation.newOrder, operation.startOrder)) {\n                operation.willSort = false;\n            }\n\n            self.callActions('afterSortOperation', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {mixitup.Target}        a\n         * @param   {mixitup.Target}        b\n         * @param   {mixitup.CommandSort}   command\n         * @return  {Number}\n         */\n\n        compare: function(a, b, command) {\n            var self        = this,\n                order       = command.order,\n                attrA       = self.getAttributeValue(a, command.attribute),\n                attrB       = self.getAttributeValue(b, command.attribute);\n\n            if (isNaN(attrA * 1) || isNaN(attrB * 1)) {\n                attrA = attrA.toLowerCase();\n                attrB = attrB.toLowerCase();\n            } else {\n                attrA = attrA * 1;\n                attrB = attrB * 1;\n            }\n\n            if (attrA < attrB) {\n                return order === 'asc' ? -1 : 1;\n            }\n\n            if (attrA > attrB) {\n                return order === 'asc' ? 1 : -1;\n            }\n\n            if (attrA === attrB && command.next) {\n                return self.compare(a, b, command.next);\n            }\n\n            return 0;\n        },\n\n        /**\n         * Reads the values of any data attributes present the provided target element\n         * which match the current sort command.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {mixitup.Target}    target\n         * @param   {string}            [attribute]\n         * @return  {(String|Number)}\n         */\n\n        getAttributeValue: function(target, attribute) {\n            var self    = this,\n                value   = '';\n\n            value = target.dom.el.getAttribute('data-' + attribute);\n\n            if (value === null) {\n                if (self.config.debug.showWarnings) {\n                    // Encourage users to assign values to all targets to avoid erroneous sorting\n                    // when types are mixed\n\n                    console.warn(mixitup.messages.warningInconsistentSortingAttributes({\n                        attribute: 'data-' + attribute\n                    }));\n                }\n            }\n\n            // If an attribute is not present, return 0 as a safety value\n\n            return self.callFilters('valueGetAttributeValue', value || 0, arguments);\n        },\n\n        /**\n         * Inserts elements into the DOM in the appropriate\n         * order using a document fragment for minimal\n         * DOM thrashing\n         *\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {boolean}   isResetting\n         * @param   {Operation} operation\n         * @return  {void}\n         */\n\n        printSort: function(isResetting, operation) {\n            var self        = this,\n                startOrder  = isResetting ? operation.newOrder : operation.startOrder,\n                newOrder    = isResetting ? operation.startOrder : operation.newOrder,\n                nextSibling = startOrder.length ? startOrder[startOrder.length - 1].dom.el.nextElementSibling : null,\n                frag        = window.document.createDocumentFragment(),\n                whitespace  = null,\n                target      = null,\n                el          = null,\n                i           = -1;\n\n            self.callActions('beforePrintSort', arguments);\n\n            // Empty the container\n\n            for (i = 0; target = startOrder[i]; i++) {\n                el = target.dom.el;\n\n                if (el.style.position === 'absolute') continue;\n\n                h.removeWhitespace(el.previousSibling);\n\n                el.parentElement.removeChild(el);\n            }\n\n            whitespace = nextSibling ? nextSibling.previousSibling : self.dom.parent.lastChild;\n\n            if (whitespace && whitespace.nodeName === '#text') {\n                h.removeWhitespace(whitespace);\n            }\n\n            for (i = 0; target = newOrder[i]; i++) {\n                // Add targets into a document fragment\n\n                el = target.dom.el;\n\n                if (h.isElement(frag.lastChild)) {\n                    frag.appendChild(window.document.createTextNode(' '));\n                }\n\n                frag.appendChild(el);\n            }\n\n            // Insert the document fragment into the container\n            // before any other non-target elements\n\n            if (self.dom.parent.firstChild && self.dom.parent.firstChild !== nextSibling) {\n                frag.insertBefore(window.document.createTextNode(' '), frag.childNodes[0]);\n            }\n\n            if (nextSibling) {\n                frag.appendChild(window.document.createTextNode(' '));\n\n                self.dom.parent.insertBefore(frag, nextSibling);\n            } else {\n                self.dom.parent.appendChild(frag);\n            }\n\n            self.callActions('afterPrintSort', arguments);\n        },\n\n        /**\n         * Parses user-defined sort strings (i.e. `default:asc`) into sort commands objects.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {string}                sortString\n         * @param   {mixitup.CommandSort}   command\n         * @return  {mixitup.CommandSort}\n         */\n\n        parseSortString: function(sortString, command) {\n            var self        = this,\n                rules       = sortString.split(' '),\n                current     = command,\n                rule        = [],\n                i           = -1;\n\n            // command.sortString = sortString;\n\n            for (i = 0; i < rules.length; i++) {\n                rule = rules[i].split(':');\n\n                current.sortString  = rules[i];\n                current.attribute   = h.dashCase(rule[0]);\n                current.order       = rule[1] || 'asc';\n\n                switch (current.attribute) {\n                    case 'default':\n                        // treat \"default\" as sorting by no attribute\n\n                        current.attribute = '';\n\n                        break;\n                    case 'random':\n                        // treat \"random\" as an order not an attribute\n\n                        current.attribute   = '';\n                        current.order       = 'random';\n\n                        break;\n                }\n\n                if (!current.attribute || current.order === 'random') break;\n\n                if (i < rules.length - 1) {\n                    // Embed reference to the next command\n\n                    current.next = new mixitup.CommandSort();\n\n                    h.freeze(current);\n\n                    current = current.next;\n                }\n            }\n\n            return self.callFilters('commandsParseSort', command, arguments);\n        },\n\n        /**\n         * Parses all effects out of the user-defined `animation.effects` string into\n         * their respective properties and units.\n         *\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @return  {void}\n         */\n\n        parseEffects: function() {\n            var self            = this,\n                transformName   = '',\n                effectsIn       = self.config.animation.effectsIn || self.config.animation.effects,\n                effectsOut      = self.config.animation.effectsOut || self.config.animation.effects;\n\n            self.callActions('beforeParseEffects', arguments);\n\n            self.effectsIn      = new mixitup.StyleData();\n            self.effectsOut     = new mixitup.StyleData();\n            self.transformIn    = [];\n            self.transformOut   = [];\n\n            self.effectsIn.opacity = self.effectsOut.opacity = 1;\n\n            self.parseEffect('fade', effectsIn, self.effectsIn, self.transformIn);\n            self.parseEffect('fade', effectsOut, self.effectsOut, self.transformOut, true);\n\n            for (transformName in mixitup.transformDefaults) {\n                if (!(mixitup.transformDefaults[transformName] instanceof mixitup.TransformData)) {\n                    continue;\n                }\n\n                self.parseEffect(transformName, effectsIn, self.effectsIn, self.transformIn);\n                self.parseEffect(transformName, effectsOut, self.effectsOut, self.transformOut, true);\n            }\n\n            self.parseEffect('stagger', effectsIn, self.effectsIn, self.transformIn);\n            self.parseEffect('stagger', effectsOut, self.effectsOut, self.transformOut, true);\n\n            self.callActions('afterParseEffects', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {string}    effectName\n         * @param   {string}    effectString\n         * @param   {StyleData} effects\n         * @param   {String[]}  transform\n         * @param   {boolean}   [isOut]\n         */\n\n        parseEffect: function(effectName, effectString, effects, transform, isOut) {\n            var self        = this,\n                re          = /\\(([^)]+)\\)/,\n                propIndex   = -1,\n                str         = '',\n                match       = [],\n                val         = '',\n                units       = ['%', 'px', 'em', 'rem', 'vh', 'vw', 'deg'],\n                unit        = '',\n                i           = -1;\n\n            self.callActions('beforeParseEffect', arguments);\n\n            if (typeof effectString !== 'string') {\n                throw new TypeError(mixitup.messages.errorConfigInvalidAnimationEffects());\n            }\n\n            if (effectString.indexOf(effectName) < 0) {\n                // The effect is not present in the effects string\n\n                if (effectName === 'stagger') {\n                    // Reset stagger to 0\n\n                    self.staggerDuration = 0;\n                }\n\n                return;\n            }\n\n            // The effect is present\n\n            propIndex = effectString.indexOf(effectName + '(');\n\n            if (propIndex > -1) {\n                // The effect has a user defined value in parentheses\n\n                // Extract from the first parenthesis to the end of string\n\n                str = effectString.substring(propIndex);\n\n                // Match any number of characters between \"(\" and \")\"\n\n                match = re.exec(str);\n\n                val = match[1];\n            }\n\n            switch (effectName) {\n                case 'fade':\n                    effects.opacity = val ? parseFloat(val) : 0;\n\n                    break;\n                case 'stagger':\n                    self.staggerDuration = val ? parseFloat(val) : 100;\n\n                    // TODO: Currently stagger must be applied globally, but\n                    // if seperate values are specified for in/out, this should\n                    // be respected\n\n                    break;\n                default:\n                    // All other effects are transforms following the same structure\n\n                    if (isOut && self.config.animation.reverseOut && effectName !== 'scale') {\n                        effects[effectName].value =\n                            (val ? parseFloat(val) : mixitup.transformDefaults[effectName].value) * -1;\n                    } else {\n                        effects[effectName].value =\n                            (val ? parseFloat(val) : mixitup.transformDefaults[effectName].value);\n                    }\n\n                    if (val) {\n                        for (i = 0; unit = units[i]; i++) {\n                            if (val.indexOf(unit) > -1) {\n                                effects[effectName].unit = unit;\n\n                                break;\n                            }\n                        }\n                    } else {\n                        effects[effectName].unit = mixitup.transformDefaults[effectName].unit;\n                    }\n\n                    transform.push(\n                        effectName +\n                        '(' +\n                        effects[effectName].value +\n                        effects[effectName].unit +\n                        ')'\n                    );\n            }\n\n            self.callActions('afterParseEffect', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {State}\n         */\n\n        buildState: function(operation) {\n            var self        = this,\n                state       = new mixitup.State(),\n                target      = null,\n                i           = -1;\n\n            self.callActions('beforeBuildState', arguments);\n\n            // Map target elements into state arrays.\n            // the real target objects should never be exposed\n\n            for (i = 0; target = self.targets[i]; i++) {\n                if (!operation.toRemove.length || operation.toRemove.indexOf(target) < 0) {\n                    state.targets.push(target.dom.el);\n                }\n            }\n\n            for (i = 0; target = operation.matching[i]; i++) {\n                state.matching.push(target.dom.el);\n            }\n\n            for (i = 0; target = operation.show[i]; i++) {\n                state.show.push(target.dom.el);\n            }\n\n            for (i = 0; target = operation.hide[i]; i++) {\n                if (!operation.toRemove.length || operation.toRemove.indexOf(target) < 0) {\n                    state.hide.push(target.dom.el);\n                }\n            }\n\n            state.id                        = self.id;\n            state.container                 = self.dom.container;\n            state.activeFilter              = operation.newFilter;\n            state.activeSort                = operation.newSort;\n            state.activeDataset             = operation.newDataset;\n            state.activeContainerClassName  = operation.newContainerClassName;\n            state.hasFailed                 = operation.hasFailed;\n            state.totalTargets              = self.targets.length;\n            state.totalShow                 = operation.show.length;\n            state.totalHide                 = operation.hide.length;\n            state.totalMatching             = operation.matching.length;\n            state.triggerElement            = operation.triggerElement;\n\n            return self.callFilters('stateBuildState', state, arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {boolean}   shouldAnimate\n         * @param   {Operation} operation\n         * @return  {void}\n         */\n\n        goMix: function(shouldAnimate, operation) {\n            var self        = this,\n                deferred    = null;\n\n            self.callActions('beforeGoMix', arguments);\n\n            // If the animation duration is set to 0ms,\n            // or no effects specified,\n            // or the container is hidden\n            // then abort animation\n\n            if (\n                !self.config.animation.duration || !self.config.animation.effects || !h.isVisible(self.dom.container)\n            ) {\n                shouldAnimate = false;\n            }\n\n            if (\n                !operation.toShow.length &&\n                !operation.toHide.length &&\n                !operation.willSort &&\n                !operation.willChangeLayout\n            ) {\n                // If nothing to show or hide, and not sorting or\n                // changing layout\n\n                shouldAnimate = false;\n            }\n\n            if (\n                !operation.startState.show.length &&\n                !operation.show.length\n            ) {\n                // If nothing currently shown, nothing to show\n\n                shouldAnimate = false;\n            }\n\n            mixitup.events.fire('mixStart', self.dom.container, {\n                state: operation.startState,\n                futureState: operation.newState,\n                instance: self\n            }, self.dom.document);\n\n            if (typeof self.config.callbacks.onMixStart === 'function') {\n                self.config.callbacks.onMixStart.call(\n                    self.dom.container,\n                    operation.startState,\n                    operation.newState,\n                    self\n                );\n            }\n\n            h.removeClass(self.dom.container, h.getClassname(self.config.classNames, 'container', self.config.classNames.modifierFailed));\n\n            if (!self.userDeferred) {\n                // Queue empty, no pending operations\n\n                deferred = self.userDeferred = h.defer(mixitup.libraries);\n            } else {\n                // Use existing deferred\n\n                deferred = self.userDeferred;\n            }\n\n            self.isBusy = true;\n\n            if (!shouldAnimate || !mixitup.features.has.transitions) {\n                // Abort\n\n                if (self.config.debug.fauxAsync) {\n                    setTimeout(function() {\n                        self.cleanUp(operation);\n                    }, self.config.animation.duration);\n                } else {\n                    self.cleanUp(operation);\n                }\n\n                return self.callFilters('promiseGoMix', deferred.promise, arguments);\n            }\n\n            // If we should animate and the platform supports transitions, go for it\n\n            if (window.pageYOffset !== operation.docState.scrollTop) {\n                window.scrollTo(operation.docState.scrollLeft, operation.docState.scrollTop);\n            }\n\n            if (self.config.animation.applyPerspective) {\n                self.dom.parent.style[mixitup.features.perspectiveProp] =\n                    self.config.animation.perspectiveDistance;\n\n                self.dom.parent.style[mixitup.features.perspectiveOriginProp] =\n                    self.config.animation.perspectiveOrigin;\n            }\n\n            if (\n                self.config.animation.animateResizeContainer &&\n                operation.startHeight !== operation.newHeight &&\n                operation.viewportDeltaY !== operation.startHeight - operation.newHeight\n            ) {\n                self.dom.parent.style.height = operation.startHeight + 'px';\n            }\n\n            if (\n                self.config.animation.animateResizeContainer &&\n                operation.startWidth !== operation.newWidth &&\n                operation.viewportDeltaX !== operation.startWidth - operation.newWidth\n            ) {\n                self.dom.parent.style.width = operation.startWidth + 'px';\n            }\n\n            if (operation.startHeight === operation.newHeight) {\n                self.dom.parent.style.height = operation.startHeight + 'px';\n            }\n\n            if (operation.startWidth === operation.newWidth) {\n                self.dom.parent.style.width = operation.startWidth + 'px';\n            }\n\n            if (operation.startHeight === operation.newHeight && operation.startWidth === operation.newWidth) {\n                self.dom.parent.style.overflow = 'hidden';\n            }\n\n            requestAnimationFrame(function() {\n                self.moveTargets(operation);\n            });\n\n            return self.callFilters('promiseGoMix', deferred.promise, arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        getStartMixData: function(operation) {\n            var self        = this,\n                parentStyle = window.getComputedStyle(self.dom.parent),\n                parentRect  = self.dom.parent.getBoundingClientRect(),\n                target      = null,\n                data        = {},\n                i           = -1,\n                boxSizing   = parentStyle[mixitup.features.boxSizingProp];\n\n            self.incPadding = (boxSizing === 'border-box');\n\n            self.callActions('beforeGetStartMixData', arguments);\n\n            for (i = 0; target = operation.show[i]; i++) {\n                data = target.getPosData();\n\n                operation.showPosData[i] = {\n                    startPosData: data\n                };\n            }\n\n            for (i = 0; target = operation.toHide[i]; i++) {\n                data = target.getPosData();\n\n                operation.toHidePosData[i] = {\n                    startPosData: data\n                };\n            }\n\n            operation.startX = parentRect.left;\n            operation.startY = parentRect.top;\n\n            operation.startHeight = self.incPadding ?\n                parentRect.height :\n                parentRect.height -\n                    parseFloat(parentStyle.paddingTop) -\n                    parseFloat(parentStyle.paddingBottom) -\n                    parseFloat(parentStyle.borderTop) -\n                    parseFloat(parentStyle.borderBottom);\n\n            operation.startWidth = self.incPadding ?\n                parentRect.width :\n                parentRect.width -\n                    parseFloat(parentStyle.paddingLeft) -\n                    parseFloat(parentStyle.paddingRight) -\n                    parseFloat(parentStyle.borderLeft) -\n                    parseFloat(parentStyle.borderRight);\n\n            self.callActions('afterGetStartMixData', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        setInter: function(operation) {\n            var self    = this,\n                target  = null,\n                i       = -1;\n\n            self.callActions('beforeSetInter', arguments);\n\n            // Prevent scrollbar flicker on non-inertial scroll platforms by clamping height/width\n\n            if (self.config.animation.clampHeight) {\n                self.dom.parent.style.height    = operation.startHeight + 'px';\n                self.dom.parent.style.overflow  = 'hidden';\n            }\n\n            if (self.config.animation.clampWidth) {\n                self.dom.parent.style.width     = operation.startWidth + 'px';\n                self.dom.parent.style.overflow  = 'hidden';\n            }\n\n            for (i = 0; target = operation.toShow[i]; i++) {\n                target.show();\n            }\n\n            if (operation.willChangeLayout) {\n                h.removeClass(self.dom.container, operation.startContainerClassName);\n                h.addClass(self.dom.container, operation.newContainerClassName);\n            }\n\n            self.callActions('afterSetInter', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        getInterMixData: function(operation) {\n            var self    = this,\n                target  = null,\n                i       = -1;\n\n            self.callActions('beforeGetInterMixData', arguments);\n\n            for (i = 0; target = operation.show[i]; i++) {\n                operation.showPosData[i].interPosData = target.getPosData();\n            }\n\n            for (i = 0; target = operation.toHide[i]; i++) {\n                operation.toHidePosData[i].interPosData = target.getPosData();\n            }\n\n            self.callActions('afterGetInterMixData', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        setFinal: function(operation) {\n            var self    = this,\n                target  = null,\n                i       = -1;\n\n            self.callActions('beforeSetFinal', arguments);\n\n            operation.willSort && self.printSort(false, operation);\n\n            for (i = 0; target = operation.toHide[i]; i++) {\n                target.hide();\n            }\n\n            self.callActions('afterSetFinal', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        getFinalMixData: function(operation) {\n            var self        = this,\n                parentStyle = null,\n                parentRect  = null,\n                target      = null,\n                i           = -1;\n\n            self.callActions('beforeGetFinalMixData', arguments);\n\n            for (i = 0; target = operation.show[i]; i++) {\n                operation.showPosData[i].finalPosData = target.getPosData();\n            }\n\n            for (i = 0; target = operation.toHide[i]; i++) {\n                operation.toHidePosData[i].finalPosData = target.getPosData();\n            }\n\n            // Remove clamping\n\n            if (self.config.animation.clampHeight || self.config.animation.clampWidth) {\n                self.dom.parent.style.height    =\n                self.dom.parent.style.width     =\n                self.dom.parent.style.overflow  = '';\n            }\n\n            if (!self.incPadding) {\n                parentStyle = window.getComputedStyle(self.dom.parent);\n            }\n\n            parentRect  = self.dom.parent.getBoundingClientRect();\n\n            operation.newX = parentRect.left;\n            operation.newY = parentRect.top;\n\n            operation.newHeight = self.incPadding ?\n                parentRect.height :\n                parentRect.height -\n                    parseFloat(parentStyle.paddingTop) -\n                    parseFloat(parentStyle.paddingBottom) -\n                    parseFloat(parentStyle.borderTop) -\n                    parseFloat(parentStyle.borderBottom);\n\n            operation.newWidth = self.incPadding ?\n                parentRect.width :\n                parentRect.width -\n                    parseFloat(parentStyle.paddingLeft) -\n                    parseFloat(parentStyle.paddingRight) -\n                    parseFloat(parentStyle.borderLeft) -\n                    parseFloat(parentStyle.borderRight);\n\n            operation.viewportDeltaX = operation.docState.viewportWidth - this.dom.document.documentElement.clientWidth;\n            operation.viewportDeltaY = operation.docState.viewportHeight - this.dom.document.documentElement.clientHeight;\n\n            if (operation.willSort) {\n                self.printSort(true, operation);\n            }\n\n            for (i = 0; target = operation.toShow[i]; i++) {\n                target.hide();\n            }\n\n            for (i = 0; target = operation.toHide[i]; i++) {\n                target.show();\n            }\n\n            if (operation.willChangeLayout) {\n                h.removeClass(self.dom.container, operation.newContainerClassName);\n                h.addClass(self.dom.container, self.config.layout.containerClassName);\n            }\n\n            self.callActions('afterGetFinalMixData', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since    3.0.0\n         * @param    {Operation}     operation\n         */\n\n        getTweenData: function(operation) {\n            var self            = this,\n                target          = null,\n                posData         = null,\n                effectNames     = Object.getOwnPropertyNames(self.effectsIn),\n                effectName      = '',\n                effect          = null,\n                widthChange     = -1,\n                heightChange    = -1,\n                i               = -1,\n                j               = -1;\n\n            self.callActions('beforeGetTweenData', arguments);\n\n            for (i = 0; target = operation.show[i]; i++) {\n                posData             = operation.showPosData[i];\n                posData.posIn       = new mixitup.StyleData();\n                posData.posOut      = new mixitup.StyleData();\n                posData.tweenData   = new mixitup.StyleData();\n\n                // Process x and y\n\n                if (target.isShown) {\n                    posData.posIn.x = posData.startPosData.x - posData.interPosData.x;\n                    posData.posIn.y = posData.startPosData.y - posData.interPosData.y;\n                } else {\n                    posData.posIn.x = posData.posIn.y = 0;\n                }\n\n                posData.posOut.x = posData.finalPosData.x - posData.interPosData.x;\n                posData.posOut.y = posData.finalPosData.y - posData.interPosData.y;\n\n                // Process opacity\n\n                posData.posIn.opacity       = target.isShown ? 1 : self.effectsIn.opacity;\n                posData.posOut.opacity      = 1;\n                posData.tweenData.opacity   = posData.posOut.opacity - posData.posIn.opacity;\n\n                // Adjust x and y if not nudging\n\n                if (!target.isShown && !self.config.animation.nudge) {\n                    posData.posIn.x = posData.posOut.x;\n                    posData.posIn.y = posData.posOut.y;\n                }\n\n                posData.tweenData.x = posData.posOut.x - posData.posIn.x;\n                posData.tweenData.y = posData.posOut.y - posData.posIn.y;\n\n                // Process width, height, and margins\n\n                if (self.config.animation.animateResizeTargets) {\n                    posData.posIn.width     = posData.startPosData.width;\n                    posData.posIn.height    = posData.startPosData.height;\n\n                    // \"||\" Prevents width/height change from including 0 width/height if hiding or showing\n\n                    widthChange = (posData.startPosData.width || posData.finalPosData.width) - posData.interPosData.width;\n\n                    posData.posIn.marginRight = posData.startPosData.marginRight - widthChange;\n\n                    heightChange = (posData.startPosData.height || posData.finalPosData.height) - posData.interPosData.height;\n\n                    posData.posIn.marginBottom = posData.startPosData.marginBottom - heightChange;\n\n                    posData.posOut.width    = posData.finalPosData.width;\n                    posData.posOut.height   = posData.finalPosData.height;\n\n                    widthChange = (posData.finalPosData.width || posData.startPosData.width) - posData.interPosData.width;\n\n                    posData.posOut.marginRight = posData.finalPosData.marginRight - widthChange;\n\n                    heightChange = (posData.finalPosData.height || posData.startPosData.height) - posData.interPosData.height;\n\n                    posData.posOut.marginBottom = posData.finalPosData.marginBottom - heightChange;\n\n                    posData.tweenData.width         = posData.posOut.width - posData.posIn.width;\n                    posData.tweenData.height        = posData.posOut.height - posData.posIn.height;\n                    posData.tweenData.marginRight   = posData.posOut.marginRight - posData.posIn.marginRight;\n                    posData.tweenData.marginBottom  = posData.posOut.marginBottom - posData.posIn.marginBottom;\n                }\n\n                // Process transforms\n\n                for (j = 0; effectName = effectNames[j]; j++) {\n                    effect = self.effectsIn[effectName];\n\n                    if (!(effect instanceof mixitup.TransformData) || !effect.value) continue;\n\n                    posData.posIn[effectName].value     = effect.value;\n                    posData.posOut[effectName].value    = 0;\n\n                    posData.tweenData[effectName].value =\n                        posData.posOut[effectName].value - posData.posIn[effectName].value;\n\n                    posData.posIn[effectName].unit =\n                        posData.posOut[effectName].unit =\n                        posData.tweenData[effectName].unit =\n                        effect.unit;\n                }\n            }\n\n            for (i = 0; target = operation.toHide[i]; i++) {\n                posData             = operation.toHidePosData[i];\n                posData.posIn       = new mixitup.StyleData();\n                posData.posOut      = new mixitup.StyleData();\n                posData.tweenData   = new mixitup.StyleData();\n\n                // Process x and y\n\n                posData.posIn.x     = target.isShown ? posData.startPosData.x - posData.interPosData.x : 0;\n                posData.posIn.y     = target.isShown ? posData.startPosData.y - posData.interPosData.y : 0;\n                posData.posOut.x    = self.config.animation.nudge ? 0 : posData.posIn.x;\n                posData.posOut.y    = self.config.animation.nudge ? 0 : posData.posIn.y;\n                posData.tweenData.x = posData.posOut.x - posData.posIn.x;\n                posData.tweenData.y = posData.posOut.y - posData.posIn.y;\n\n                // Process width, height, and margins\n\n                if (self.config.animation.animateResizeTargets) {\n                    posData.posIn.width         = posData.startPosData.width;\n                    posData.posIn.height        = posData.startPosData.height;\n\n                    widthChange = posData.startPosData.width - posData.interPosData.width;\n\n                    posData.posIn.marginRight = posData.startPosData.marginRight - widthChange;\n\n                    heightChange = posData.startPosData.height - posData.interPosData.height;\n\n                    posData.posIn.marginBottom = posData.startPosData.marginBottom - heightChange;\n                }\n\n                // Process opacity\n\n                posData.posIn.opacity       = 1;\n                posData.posOut.opacity      = self.effectsOut.opacity;\n                posData.tweenData.opacity   = posData.posOut.opacity - posData.posIn.opacity;\n\n                // Process transforms\n\n                for (j = 0; effectName = effectNames[j]; j++) {\n                    effect = self.effectsOut[effectName];\n\n                    if (!(effect instanceof mixitup.TransformData) || !effect.value) continue;\n\n                    posData.posIn[effectName].value     = 0;\n                    posData.posOut[effectName].value    = effect.value;\n\n                    posData.tweenData[effectName].value =\n                        posData.posOut[effectName].value - posData.posIn[effectName].value;\n\n                    posData.posIn[effectName].unit =\n                        posData.posOut[effectName].unit =\n                        posData.tweenData[effectName].unit =\n                        effect.unit;\n                }\n            }\n\n            self.callActions('afterGetTweenData', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        moveTargets: function(operation) {\n            var self            = this,\n                target          = null,\n                moveData        = null,\n                posData         = null,\n                statusChange    = '',\n                willTransition  = false,\n                staggerIndex    = -1,\n                i               = -1,\n                checkProgress   = self.checkProgress.bind(self);\n\n            self.callActions('beforeMoveTargets', arguments);\n\n            // TODO: this is an extra loop in addition to the calcs\n            // done in getOperation, could some of this be done there?\n\n            for (i = 0; target = operation.show[i]; i++) {\n                moveData    = new mixitup.IMoveData();\n                posData     = operation.showPosData[i];\n\n                statusChange = target.isShown ? 'none' : 'show';\n\n                willTransition = self.willTransition(\n                    statusChange,\n                    operation.hasEffect,\n                    posData.posIn,\n                    posData.posOut\n                );\n\n                if (willTransition) {\n                    // Prevent non-transitioning targets from incrementing the staggerIndex\n\n                    staggerIndex++;\n                }\n\n                target.show();\n\n                moveData.posIn          = posData.posIn;\n                moveData.posOut         = posData.posOut;\n                moveData.statusChange   = statusChange;\n                moveData.staggerIndex   = staggerIndex;\n                moveData.operation      = operation;\n                moveData.callback       = willTransition ? checkProgress : null;\n\n                target.move(moveData);\n            }\n\n            for (i = 0; target = operation.toHide[i]; i++) {\n                posData  = operation.toHidePosData[i];\n                moveData = new mixitup.IMoveData();\n\n                statusChange = 'hide';\n\n                willTransition = self.willTransition(statusChange, posData.posIn, posData.posOut);\n\n                moveData.posIn          = posData.posIn;\n                moveData.posOut         = posData.posOut;\n                moveData.statusChange   = statusChange;\n                moveData.staggerIndex   = i;\n                moveData.operation      = operation;\n                moveData.callback       = willTransition ? checkProgress : null;\n\n                target.move(moveData);\n            }\n\n            if (self.config.animation.animateResizeContainer) {\n                self.dom.parent.style[mixitup.features.transitionProp] =\n                    'height ' + self.config.animation.duration + 'ms ease, ' +\n                    'width ' + self.config.animation.duration + 'ms ease ';\n\n                requestAnimationFrame(function() {\n                    if (\n                        operation.startHeight !== operation.newHeight &&\n                        operation.viewportDeltaY !== operation.startHeight - operation.newHeight\n                    ) {\n                        self.dom.parent.style.height = operation.newHeight + 'px';\n                    }\n\n                    if (\n                        operation.startWidth !== operation.newWidth &&\n                        operation.viewportDeltaX !== operation.startWidth - operation.newWidth\n                    ) {\n                        self.dom.parent.style.width = operation.newWidth + 'px';\n                    }\n                });\n            }\n\n            if (operation.willChangeLayout) {\n                h.removeClass(self.dom.container, self.config.layout.ContainerClassName);\n                h.addClass(self.dom.container, operation.newContainerClassName);\n            }\n\n            self.callActions('afterMoveTargets', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @return  {boolean}\n         */\n\n        hasEffect: function() {\n            var self        = this,\n                EFFECTABLES = [\n                    'scale',\n                    'translateX', 'translateY', 'translateZ',\n                    'rotateX', 'rotateY', 'rotateZ'\n                ],\n                effectName  = '',\n                effect      = null,\n                result      = false,\n                value       = -1,\n                i           = -1;\n\n            if (self.effectsIn.opacity !== 1) {\n                return self.callFilters('resultHasEffect', true, arguments);\n            }\n\n            for (i = 0; effectName = EFFECTABLES[i]; i++) {\n                effect  = self.effectsIn[effectName];\n                value   = (typeof effect && effect.value !== 'undefined') ?\n                    effect.value : effect;\n\n                if (value !== 0) {\n                    result = true;\n\n                    break;\n                }\n            }\n\n            return self.callFilters('resultHasEffect', result, arguments);\n        },\n\n        /**\n         * Determines if a target element will transition in\n         * some fasion and therefore requires binding of\n         * transitionEnd\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {string}        statusChange\n         * @param   {boolean}       hasEffect\n         * @param   {StyleData}     posIn\n         * @param   {StyleData}     posOut\n         * @return  {boolean}\n         */\n\n        willTransition: function(statusChange, hasEffect, posIn, posOut) {\n            var self    = this,\n                result  = false;\n\n            if (!h.isVisible(self.dom.container)) {\n                // If the container is not visible, the transitionEnd\n                // event will not occur and MixItUp will hang\n\n                result = false;\n            } else if (\n                (statusChange !== 'none' && hasEffect) ||\n                posIn.x !== posOut.x ||\n                posIn.y !== posOut.y\n            ) {\n                // If opacity and/or translate will change\n\n                result = true;\n            } else if (self.config.animation.animateResizeTargets) {\n                // Check if width, height or margins will change\n\n                result = (\n                    posIn.width !== posOut.width ||\n                    posIn.height !== posOut.height ||\n                    posIn.marginRight !== posOut.marginRight ||\n                    posIn.marginTop !== posOut.marginTop\n                );\n            } else {\n                result = false;\n            }\n\n            return self.callFilters('resultWillTransition', result, arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        checkProgress: function(operation) {\n            var self = this;\n\n            self.targetsDone++;\n\n            if (self.targetsBound === self.targetsDone) {\n                self.cleanUp(operation);\n            }\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        cleanUp: function(operation) {\n            var self                = this,\n                target              = null,\n                whitespaceBefore    = null,\n                whitespaceAfter     = null,\n                nextInQueue         = null,\n                i                   = -1;\n\n            self.callActions('beforeCleanUp', arguments);\n\n            self.targetsMoved          =\n                self.targetsImmovable  =\n                self.targetsBound      =\n                self.targetsDone       = 0;\n\n            for (i = 0; target = operation.show[i]; i++) {\n                target.cleanUp();\n\n                target.show();\n            }\n\n            for (i = 0; target = operation.toHide[i]; i++) {\n                target.cleanUp();\n\n                target.hide();\n            }\n\n            if (operation.willSort) {\n                self.printSort(false, operation);\n            }\n\n            // Remove any styles applied to the parent container\n\n            self.dom.parent.style[mixitup.features.transitionProp]             =\n                self.dom.parent.style.height                                   =\n                self.dom.parent.style.width                                    =\n                self.dom.parent.style.overflow                                 =\n                self.dom.parent.style[mixitup.features.perspectiveProp]        =\n                self.dom.parent.style[mixitup.features.perspectiveOriginProp]  = '';\n\n            if (operation.willChangeLayout) {\n                h.removeClass(self.dom.container, operation.startContainerClassName);\n                h.addClass(self.dom.container, operation.newContainerClassName);\n            }\n\n            if (operation.toRemove.length) {\n                for (i = 0; target = self.targets[i]; i++) {\n                    if (operation.toRemove.indexOf(target) > -1) {\n                        if (\n                            (whitespaceBefore = target.dom.el.previousSibling) && whitespaceBefore.nodeName === '#text' &&\n                            (whitespaceAfter = target.dom.el.nextSibling) && whitespaceAfter.nodeName === '#text'\n                        ) {\n                            h.removeWhitespace(whitespaceBefore);\n                        }\n\n                        if (!operation.willSort) {\n                            // NB: Sorting will remove targets as a bi-product of `printSort()`\n\n                            self.dom.parent.removeChild(target.dom.el);\n                        }\n\n                        self.targets.splice(i, 1);\n\n                        target.isInDom = false;\n\n                        i--;\n                    }\n                }\n\n                // Since targets have been removed, the original order must be updated\n\n                self.origOrder = self.targets;\n            }\n\n            if (operation.willSort) {\n                self.targets = operation.newOrder;\n            }\n\n            self.state = operation.newState;\n            self.lastOperation = operation;\n\n            self.dom.targets = self.state.targets;\n\n            // mixEnd\n\n            mixitup.events.fire('mixEnd', self.dom.container, {\n                state: self.state,\n                instance: self\n            }, self.dom.document);\n\n            if (typeof self.config.callbacks.onMixEnd === 'function') {\n                self.config.callbacks.onMixEnd.call(self.dom.container, self.state, self);\n            }\n\n            if (operation.hasFailed) {\n                // mixFail\n\n                mixitup.events.fire('mixFail', self.dom.container, {\n                    state: self.state,\n                    instance: self\n                }, self.dom.document);\n\n                if (typeof self.config.callbacks.onMixFail === 'function') {\n                    self.config.callbacks.onMixFail.call(self.dom.container, self.state, self);\n                }\n\n                h.addClass(self.dom.container, h.getClassname(self.config.classNames, 'container', self.config.classNames.modifierFailed));\n            }\n\n            // User-defined callback function\n\n            if (typeof self.userCallback === 'function') {\n                self.userCallback.call(self.dom.container, self.state, self);\n            }\n\n            if (typeof self.userDeferred.resolve === 'function') {\n                self.userDeferred.resolve(self.state);\n            }\n\n            self.userCallback  = null;\n            self.userDeferred  = null;\n            self.lastClicked   = null;\n            self.isToggling    = false;\n            self.isBusy        = false;\n\n            if (self.queue.length) {\n                self.callActions('beforeReadQueueCleanUp', arguments);\n\n                nextInQueue = self.queue.shift();\n\n                // Update non-public API properties stored in queue\n\n                self.userDeferred  = nextInQueue.deferred;\n                self.isToggling    = nextInQueue.isToggling;\n                self.lastClicked   = nextInQueue.triggerElement;\n\n                if (nextInQueue.instruction.command instanceof mixitup.CommandMultimix) {\n                    self.multimix.apply(self, nextInQueue.args);\n                } else {\n                    self.dataset.apply(self, nextInQueue.args);\n                }\n            }\n\n            self.callActions('afterCleanUp', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Array<*>}  args\n         * @return  {mixitup.UserInstruction}\n         */\n\n        parseMultimixArgs: function(args) {\n            var self        = this,\n                instruction = new mixitup.UserInstruction(),\n                arg         = null,\n                i           = -1;\n\n            instruction.animate = self.config.animation.enable;\n            instruction.command = new mixitup.CommandMultimix();\n\n            for (i = 0; i < args.length; i++) {\n                arg = args[i];\n\n                if (arg === null) continue;\n\n                if (typeof arg === 'object') {\n                    h.extend(instruction.command, arg);\n                } else if (typeof arg === 'boolean') {\n                    instruction.animate = arg;\n                } else if (typeof arg === 'function') {\n                    instruction.callback = arg;\n                }\n            }\n\n            // Coerce arbitrary command arguments into typed command objects\n\n            if (instruction.command.insert && !(instruction.command.insert instanceof mixitup.CommandInsert)) {\n                instruction.command.insert = self.parseInsertArgs([instruction.command.insert]).command;\n            }\n\n            if (instruction.command.remove && !(instruction.command.remove instanceof mixitup.CommandRemove)) {\n                instruction.command.remove = self.parseRemoveArgs([instruction.command.remove]).command;\n            }\n\n            if (instruction.command.filter && !(instruction.command.filter instanceof mixitup.CommandFilter)) {\n                instruction.command.filter = self.parseFilterArgs([instruction.command.filter]).command;\n            }\n\n            if (instruction.command.sort && !(instruction.command.sort instanceof mixitup.CommandSort)) {\n                instruction.command.sort = self.parseSortArgs([instruction.command.sort]).command;\n            }\n\n            if (instruction.command.changeLayout && !(instruction.command.changeLayout instanceof mixitup.CommandChangeLayout)) {\n                instruction.command.changeLayout = self.parseChangeLayoutArgs([instruction.command.changeLayout]).command;\n            }\n\n            instruction = self.callFilters('instructionParseMultimixArgs', instruction, arguments);\n\n            h.freeze(instruction);\n\n            return instruction;\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Array<*>}  args\n         * @return  {mixitup.UserInstruction}\n         */\n\n        parseFilterArgs: function(args) {\n            var self        = this,\n                instruction = new mixitup.UserInstruction(),\n                arg         = null,\n                i           = -1;\n\n            instruction.animate = self.config.animation.enable;\n            instruction.command = new mixitup.CommandFilter();\n\n            for (i = 0; i < args.length; i++) {\n                arg = args[i];\n\n                if (typeof arg === 'string') {\n                    // Selector\n\n                    instruction.command.selector = arg;\n                } else if (arg === null) {\n                    instruction.command.collection = [];\n                } else if (typeof arg === 'object' && h.isElement(arg, self.dom.document)) {\n                    // Single element\n\n                    instruction.command.collection = [arg];\n                } else if (typeof arg === 'object' && typeof arg.length !== 'undefined') {\n                    // Multiple elements in array, NodeList or jQuery collection\n\n                    instruction.command.collection = h.arrayFromList(arg);\n                } else if (typeof arg === 'object') {\n                    // Filter command\n\n                    h.extend(instruction.command, arg);\n                } else if (typeof arg === 'boolean') {\n                    instruction.animate = arg;\n                } else if (typeof arg === 'function') {\n                    instruction.callback = arg;\n                }\n            }\n\n            if (instruction.command.selector && instruction.command.collection) {\n                throw new Error(mixitup.messages.errorFilterInvalidArguments());\n            }\n\n            instruction = self.callFilters('instructionParseFilterArgs', instruction, arguments);\n\n            h.freeze(instruction);\n\n            return instruction;\n        },\n\n        parseSortArgs: function(args) {\n            var self        = this,\n                instruction = new mixitup.UserInstruction(),\n                arg         = null,\n                sortString  = '',\n                i           = -1;\n\n            instruction.animate = self.config.animation.enable;\n            instruction.command = new mixitup.CommandSort();\n\n            for (i = 0; i < args.length; i++) {\n                arg = args[i];\n\n                if (arg === null) continue;\n\n                switch (typeof arg) {\n                    case 'string':\n                        // Sort string\n\n                        sortString = arg;\n\n                        break;\n                    case 'object':\n                        // Array of element references\n\n                        if (arg.length) {\n                            instruction.command.collection = h.arrayFromList(arg);\n                        }\n\n                        break;\n                    case 'boolean':\n                        instruction.animate = arg;\n\n                        break;\n                    case 'function':\n                        instruction.callback = arg;\n\n                        break;\n                }\n            }\n\n            if (sortString) {\n                instruction.command = self.parseSortString(sortString, instruction.command);\n            }\n\n            instruction = self.callFilters('instructionParseSortArgs', instruction, arguments);\n\n            h.freeze(instruction);\n\n            return instruction;\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Array<*>}  args\n         * @return  {mixitup.UserInstruction}\n         */\n\n        parseInsertArgs: function(args) {\n            var self        = this,\n                instruction = new mixitup.UserInstruction(),\n                arg         = null,\n                i           = -1;\n\n            instruction.animate = self.config.animation.enable;\n            instruction.command = new mixitup.CommandInsert();\n\n            for (i = 0; i < args.length; i++) {\n                arg = args[i];\n\n                if (arg === null) continue;\n\n                if (typeof arg === 'number') {\n                    // Insert index\n\n                    instruction.command.index = arg;\n                } else if (typeof arg === 'string' && ['before', 'after'].indexOf(arg) > -1) {\n                    // 'before'/'after'\n\n                    instruction.command.position = arg;\n                } else if (typeof arg === 'string') {\n                    // Markup\n\n                    instruction.command.collection =\n                        h.arrayFromList(h.createElement(arg).childNodes);\n                } else if (typeof arg === 'object' && h.isElement(arg, self.dom.document)) {\n                    // Single element\n\n                    !instruction.command.collection.length ?\n                        (instruction.command.collection = [arg]) :\n                        (instruction.command.sibling = arg);\n                } else if (typeof arg === 'object' && arg.length) {\n                    // Multiple elements in array or jQuery collection\n\n                    !instruction.command.collection.length ?\n                        (instruction.command.collection = arg) :\n                        instruction.command.sibling = arg[0];\n                } else if (typeof arg === 'object' && arg.childNodes && arg.childNodes.length) {\n                    // Document fragment\n\n                    !instruction.command.collection.length ?\n                        instruction.command.collection = h.arrayFromList(arg.childNodes) :\n                        instruction.command.sibling = arg.childNodes[0];\n                } else if (typeof arg === 'object') {\n                    // Insert command\n\n                    h.extend(instruction.command, arg);\n                } else if (typeof arg === 'boolean') {\n                    instruction.animate = arg;\n                } else if (typeof arg === 'function') {\n                    instruction.callback = arg;\n                }\n            }\n\n            if (instruction.command.index && instruction.command.sibling) {\n                throw new Error(mixitup.messages.errorInsertInvalidArguments());\n            }\n\n            if (!instruction.command.collection.length && self.config.debug.showWarnings) {\n                console.warn(mixitup.messages.warningInsertNoElements());\n            }\n\n            instruction = self.callFilters('instructionParseInsertArgs', instruction, arguments);\n\n            h.freeze(instruction);\n\n            return instruction;\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Array<*>}  args\n         * @return  {mixitup.UserInstruction}\n         */\n\n        parseRemoveArgs: function(args) {\n            var self        = this,\n                instruction = new mixitup.UserInstruction(),\n                target      = null,\n                arg         = null,\n                i           = -1;\n\n            instruction.animate = self.config.animation.enable;\n            instruction.command = new mixitup.CommandRemove();\n\n            for (i = 0; i < args.length; i++) {\n                arg = args[i];\n\n                if (arg === null) continue;\n\n                switch (typeof arg) {\n                    case 'number':\n                        if (self.targets[arg]) {\n                            instruction.command.targets[0] = self.targets[arg];\n                        }\n\n                        break;\n                    case 'string':\n                        instruction.command.collection = h.arrayFromList(self.dom.parent.querySelectorAll(arg));\n\n                        break;\n                    case 'object':\n                        if (arg && arg.length) {\n                            instruction.command.collection = arg;\n                        } else if (h.isElement(arg, self.dom.document)) {\n                            instruction.command.collection = [arg];\n                        } else {\n                            // Remove command\n\n                            h.extend(instruction.command, arg);\n                        }\n\n                        break;\n                    case 'boolean':\n                        instruction.animate = arg;\n\n                        break;\n                    case 'function':\n                        instruction.callback = arg;\n\n                        break;\n                }\n            }\n\n            if (instruction.command.collection.length) {\n                for (i = 0; target = self.targets[i]; i++) {\n                    if (instruction.command.collection.indexOf(target.dom.el) > -1) {\n                        instruction.command.targets.push(target);\n                    }\n                }\n            }\n\n            if (!instruction.command.targets.length && self.config.debug.showWarnings) {\n                console.warn(mixitup.messages.warningRemoveNoElements());\n            }\n\n            h.freeze(instruction);\n\n            return instruction;\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Array<*>}  args\n         * @return  {mixitup.UserInstruction}\n         */\n\n        parseDatasetArgs: function(args) {\n            var self        = this,\n                instruction = new mixitup.UserInstruction(),\n                arg         = null,\n                i           = -1;\n\n            instruction.animate = self.config.animation.enable;\n            instruction.command = new mixitup.CommandDataset();\n\n            for (i = 0; i < args.length; i++) {\n                arg = args[i];\n\n                if (arg === null) continue;\n\n                switch (typeof arg) {\n                    case 'object':\n                        if (Array.isArray(arg) || typeof arg.length === 'number') {\n                            instruction.command.dataset = arg;\n                        } else {\n                            // Change layout command\n\n                            h.extend(instruction.command, arg);\n                        }\n\n                        break;\n                    case 'boolean':\n                        instruction.animate = arg;\n\n                        break;\n                    case 'function':\n                        instruction.callback = arg;\n\n                        break;\n                }\n            }\n\n            h.freeze(instruction);\n\n            return instruction;\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Array<*>}  args\n         * @return  {mixitup.UserInstruction}\n         */\n\n        parseChangeLayoutArgs: function(args) {\n            var self        = this,\n                instruction = new mixitup.UserInstruction(),\n                arg         = null,\n                i           = -1;\n\n            instruction.animate = self.config.animation.enable;\n            instruction.command = new mixitup.CommandChangeLayout();\n\n            for (i = 0; i < args.length; i++) {\n                arg = args[i];\n\n                if (arg === null) continue;\n\n                switch (typeof arg) {\n                    case 'string':\n                        instruction.command.containerClassName = arg;\n\n                        break;\n                    case 'object':\n                        // Change layout command\n\n                        h.extend(instruction.command, arg);\n\n                        break;\n                    case 'boolean':\n                        instruction.animate = arg;\n\n                        break;\n                    case 'function':\n                        instruction.callback = arg;\n\n                        break;\n                }\n            }\n\n            h.freeze(instruction);\n\n            return instruction;\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since       3.0.0\n         * @param       {mixitup.QueueItem}         queueItem\n         * @return      {Promise.<mixitup.State>}\n         */\n\n        queueMix: function(queueItem) {\n            var self            = this,\n                deferred        = null,\n                toggleSelector  = '';\n\n            self.callActions('beforeQueueMix', arguments);\n\n            deferred = h.defer(mixitup.libraries);\n\n            if (self.config.animation.queue && self.queue.length < self.config.animation.queueLimit) {\n                queueItem.deferred = deferred;\n\n                self.queue.push(queueItem);\n\n                // Keep controls in sync with user interactions. Mixer will catch up as it drains the queue.\n\n                if (self.config.controls.enable) {\n                    if (self.isToggling) {\n                        self.buildToggleArray(queueItem.instruction.command);\n\n                        toggleSelector = self.getToggleSelector();\n\n                        self.updateControls({\n                            filter: {\n                                selector: toggleSelector\n                            }\n                        });\n                    } else {\n                        self.updateControls(queueItem.instruction.command);\n                    }\n                }\n            } else {\n                if (self.config.debug.showWarnings) {\n                    console.warn(mixitup.messages.warningMultimixInstanceQueueFull());\n                }\n\n                deferred.resolve(self.state);\n\n                mixitup.events.fire('mixBusy', self.dom.container, {\n                    state: self.state,\n                    instance: self\n                }, self.dom.document);\n\n                if (typeof self.config.callbacks.onMixBusy === 'function') {\n                    self.config.callbacks.onMixBusy.call(self.dom.container, self.state, self);\n                }\n            }\n\n            return self.callFilters('promiseQueueMix', deferred.promise, arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Array.<object>}    newDataset\n         * @return  {Operation}\n         */\n\n        getDataOperation: function(newDataset) {\n            var self                = this,\n                operation           = new mixitup.Operation(),\n                startDataset        = [];\n\n            operation = self.callFilters('operationUnmappedGetDataOperation', operation, arguments);\n\n            if (self.dom.targets.length && !(startDataset = (self.state.activeDataset || [])).length) {\n                throw new Error(mixitup.messages.errorDatasetNotSet());\n            }\n\n            operation.id            = h.randomHex();\n            operation.startState    = self.state;\n            operation.startDataset  = startDataset;\n            operation.newDataset    = newDataset.slice();\n\n            self.diffDatasets(operation);\n\n            operation.startOrder = self.targets;\n            operation.newOrder = operation.show;\n\n            if (self.config.animation.enable) {\n                self.getStartMixData(operation);\n                self.setInter(operation);\n\n                operation.docState = h.getDocumentState(self.dom.document);\n\n                self.getInterMixData(operation);\n                self.setFinal(operation);\n                self.getFinalMixData(operation);\n\n                self.parseEffects();\n\n                operation.hasEffect = self.hasEffect();\n\n                self.getTweenData(operation);\n            }\n\n            self.targets = operation.show.slice();\n\n            operation.newState = self.buildState(operation);\n\n            // NB: Targets to be removed must be included in `self.targets` for removal during clean up,\n            // but are added after state is built so that state is accurate\n\n            Array.prototype.push.apply(self.targets, operation.toRemove);\n\n            operation = self.callFilters('operationMappedGetDataOperation', operation, arguments);\n\n            return operation;\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {mixitup.Operation} operation\n         * @return  {void}\n         */\n\n        diffDatasets: function(operation) {\n            var self                = this,\n                persistantStartIds  = [],\n                persistantNewIds    = [],\n                insertedTargets     = [],\n                data                = null,\n                target              = null,\n                el                  = null,\n                frag                = null,\n                nextEl              = null,\n                uids                = {},\n                id                  = '',\n                i                   = -1;\n\n            self.callActions('beforeDiffDatasets', arguments);\n\n            for (i = 0; data = operation.newDataset[i]; i++) {\n                if (typeof (id = data[self.config.data.uidKey]) === 'undefined' || id.toString().length < 1) {\n                    throw new TypeError(mixitup.messages.errorDatasetInvalidUidKey({\n                        uidKey: self.config.data.uidKey\n                    }));\n                }\n\n                if (!uids[id]) {\n                    uids[id] = true;\n                } else {\n                    throw new Error(mixitup.messages.errorDatasetDuplicateUid({\n                        uid: id\n                    }));\n                }\n\n                if ((target = self.cache[id]) instanceof mixitup.Target) {\n                    // Already in cache\n\n                    if (self.config.data.dirtyCheck && !h.deepEquals(data, target.data)) {\n                        // change detected\n\n                        el = target.render(data);\n\n                        target.data = data;\n\n                        if (el !== target.dom.el) {\n                            // Update target element reference\n\n                            if (target.isInDom) {\n                                target.unbindEvents();\n\n                                self.dom.parent.replaceChild(el, target.dom.el);\n                            }\n\n                            if (!target.isShown) {\n                                el.style.display = 'none';\n                            }\n\n                            target.dom.el = el;\n\n                            if (target.isInDom) {\n                                target.bindEvents();\n                            }\n                        }\n                    }\n\n                    el = target.dom.el;\n                } else {\n                    // New target\n\n                    target = new mixitup.Target();\n\n                    target.init(null, self, data);\n\n                    target.hide();\n                }\n\n                if (!target.isInDom) {\n                    // Adding to DOM\n\n                    if (!frag) {\n                        // Open frag\n\n                        frag = self.dom.document.createDocumentFragment();\n                    }\n\n                    if (frag.lastElementChild) {\n                        frag.appendChild(self.dom.document.createTextNode(' '));\n                    }\n\n                    frag.appendChild(target.dom.el);\n\n                    target.isInDom = true;\n\n                    target.unbindEvents();\n                    target.bindEvents();\n                    target.hide();\n\n                    operation.toShow.push(target);\n\n                    insertedTargets.push(target);\n                } else {\n                    // Already in DOM\n\n                    nextEl = target.dom.el.nextElementSibling;\n\n                    persistantNewIds.push(id);\n\n                    if (frag) {\n                        // Close and insert previously opened frag\n\n                        if (frag.lastElementChild) {\n                            frag.appendChild(self.dom.document.createTextNode(' '));\n                        }\n\n                        self.insertDatasetFrag(frag, target.dom.el, insertedTargets);\n\n                        frag = null;\n                    }\n                }\n\n                operation.show.push(target);\n            }\n\n            if (frag) {\n                // Unclosed frag remaining\n\n                nextEl = nextEl || self.config.layout.siblingAfter;\n\n                if (nextEl) {\n                    frag.appendChild(self.dom.document.createTextNode(' '));\n                }\n\n                self.insertDatasetFrag(frag, nextEl, insertedTargets);\n            }\n\n            for (i = 0; data = operation.startDataset[i]; i++) {\n                id = data[self.config.data.uidKey];\n\n                target = self.cache[id];\n\n                if (operation.show.indexOf(target) < 0) {\n                    // Previously shown but now absent\n\n                    operation.hide.push(target);\n                    operation.toHide.push(target);\n                    operation.toRemove.push(target);\n                } else {\n                    persistantStartIds.push(id);\n                }\n            }\n\n            if (!h.isEqualArray(persistantStartIds, persistantNewIds)) {\n                operation.willSort = true;\n            }\n\n            self.callActions('afterDiffDatasets', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.1.5\n         * @param   {DocumentFragment}          frag\n         * @param   {(HTMLElement|null)}        nextEl\n         * @param   {Array.<mixitup.Target>}    targets\n         * @return  {void}\n         */\n\n        insertDatasetFrag: function(frag, nextEl, targets) {\n            var self = this;\n            var insertAt = nextEl ? Array.from(self.dom.parent.children).indexOf(nextEl) : self.targets.length;\n\n            self.dom.parent.insertBefore(frag, nextEl);\n\n            while (targets.length) {\n                self.targets.splice(insertAt, 0, targets.shift());\n\n                insertAt++;\n            }\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {mixitup.CommandSort} sortCommandA\n         * @param   {mixitup.CommandSort} sortCommandB\n         * @return  {boolean}\n         */\n\n        willSort: function(sortCommandA, sortCommandB) {\n            var self    = this,\n                result  = false;\n\n            if (\n                self.config.behavior.liveSort ||\n                sortCommandA.order       === 'random' ||\n                sortCommandA.attribute   !== sortCommandB.attribute ||\n                sortCommandA.order       !== sortCommandB.order ||\n                sortCommandA.collection  !== sortCommandB.collection ||\n                (sortCommandA.next === null && sortCommandB.next) ||\n                (sortCommandA.next && sortCommandB.next === null)\n            ) {\n                result = true;\n            } else if (sortCommandA.next && sortCommandB.next) {\n                result = self.willSort(sortCommandA.next, sortCommandB.next);\n            } else {\n                result = false;\n            }\n\n            return self.callFilters('resultWillSort', result, arguments);\n        },\n\n        /**\n         * A shorthand method for `.filter('all')`. Shows all targets in the container.\n         *\n         * @example\n         *\n         * .show()\n         *\n         * @example <caption>Example: Showing all targets</caption>\n         *\n         * mixer.show()\n         *     .then(function(state) {\n         *         console.log(state.totalShow === state.totalTargets); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @return      {Promise.<mixitup.State>}\n         */\n\n        show: function() {\n            var self = this;\n\n            return self.filter('all');\n        },\n\n        /**\n         * A shorthand method for `.filter('none')`. Hides all targets in the container.\n         *\n         * @example\n         *\n         * .hide()\n         *\n         * @example <caption>Example: Hiding all targets</caption>\n         *\n         * mixer.hide()\n         *     .then(function(state) {\n         *         console.log(state.totalShow === 0); // true\n         *         console.log(state.totalHide === state.totalTargets); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @return      {Promise.<mixitup.State>}\n         */\n\n        hide: function() {\n            var self = this;\n\n            return self.filter('none');\n        },\n\n        /**\n         * Returns a boolean indicating whether or not a MixItUp operation is\n         * currently in progress.\n         *\n         * @example\n         *\n         * .isMixing()\n         *\n         * @example <caption>Example: Checking the status of a mixer</caption>\n         *\n         * mixer.sort('random', function() {\n         *     console.log(mixer.isMixing()) // false\n         * });\n         *\n         * console.log(mixer.isMixing()) // true\n         *\n         * @public\n         * @instance\n         * @since   2.0.0\n         * @return  {boolean}\n         */\n\n        isMixing: function() {\n            var self = this;\n\n            return self.isBusy;\n        },\n\n        /**\n         * Filters all targets in the container by a provided selector string, or the values `'all'`\n         * or `'none'`. Only targets matching the selector will be shown.\n         *\n         * @example\n         *\n         * .filter(selector [, animate] [, callback])\n         *\n         * @example <caption>Example 1: Filtering targets by a class selector</caption>\n         *\n         * mixer.filter('.category-a')\n         *     .then(function(state) {\n         *         console.log(state.totalShow === containerEl.querySelectorAll('.category-a').length); // true\n         *     });\n         *\n         * @example <caption>Example 2: Filtering targets by an attribute selector</caption>\n         *\n         * mixer.filter('[data-category~=\"a\"]')\n         *     .then(function(state) {\n         *         console.log(state.totalShow === containerEl.querySelectorAll('[data-category~=\"a\"]').length); // true\n         *     });\n         *\n         * @example <caption>Example 3: Filtering targets by a compound selector</caption>\n         *\n         * // Show only those targets with the classes 'category-a' AND 'category-b'\n         *\n         * mixer.filter('.category-a.category-c')\n         *     .then(function(state) {\n         *         console.log(state.totalShow === containerEl.querySelectorAll('.category-a.category-c').length); // true\n         *     });\n         *\n         * @example <caption>Example 4: Filtering via an element collection</caption>\n         *\n         * var collection = Array.from(container.querySelectorAll('.mix'));\n         *\n         * console.log(collection.length); // 34\n         *\n         * // Filter the collection manually using Array.prototype.filter\n         *\n         * var filtered = collection.filter(function(target) {\n         *    return parseInt(target.getAttribute('data-price')) > 10;\n         * });\n         *\n         * console.log(filtered.length); // 22\n         *\n         * // Pass the filtered collection to MixItUp\n         *\n         * mixer.filter(filtered)\n         *    .then(function(state) {\n         *        console.log(state.activeFilter.collection.length === 22); // true\n         *    });\n         *\n         * @public\n         * @instance\n         * @since       2.0.0\n         * @param       {(string|HTMLElement|Array.<HTMLElement>)} selector\n         *      Any valid CSS selector (i.e. `'.category-a'`), or the values `'all'` or `'none'`. The filter method also accepts a reference to single target element or a collection of target elements to show.\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        filter: function() {\n            var self        = this,\n                instruction = self.parseFilterArgs(arguments);\n\n            return self.multimix({\n                filter: instruction.command\n            }, instruction.animate, instruction.callback);\n        },\n\n        /**\n         * Adds an additional selector to the currently active filter selector, concatenating\n         * as per the logic defined in `controls.toggleLogic`.\n         *\n         * @example\n         *\n         * .toggleOn(selector [, animate] [, callback])\n         *\n         * @example <caption>Example: Toggling on a filter selector</caption>\n         *\n         * console.log(mixer.getState().activeFilter.selector); // '.category-a'\n         *\n         * mixer.toggleOn('.category-b')\n         *     .then(function(state) {\n         *         console.log(state.activeFilter.selector); // '.category-a, .category-b'\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {string}    selector\n         *      Any valid CSS selector (i.e. `'.category-a'`)\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        toggleOn: function() {\n            var self            = this,\n                instruction     = self.parseFilterArgs(arguments),\n                selector        = instruction.command.selector,\n                toggleSelector  = '';\n\n            self.isToggling = true;\n\n            if (self.toggleArray.indexOf(selector) < 0) {\n                self.toggleArray.push(selector);\n            }\n\n            toggleSelector = self.getToggleSelector();\n\n            return self.multimix({\n                filter: toggleSelector\n            }, instruction.animate, instruction.callback);\n        },\n\n        /**\n         * Removes a selector from the active filter selector.\n         *\n         * @example\n         *\n         * .toggleOff(selector [, animate] [, callback])\n         *\n         * @example <caption>Example: Toggling off a filter selector</caption>\n         *\n         * console.log(mixer.getState().activeFilter.selector); // '.category-a, .category-b'\n         *\n         * mixer.toggleOff('.category-b')\n         *     .then(function(state) {\n         *         console.log(state.activeFilter.selector); // '.category-a'\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {string}    selector\n         *      Any valid CSS selector (i.e. `'.category-a'`)\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        toggleOff: function() {\n            var self            = this,\n                instruction     = self.parseFilterArgs(arguments),\n                selector        = instruction.command.selector,\n                selectorIndex   = self.toggleArray.indexOf(selector),\n                toggleSelector  = '';\n\n            self.isToggling = true;\n\n            if (selectorIndex > -1) {\n                self.toggleArray.splice(selectorIndex, 1);\n            }\n\n            toggleSelector = self.getToggleSelector();\n\n            return self.multimix({\n                filter: toggleSelector\n            }, instruction.animate, instruction.callback);\n        },\n\n        /**\n         * Sorts all targets in the container according to a provided sort string.\n         *\n         * @example\n         *\n         * .sort(sortString [, animate] [, callback])\n         *\n         * @example <caption>Example 1: Sorting by the default DOM order</caption>\n         *\n         * // Reverse the default order of the targets\n         *\n         * mixer.sort('default:desc')\n         *     .then(function(state) {\n         *         console.log(state.activeSort.attribute === 'default'); // true\n         *         console.log(state.activeSort.order === 'desc'); // true\n         *     });\n         *\n         * @example <caption>Example 2: Sorting by a custom data-attribute</caption>\n         *\n         * // Sort the targets by the value of a `data-published-date` attribute\n         *\n         * mixer.sort('published-date:asc')\n         *     .then(function(state) {\n         *         console.log(state.activeSort.attribute === 'published-date'); // true\n         *         console.log(state.activeSort.order === 'asc'); // true\n         *     });\n         *\n         * @example <caption>Example 3: Sorting by multiple attributes</caption>\n         *\n         * // Sort the targets by the value of a `data-published-date` attribute, then by `data-title`\n         *\n         * mixer.sort('published-date:desc data-title:asc')\n         *     .then(function(state) {\n         *         console.log(state.activeSort.attribute === 'published-date'); // true\n         *         console.log(state.activeSort.order === 'desc'); // true\n         *\n         *         console.log(state.activeSort.next.attribute === 'title'); // true\n         *         console.log(state.activeSort.next.order === 'asc'); // true\n         *     });\n         *\n         * @example <caption>Example 4: Sorting by random</caption>\n         *\n         * mixer.sort('random')\n         *     .then(function(state) {\n         *         console.log(state.activeSort.order === 'random') // true\n         *     });\n         *\n         * @example <caption>Example 5: Sorting via an element collection</caption>\n         *\n         * var collection = Array.from(container.querySelectorAll('.mix'));\n         *\n         * // Swap the position of two elements in the collection:\n         *\n         * var temp = collection[1];\n         *\n         * collection[1] = collection[0];\n         * collection[0] = temp;\n         *\n         * // Pass the sorted collection to MixItUp\n         *\n         * mixer.sort(collection)\n         *     .then(function(state) {\n         *         console.log(state.targets[0] === collection[0]); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       2.0.0\n         * @param       {(string|Array.<HTMLElement>)}    sortString\n         *      A valid sort string (e.g. `'default'`, `'published-date:asc'`, or `'random'`). The sort method also accepts an array of all target elements in a user-defined order.\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        sort: function() {\n            var self        = this,\n                instruction = self.parseSortArgs(arguments);\n\n            return self.multimix({\n                sort: instruction.command\n            }, instruction.animate, instruction.callback);\n        },\n\n        /**\n         * Changes the layout of the container by adding, removing or updating a\n         * layout-specific class name. If `animation.animateResizetargets` is\n         * enabled, MixItUp will attempt to gracefully animate the width, height,\n         * and position of targets between layout states.\n         *\n         * @example\n         *\n         * .changeLayout(containerClassName [, animate] [, callback])\n         *\n         * @example <caption>Example 1: Adding a new class name to the container</caption>\n         *\n         * mixer.changeLayout('container-list')\n         *      .then(function(state) {\n         *          console.log(state.activeContainerClass === 'container-list'); // true\n         *      });\n         *\n         * @example <caption>Example 2: Removing a previously added class name from the container</caption>\n         *\n         * mixer.changeLayout('')\n         *      .then(function(state) {\n         *          console.log(state.activeContainerClass === ''); // true\n         *      });\n         *\n         * @public\n         * @instance\n         * @since       2.0.0\n         * @param       {string}    containerClassName\n         *      A layout-specific class name to add to the container.\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        changeLayout: function() {\n            var self        = this,\n                instruction = self.parseChangeLayoutArgs(arguments);\n\n            return self.multimix({\n                changeLayout: instruction.command\n            }, instruction.animate, instruction.callback);\n        },\n\n        /**\n         * Updates the contents and order of the container to reflect the provided dataset,\n         * if the dataset API is in use.\n         *\n         * The dataset API is designed for use in API-driven JavaScript applications, and\n         * can be used instead of DOM-based methods such as `.filter()`, `.sort()`,\n         * `.insert()`, etc. When used, insertion, removal, sorting and pagination can be\n         * achieved purely via changes to your data model, without the uglyness of having\n         * to interact with or query the DOM directly.\n         *\n         * @example\n         *\n         * .dataset(dataset [, animate] [, callback])\n         *\n         * @example <caption>Example 1: Rendering a dataset</caption>\n         *\n         * var myDataset = [\n         *     {id: 1, ...},\n         *     {id: 2, ...},\n         *     {id: 3, ...}\n         * ];\n         *\n         * mixer.dataset(myDataset)\n         *     .then(function(state) {\n         *         console.log(state.totalShow === 3); // true\n         *     });\n         *\n         * @example <caption>Example 2: Sorting a dataset</caption>\n         *\n         * // Create a new dataset in reverse order\n         *\n         * var newDataset = myDataset.slice().reverse();\n         *\n         * mixer.dataset(newDataset)\n         *     .then(function(state) {\n         *         console.log(state.activeDataset[0] === myDataset[2]); // true\n         *     });\n         *\n         * @example <caption>Example 3: Removing an item from the dataset</caption>\n         *\n         * console.log(myDataset.length); // 3\n         *\n         * // Create a new dataset with the last item removed.\n         *\n         * var newDataset = myDataset.slice().pop();\n         *\n         * mixer.dataset(newDataset)\n         *     .then(function(state) {\n         *         console.log(state.totalShow === 2); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {Array.<object>}    dataset\n         *      An array of objects, each one representing the underlying data model of a target to be rendered.\n         * @param       {boolean}           [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}          [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        dataset: function() {\n            var self        = this,\n                instruction = self.parseDatasetArgs(arguments),\n                operation   = null,\n                queueItem   = null,\n                animate     = false;\n\n            self.callActions('beforeDataset', arguments);\n\n            if (!self.isBusy) {\n                if (instruction.callback) self.userCallback = instruction.callback;\n\n                animate = (instruction.animate ^ self.config.animation.enable) ? instruction.animate : self.config.animation.enable;\n\n                operation = self.getDataOperation(instruction.command.dataset);\n\n                return self.goMix(animate, operation);\n            } else {\n                queueItem = new mixitup.QueueItem();\n\n                queueItem.args          = arguments;\n                queueItem.instruction   = instruction;\n\n                return self.queueMix(queueItem);\n            }\n        },\n\n        /**\n         * Performs simultaneous `filter`, `sort`, `insert`, `remove` and `changeLayout`\n         * operations as requested.\n         *\n         * @example\n         *\n         * .multimix(multimixCommand [, animate] [, callback])\n         *\n         * @example <caption>Example 1: Performing simultaneous filtering and sorting</caption>\n         *\n         * mixer.multimix({\n         *     filter: '.category-b',\n         *     sort: 'published-date:desc'\n         * })\n         *     .then(function(state) {\n         *         console.log(state.activeFilter.selector === '.category-b'); // true\n         *         console.log(state.activeSort.attribute === 'published-date'); // true\n         *     });\n         *\n         * @example <caption>Example 2: Performing simultaneous sorting, insertion, and removal</caption>\n         *\n         * console.log(mixer.getState().totalShow); // 6\n         *\n         * // NB: When inserting via `multimix()`, an object should be provided as the value\n         * // for the `insert` portion of the command, allowing for a collection of elements\n         * // and an insertion index to be specified.\n         *\n         * mixer.multimix({\n         *     sort: 'published-date:desc', // Sort the container, including any new elements\n         *     insert: {\n         *         collection: [newElementReferenceA, newElementReferenceB], // Add 2 new elements at index 5\n         *         index: 5\n         *     },\n         *     remove: existingElementReference // Remove 1 existing element\n         * })\n         *     .then(function(state) {\n         *         console.log(state.activeSort.attribute === 'published-date'); // true\n         *         console.log(state.totalShow === 7); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       2.0.0\n         * @param       {object}    multimixCommand\n         *      An object containing one or more things to do\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        multimix: function() {\n            var self        = this,\n                operation   = null,\n                animate     = false,\n                queueItem   = null,\n                instruction = self.parseMultimixArgs(arguments);\n\n            self.callActions('beforeMultimix', arguments);\n\n            if (!self.isBusy) {\n                operation = self.getOperation(instruction.command);\n\n                if (self.config.controls.enable) {\n                    // Update controls for API calls\n\n                    if (instruction.command.filter && !self.isToggling) {\n                        // As we are not toggling, reset the toggle array\n                        // so new filter overrides existing toggles\n\n                        self.toggleArray.length = 0;\n                        self.buildToggleArray(operation.command);\n                    }\n\n                    if (self.queue.length < 1) {\n                        self.updateControls(operation.command);\n                    }\n                }\n\n                if (instruction.callback) self.userCallback = instruction.callback;\n\n                // Always allow the instruction to override the instance setting\n\n                animate = (instruction.animate ^ self.config.animation.enable) ?\n                    instruction.animate :\n                    self.config.animation.enable;\n\n                self.callFilters('operationMultimix', operation, arguments);\n\n                return self.goMix(animate, operation);\n            } else {\n                queueItem = new mixitup.QueueItem();\n\n                queueItem.args           = arguments;\n                queueItem.instruction    = instruction;\n                queueItem.triggerElement = self.lastClicked;\n                queueItem.isToggling     = self.isToggling;\n\n                return self.queueMix(queueItem);\n            }\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {object}            multimixCommand\n         * @param   {boolean}           [isPreFetch]\n         *      An optional boolean indicating that the operation is being pre-fetched for execution at a later time.\n         * @return  {Operation|null}\n         */\n\n        getOperation: function(multimixCommand) {\n            var self                = this,\n                sortCommand         = multimixCommand.sort,\n                filterCommand       = multimixCommand.filter,\n                changeLayoutCommand = multimixCommand.changeLayout,\n                removeCommand       = multimixCommand.remove,\n                insertCommand       = multimixCommand.insert,\n                operation           = new mixitup.Operation();\n\n            operation = self.callFilters('operationUnmappedGetOperation', operation, arguments);\n\n            operation.id                = h.randomHex();\n            operation.command           = multimixCommand;\n            operation.startState        = self.state;\n            operation.triggerElement    = self.lastClicked;\n\n            if (self.isBusy) {\n                if (self.config.debug.showWarnings) {\n                    console.warn(mixitup.messages.warningGetOperationInstanceBusy());\n                }\n\n                return null;\n            }\n\n            if (insertCommand) {\n                self.insertTargets(insertCommand, operation);\n            }\n\n            if (removeCommand) {\n                operation.toRemove = removeCommand.targets;\n            }\n\n            operation.startSort = operation.newSort = operation.startState.activeSort;\n            operation.startOrder = operation.newOrder = self.targets;\n\n            if (sortCommand) {\n                operation.startSort = operation.startState.activeSort;\n                operation.newSort   = sortCommand;\n\n                operation.willSort = self.willSort(sortCommand, operation.startState.activeSort);\n\n                if (operation.willSort) {\n                    self.sortOperation(operation);\n                }\n            }\n\n            operation.startFilter = operation.startState.activeFilter;\n\n            if (filterCommand) {\n                operation.newFilter = filterCommand;\n            } else {\n                operation.newFilter = h.extend(new mixitup.CommandFilter(), operation.startFilter);\n            }\n\n            if (operation.newFilter.selector === 'all') {\n                operation.newFilter.selector = self.config.selectors.target;\n            } else if (operation.newFilter.selector === 'none') {\n                operation.newFilter.selector = '';\n            }\n\n            self.filterOperation(operation);\n\n            operation.startContainerClassName = operation.startState.activeContainerClassName;\n\n            if (changeLayoutCommand) {\n                operation.newContainerClassName = changeLayoutCommand.containerClassName;\n\n                if (operation.newContainerClassName !== operation.startContainerClassName) {\n                    operation.willChangeLayout = true;\n                }\n            } else {\n                operation.newContainerClassName = operation.startContainerClassName;\n            }\n\n            if (self.config.animation.enable) {\n                // Populate the operation's position data\n\n                self.getStartMixData(operation);\n                self.setInter(operation);\n\n                operation.docState = h.getDocumentState(self.dom.document);\n\n                self.getInterMixData(operation);\n                self.setFinal(operation);\n                self.getFinalMixData(operation);\n\n                self.parseEffects();\n\n                operation.hasEffect = self.hasEffect();\n\n                self.getTweenData(operation);\n            }\n\n            if (operation.willSort) {\n                self.targets = operation.newOrder;\n            }\n\n            operation.newState = self.buildState(operation);\n\n            return self.callFilters('operationMappedGetOperation', operation, arguments);\n        },\n\n        /**\n         * Renders a previously created operation at a specific point in its path, as\n         * determined by a multiplier between 0 and 1.\n         *\n         * @example\n         * .tween(operation, multiplier)\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {mixitup.Operation}     operation\n         *      An operation object created via the `getOperation` method\n         *\n         * @param   {Float}                 multiplier\n         *      Any number between 0 and 1 representing the percentage complete of the operation\n         * @return  {void}\n         */\n\n        tween: function(operation, multiplier) {\n            var target          = null,\n                posData         = null,\n                toHideIndex     = -1,\n                i               = -1;\n\n            multiplier = Math.min(multiplier, 1);\n            multiplier = Math.max(multiplier, 0);\n\n            for (i = 0; target = operation.show[i]; i++) {\n                posData = operation.showPosData[i];\n\n                target.applyTween(posData, multiplier);\n            }\n\n            for (i = 0; target = operation.hide[i]; i++) {\n                if (target.isShown) {\n                    target.hide();\n                }\n\n                if ((toHideIndex = operation.toHide.indexOf(target)) > -1) {\n                    posData = operation.toHidePosData[toHideIndex];\n\n                    if (!target.isShown) {\n                        target.show();\n                    }\n\n                    target.applyTween(posData, multiplier);\n                }\n            }\n        },\n\n        /**\n         * Inserts one or more new target elements into the container at a specified\n         * index.\n         *\n         * To be indexed as targets, new elements must match the `selectors.target`\n         * selector (`'.mix'` by default).\n         *\n         * @example\n         *\n         * .insert(newElements [, index] [, animate], [, callback])\n         *\n         * @example <caption>Example 1: Inserting a single element via reference</caption>\n         *\n         * console.log(mixer.getState().totalShow); // 0\n         *\n         * // Create a new element\n         *\n         * var newElement = document.createElement('div');\n         * newElement.classList.add('mix');\n         *\n         * mixer.insert(newElement)\n         *     .then(function(state) {\n         *         console.log(state.totalShow === 1); // true\n         *     });\n         *\n         * @example <caption>Example 2: Inserting a single element via HTML string</caption>\n         *\n         * console.log(mixer.getState().totalShow); // 1\n         *\n         * // Create a new element via reference\n         *\n         * var newElementHtml = '&lt;div class=\"mix\"&gt;&lt;/div&gt;';\n         *\n         * // Create and insert the new element at index 1\n         *\n         * mixer.insert(newElementHtml, 1)\n         *     .then(function(state) {\n         *         console.log(state.totalShow === 2); // true\n         *         console.log(state.show[1].outerHTML === newElementHtml); // true\n         *     });\n         *\n         * @example <caption>Example 3: Inserting multiple elements via reference</caption>\n         *\n         * console.log(mixer.getState().totalShow); // 2\n         *\n         * // Create an array of new elements to insert.\n         *\n         * var newElement1 = document.createElement('div');\n         * var newElement2 = document.createElement('div');\n         *\n         * newElement1.classList.add('mix');\n         * newElement2.classList.add('mix');\n         *\n         * var newElementsCollection = [newElement1, newElement2];\n         *\n         * // Insert the new elements starting at index 1\n         *\n         * mixer.insert(newElementsCollection, 1)\n         *     .then(function(state) {\n         *         console.log(state.totalShow === 4); // true\n         *         console.log(state.show[1] === newElement1); // true\n         *         console.log(state.show[2] === newElement2); // true\n         *     });\n         *\n         * @example <caption>Example 4: Inserting a jQuery collection object containing one or more elements</caption>\n         *\n         * console.log(mixer.getState().totalShow); // 4\n         *\n         * var $newElement = $('&lt;div class=\"mix\"&gt;&lt;/div&gt;');\n         *\n         * // Insert the new elements starting at index 3\n         *\n         * mixer.insert(newElementsCollection, 3)\n         *     .then(function(state) {\n         *         console.log(state.totalShow === 5); // true\n         *         console.log(state.show[3] === $newElement[0]); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       2.0.0\n         * @param       {(HTMLElement|Array.<HTMLElement>|string)}    newElements\n         *      A reference to a single element to insert, an array-like collection of elements, or an HTML string representing a single element.\n         * @param       {number}    index=0\n         *      The index at which to insert the new element(s). `0` by default.\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        insert: function() {\n            var self = this,\n                args = self.parseInsertArgs(arguments);\n\n            return self.multimix({\n                insert: args.command\n            }, args.animate, args.callback);\n        },\n\n        /**\n         * Inserts one or more new elements before a provided reference element.\n         *\n         * @example\n         *\n         * .insertBefore(newElements, referenceElement [, animate] [, callback])\n         *\n         * @example <caption>Example: Inserting a new element before a reference element</caption>\n         *\n         * // An existing reference element is chosen at index 2\n         *\n         * var referenceElement = mixer.getState().show[2];\n         *\n         * // Create a new element\n         *\n         * var newElement = document.createElement('div');\n         * newElement.classList.add('mix');\n         *\n         * mixer.insertBefore(newElement, referenceElement)\n         *     .then(function(state) {\n         *         // The new element is inserted into the container at index 2, before the reference element\n         *\n         *         console.log(state.show[2] === newElement); // true\n         *\n         *         // The reference element is now at index 3\n         *\n         *         console.log(state.show[3] === referenceElement); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {(HTMLElement|Array.<HTMLElement>|string)}    newElements\n         *      A reference to a single element to insert, an array-like collection of elements, or an HTML string representing a single element.\n         * @param       {HTMLElement}    referenceElement\n         *      A reference to an existing element in the container to insert new elements before.\n         *@param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        insertBefore: function() {\n            var self = this,\n                args = self.parseInsertArgs(arguments);\n\n            return self.insert(args.command.collection, 'before', args.command.sibling, args.animate, args.callback);\n        },\n\n        /**\n         * Inserts one or more new elements after a provided reference element.\n         *\n         * @example\n         *\n         * .insertAfter(newElements, referenceElement [, animate] [, callback])\n         *\n         * @example <caption>Example: Inserting a new element after a reference element</caption>\n         *\n         * // An existing reference element is chosen at index 2\n         *\n         * var referenceElement = mixer.getState().show[2];\n         *\n         * // Create a new element\n         *\n         * var newElement = document.createElement('div');\n         * newElement.classList.add('mix');\n         *\n         * mixer.insertAfter(newElement, referenceElement)\n         *     .then(function(state) {\n         *         // The new element is inserted into the container at index 3, after the reference element\n         *\n         *         console.log(state.show[3] === newElement); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {(HTMLElement|Array.<HTMLElement>|string)}    newElements\n         *      A reference to a single element to insert, an array-like collection of elements, or an HTML string representing a single element.\n         * @param       {HTMLElement}    referenceElement\n         *      A reference to an existing element in the container to insert new elements after.\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        insertAfter: function() {\n            var self = this,\n                args = self.parseInsertArgs(arguments);\n\n            return self.insert(args.command.collection, 'after', args.command.sibling, args.animate, args.callback);\n        },\n\n        /**\n         * Inserts one or more new elements into the container before all existing targets.\n         *\n         * @example\n         *\n         * .prepend(newElements [,animate] [,callback])\n         *\n         * @example <caption>Example: Prepending a new element</caption>\n         *\n         * // Create a new element\n         *\n         * var newElement = document.createElement('div');\n         * newElement.classList.add('mix');\n         *\n         * // Insert the element into the container\n         *\n         * mixer.prepend(newElement)\n         *     .then(function(state) {\n         *         console.log(state.show[0] === newElement); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {(HTMLElement|Array.<HTMLElement>|string)}    newElements\n         *      A reference to a single element to insert, an array-like collection of elements, or an HTML string representing a single element.\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        prepend: function() {\n            var self = this,\n                args = self.parseInsertArgs(arguments);\n\n            return self.insert(0, args.command.collection, args.animate, args.callback);\n        },\n\n        /**\n         * Inserts one or more new elements into the container after all existing targets.\n         *\n         * @example\n         *\n         * .append(newElements [,animate] [,callback])\n         *\n         * @example <caption>Example: Appending a new element</caption>\n         *\n         * // Create a new element\n         *\n         * var newElement = document.createElement('div');\n         * newElement.classList.add('mix');\n         *\n         * // Insert the element into the container\n         *\n         * mixer.append(newElement)\n         *     .then(function(state) {\n         *         console.log(state.show[state.show.length - 1] === newElement); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {(HTMLElement|Array.<HTMLElement>|string)}    newElements\n         *      A reference to a single element to insert, an array-like collection of elements, or an HTML string representing a single element.\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        append: function() {\n            var self = this,\n                args = self.parseInsertArgs(arguments);\n\n            return self.insert(self.state.totalTargets, args.command.collection, args.animate, args.callback);\n        },\n\n        /**\n         * Removes one or more existing target elements from the container.\n         *\n         * @example\n         *\n         * .remove(elements [, animate] [, callback])\n         *\n         * @example <caption>Example 1: Removing an element by reference</caption>\n         *\n         * var elementToRemove = containerEl.firstElementChild;\n         *\n         * mixer.remove(elementToRemove)\n         *      .then(function(state) {\n         *          console.log(state.targets.indexOf(elementToRemove) === -1); // true\n         *      });\n         *\n         * @example <caption>Example 2: Removing a collection of elements by reference</caption>\n         *\n         * var elementsToRemove = containerEl.querySelectorAll('.category-a');\n         *\n         * console.log(elementsToRemove.length) // 3\n         *\n         * mixer.remove(elementsToRemove)\n         *      .then(function() {\n         *          console.log(containerEl.querySelectorAll('.category-a').length); // 0\n         *      });\n         *\n         * @example <caption>Example 3: Removing one or more elements by selector</caption>\n         *\n         * mixer.remove('.category-a')\n         *      .then(function() {\n         *          console.log(containerEl.querySelectorAll('.category-a').length); // 0\n         *      });\n         *\n         * @example <caption>Example 4: Removing an element by index</caption>\n         *\n         * console.log(mixer.getState.totalShow); // 4\n         *\n         * // Remove the element at index 3\n         *\n         * mixer.remove(3)\n         *      .then(function(state) {\n         *          console.log(state.totalShow); // 3\n         *          console.log(state.show[3]); // undefined\n         *      });\n         *\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {(HTMLElement|Array.<HTMLElement>|string|number)}    elements\n         *      A reference to a single element to remove, an array-like collection of elements, a selector string, or the index of an element to remove.\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        remove: function() {\n            var self = this,\n                args = self.parseRemoveArgs(arguments);\n\n            return self.multimix({\n                remove: args.command\n            }, args.animate, args.callback);\n        },\n\n        /**\n         * Retrieves the the value of any property or sub-object within the current\n         * mixitup configuration, or the whole configuration object.\n         *\n         * @example\n         *\n         * .getConfig([stringKey])\n         *\n         * @example <caption>Example 1: retrieve the entire configuration object</caption>\n         *\n         * var config = mixer.getConfig(); // Config { ... }\n         *\n         * @example <caption>Example 2: retrieve a named sub-object of configuration object</caption>\n         *\n         * var animation = mixer.getConfig('animation'); // ConfigAnimation { ... }\n         *\n         * @example <caption>Example 3: retrieve a value of configuration object via a dot-notation string key</caption>\n         *\n         * var effects = mixer.getConfig('animation.effects'); // 'fade scale'\n         *\n         * @public\n         * @instance\n         * @since       2.0.0\n         * @param       {string}    [stringKey]    A \"dot-notation\" string key\n         * @return      {*}\n         */\n\n        getConfig: function(stringKey) {\n            var self    = this,\n                value   = null;\n\n            if (!stringKey) {\n                value = self.config;\n            } else {\n                value = h.getProperty(self.config, stringKey);\n            }\n\n            return self.callFilters('valueGetConfig', value, arguments);\n        },\n\n        /**\n         * Updates the configuration of the mixer, after it has been instantiated.\n         *\n         * See the Configuration Object documentation for a full list of avilable\n         * configuration options.\n         *\n         * @example\n         *\n         * .configure(config)\n         *\n         * @example <caption>Example 1: Updating animation options</caption>\n         *\n         * mixer.configure({\n         *     animation: {\n         *         effects: 'fade translateX(-100%)',\n         *         duration: 300\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Removing a callback after it has been set</caption>\n         *\n         * var mixer;\n         *\n         * function handleMixEndOnce() {\n         *     // Do something ..\n         *\n         *     // Then nullify the callback\n         *\n         *     mixer.configure({\n         *         callbacks: {\n         *             onMixEnd: null\n         *         }\n         *     });\n         * };\n         *\n         * // Instantiate a mixer with a callback defined\n         *\n         * mixer = mixitup(containerEl, {\n         *     callbacks: {\n         *         onMixEnd: handleMixEndOnce\n         *     }\n         * });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {object}    config\n         *      An object containing one of more configuration options.\n         * @return      {void}\n         */\n\n        configure: function(config) {\n            var self = this;\n\n            self.callActions('beforeConfigure', arguments);\n\n            h.extend(self.config, config, true, true);\n\n            self.callActions('afterConfigure', arguments);\n        },\n\n        /**\n         * Returns an object containing information about the current state of the\n         * mixer. See the State Object documentation for more information.\n         *\n         * NB: State objects are immutable and should therefore be regenerated\n         * after any operation.\n         *\n         * @example\n         *\n         * .getState();\n         *\n         * @example <caption>Example: Retrieving a state object</caption>\n         *\n         * var state = mixer.getState();\n         *\n         * console.log(state.totalShow + 'targets are currently shown');\n         *\n         * @public\n         * @instance\n         * @since       2.0.0\n         * @return      {mixitup.State} An object reflecting the current state of the mixer.\n         */\n\n        getState: function() {\n            var self    = this,\n                state   = null;\n\n            state = new mixitup.State();\n\n            h.extend(state, self.state);\n\n            h.freeze(state);\n\n            return self.callFilters('stateGetState', state, arguments);\n        },\n\n        /**\n         * Forces the re-indexing all targets within the container.\n         *\n         * This should only be used if some other piece of code in your application\n         * has manipulated the contents of your container, which should be avoided.\n         *\n         * If you need to add or remove target elements from the container, use\n         * the built-in `.insert()` or `.remove()` methods, and MixItUp will keep\n         * itself up to date.\n         *\n         * @example\n         *\n         * .forceRefresh()\n         *\n         * @example <caption>Example: Force refreshing the mixer after external DOM manipulation</caption>\n         *\n         * console.log(mixer.getState().totalShow); // 3\n         *\n         * // An element is removed from the container via some external DOM manipulation code:\n         *\n         * containerEl.removeChild(containerEl.firstElementChild);\n         *\n         * // The mixer does not know that the number of targets has changed:\n         *\n         * console.log(mixer.getState().totalShow); // 3\n         *\n         * mixer.forceRefresh();\n         *\n         * // After forceRefresh, the mixer is in sync again:\n         *\n         * console.log(mixer.getState().totalShow); // 2\n         *\n         * @public\n         * @instance\n         * @since 2.1.2\n         * @return {void}\n         */\n\n        forceRefresh: function() {\n            var self = this;\n\n            self.indexTargets();\n        },\n\n        /**\n         * Forces the re-rendering of all targets when using the Dataset API.\n         *\n         * By default, targets are only re-rendered when `data.dirtyCheck` is\n         * enabled, and an item's data has changed when `dataset()` is called.\n         *\n         * The `forceRender()` method allows for the re-rendering of all targets\n         * in response to some arbitrary event, such as the changing of the target\n         * render function.\n         *\n         * Targets are rendered against their existing data.\n         *\n         * @example\n         *\n         * .forceRender()\n         *\n         * @example <caption>Example: Force render targets after changing the target render function</caption>\n         *\n         * console.log(container.innerHTML); // ... &lt;span class=\"mix\"&gt;Foo&lt;/span&gt; ...\n         *\n         * mixer.configure({\n         *     render: {\n         *         target: (item) => `&lt;a href=\"/${item.slug}/\" class=\"mix\"&gt;${item.title}&lt;/a&gt;`\n         *     }\n         * });\n         *\n         * mixer.forceRender();\n         *\n         * console.log(container.innerHTML); // ... &lt;a href=\"/foo/\" class=\"mix\"&gt;Foo&lt;/a&gt; ...\n         *\n         * @public\n         * @instance\n         * @since 3.2.1\n         * @return {void}\n         */\n\n        forceRender: function() {\n            var self    = this,\n                target  = null,\n                el      = null,\n                id      = '';\n\n            for (id in self.cache) {\n                target = self.cache[id];\n\n                el = target.render(target.data);\n\n                if (el !== target.dom.el) {\n                    // Update target element reference\n\n                    if (target.isInDom) {\n                        target.unbindEvents();\n\n                        self.dom.parent.replaceChild(el, target.dom.el);\n                    }\n\n                    if (!target.isShown) {\n                        el.style.display = 'none';\n                    }\n\n                    target.dom.el = el;\n\n                    if (target.isInDom) {\n                        target.bindEvents();\n                    }\n                }\n            }\n\n            self.state = self.buildState(self.lastOperation);\n        },\n\n        /**\n         * Removes mixitup functionality from the container, unbinds all control\n         * event handlers, and deletes the mixer instance from MixItUp's internal\n         * cache.\n         *\n         * This should be performed whenever a mixer's container is removed from\n         * the DOM, such as during a page change in a single page application,\n         * or React's `componentWillUnmount()`.\n         *\n         * @example\n         *\n         * .destroy([cleanUp])\n         *\n         * @example <caption>Example: Destroying the mixer before removing its container element</caption>\n         *\n         * mixer.destroy();\n         *\n         * containerEl.parentElement.removeChild(containerEl);\n         *\n         * @public\n         * @instance\n         * @since   2.0.0\n         * @param   {boolean}   [cleanUp=false]\n         *     An optional boolean dictating whether or not to clean up any inline `display: none;` styling applied to hidden targets.\n         * @return  {void}\n         */\n\n        destroy: function(cleanUp) {\n            var self    = this,\n                control = null,\n                target  = null,\n                i       = 0;\n\n            self.callActions('beforeDestroy', arguments);\n\n            for (i = 0; control = self.controls[i]; i++) {\n                control.removeBinding(self);\n            }\n\n            for (i = 0; target = self.targets[i]; i++) {\n                if (cleanUp) {\n                    target.show();\n                }\n\n                target.unbindEvents();\n            }\n\n            if (self.dom.container.id.match(/^MixItUp/)) {\n                self.dom.container.removeAttribute('id');\n            }\n\n            delete mixitup.instances[self.id];\n\n            self.callActions('afterDestroy', arguments);\n        }\n    });\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.IMoveData = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.posIn          = null;\n        this.posOut         = null;\n        this.operation      = null;\n        this.callback       = null;\n        this.statusChange   = '';\n        this.duration       = -1;\n        this.staggerIndex   = -1;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.IMoveData);\n\n    mixitup.IMoveData.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.IMoveData.prototype.constructor = mixitup.IMoveData;\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.TargetDom = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.el = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.TargetDom);\n\n    mixitup.TargetDom.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.TargetDom.prototype.constructor = mixitup.TargetDom;\n\n    /**\n     * @constructor\n     * @namespace\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.Target = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.id         = '';\n        this.sortString = '';\n        this.mixer      = null;\n        this.callback   = null;\n        this.isShown    = false;\n        this.isBound    = false;\n        this.isExcluded = false;\n        this.isInDom    = false;\n        this.handler    = null;\n        this.operation  = null;\n        this.data       = null;\n        this.dom        = new mixitup.TargetDom();\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Target);\n\n    mixitup.Target.prototype = Object.create(mixitup.Base.prototype);\n\n    h.extend(mixitup.Target.prototype, {\n        constructor: mixitup.Target,\n\n        /**\n         * Initialises a newly instantiated Target.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {(Element|null)}    el\n         * @param   {object}            mixer\n         * @param   {object}            [data]\n         * @return  {void}\n         */\n\n        init: function(el, mixer, data) {\n            var self = this,\n                id   = '';\n\n            self.callActions('beforeInit', arguments);\n\n            self.mixer = mixer;\n\n            if (!el) {\n                // If no element is provided, render it\n\n                el = self.render(data);\n            }\n\n            self.cacheDom(el);\n\n            self.bindEvents();\n\n            if (self.dom.el.style.display !== 'none') {\n                self.isShown = true;\n            }\n\n            if (data && mixer.config.data.uidKey) {\n                if (typeof (id = data[mixer.config.data.uidKey]) === 'undefined' || id.toString().length < 1) {\n                    throw new TypeError(mixitup.messages.errorDatasetInvalidUidKey({\n                        uidKey: mixer.config.data.uidKey\n                    }));\n                }\n\n                self.id     = id;\n                self.data   = data;\n\n                mixer.cache[id] = self;\n            }\n\n            self.callActions('afterInit', arguments);\n        },\n\n        /**\n         * Renders the target element using a user-defined renderer function.\n         *\n         * @private\n         * @instance\n         * @since   3.1.4\n         * @param   {object} data\n         * @return  {void}\n         */\n\n        render: function(data) {\n            var self    = this,\n                render  = null,\n                el      = null,\n                temp    = null,\n                output  = '';\n\n            self.callActions('beforeRender', arguments);\n\n            render = self.callFilters('renderRender', self.mixer.config.render.target, arguments);\n\n            if (typeof render !== 'function') {\n                throw new TypeError(mixitup.messages.errorDatasetRendererNotSet());\n            }\n\n            output = render(data);\n\n            if (output && typeof output === 'object' && h.isElement(output)) {\n                el = output;\n            } else if (typeof output === 'string') {\n                temp = document.createElement('div');\n                temp.innerHTML = output;\n\n                el = temp.firstElementChild;\n            }\n\n            return self.callFilters('elRender', el, arguments);\n        },\n\n        /**\n         * Caches references of DOM elements neccessary for the target's functionality.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Element} el\n         * @return  {void}\n         */\n\n        cacheDom: function(el) {\n            var self = this;\n\n            self.callActions('beforeCacheDom', arguments);\n\n            self.dom.el = el;\n\n            self.callActions('afterCacheDom', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {string}    attributeName\n         * @return  {void}\n         */\n\n        getSortString: function(attributeName) {\n            var self    = this,\n                value   = self.dom.el.getAttribute('data-' + attributeName) || '';\n\n            self.callActions('beforeGetSortString', arguments);\n\n            value = isNaN(value * 1) ?\n                value.toLowerCase() :\n                value * 1;\n\n            self.sortString = value;\n\n            self.callActions('afterGetSortString', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @return  {void}\n         */\n\n        show: function() {\n            var self = this;\n\n            self.callActions('beforeShow', arguments);\n\n            if (!self.isShown) {\n                self.dom.el.style.display = '';\n\n                self.isShown = true;\n            }\n\n            self.callActions('afterShow', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @return  {void}\n         */\n\n        hide: function() {\n            var self = this;\n\n            self.callActions('beforeHide', arguments);\n\n            if (self.isShown) {\n                self.dom.el.style.display = 'none';\n\n                self.isShown = false;\n            }\n\n            self.callActions('afterHide', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {mixitup.IMoveData} moveData\n         * @return  {void}\n         */\n\n        move: function(moveData) {\n            var self = this;\n\n            self.callActions('beforeMove', arguments);\n\n            if (!self.isExcluded) {\n                self.mixer.targetsMoved++;\n            }\n\n            self.applyStylesIn(moveData);\n\n            requestAnimationFrame(function() {\n                self.applyStylesOut(moveData);\n            });\n\n            self.callActions('afterMove', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {object}    posData\n         * @param   {number}    multiplier\n         * @return  {void}\n         */\n\n        applyTween: function(posData, multiplier) {\n            var self                    = this,\n                propertyName            = '',\n                tweenData               = null,\n                posIn                   = posData.posIn,\n                currentTransformValues  = [],\n                currentValues           = new mixitup.StyleData(),\n                i                       = -1;\n\n            self.callActions('beforeApplyTween', arguments);\n\n            currentValues.x     = posIn.x;\n            currentValues.y     = posIn.y;\n\n            if (multiplier === 0) {\n                self.hide();\n            } else if (!self.isShown) {\n                self.show();\n            }\n\n            for (i = 0; propertyName = mixitup.features.TWEENABLE[i]; i++) {\n                tweenData = posData.tweenData[propertyName];\n\n                if (propertyName === 'x') {\n                    if (!tweenData) continue;\n\n                    currentValues.x = posIn.x + (tweenData * multiplier);\n                } else if (propertyName === 'y') {\n                    if (!tweenData) continue;\n\n                    currentValues.y = posIn.y + (tweenData * multiplier);\n                } else if (tweenData instanceof mixitup.TransformData) {\n                    if (!tweenData.value) continue;\n\n                    currentValues[propertyName].value =\n                        posIn[propertyName].value + (tweenData.value * multiplier);\n\n                    currentValues[propertyName].unit  = tweenData.unit;\n\n                    currentTransformValues.push(\n                        propertyName + '(' + currentValues[propertyName].value + tweenData.unit + ')'\n                    );\n                } else {\n                    if (!tweenData) continue;\n\n                    currentValues[propertyName] = posIn[propertyName] + (tweenData * multiplier);\n\n                    self.dom.el.style[propertyName] = currentValues[propertyName];\n                }\n            }\n\n            if (currentValues.x || currentValues.y) {\n                currentTransformValues.unshift('translate(' + currentValues.x + 'px, ' + currentValues.y + 'px)');\n            }\n\n            if (currentTransformValues.length) {\n                self.dom.el.style[mixitup.features.transformProp] = currentTransformValues.join(' ');\n            }\n\n            self.callActions('afterApplyTween', arguments);\n        },\n\n        /**\n         * Applies the initial styling to a target element before any transition\n         * is applied.\n         *\n         * @private\n         * @instance\n         * @param   {mixitup.IMoveData} moveData\n         * @return  {void}\n         */\n\n        applyStylesIn: function(moveData) {\n            var self            = this,\n                posIn           = moveData.posIn,\n                isFading        = self.mixer.effectsIn.opacity !== 1,\n                transformValues = [];\n\n            self.callActions('beforeApplyStylesIn', arguments);\n\n            transformValues.push('translate(' + posIn.x + 'px, ' + posIn.y + 'px)');\n\n            if (self.mixer.config.animation.animateResizeTargets) {\n                if (moveData.statusChange !== 'show') {\n                    // Don't apply posIn width or height or showing, as will be 0\n\n                    self.dom.el.style.width  = posIn.width + 'px';\n                    self.dom.el.style.height = posIn.height + 'px';\n                }\n\n                self.dom.el.style.marginRight  = posIn.marginRight + 'px';\n                self.dom.el.style.marginBottom = posIn.marginBottom + 'px';\n            }\n\n            isFading && (self.dom.el.style.opacity = posIn.opacity);\n\n            if (moveData.statusChange === 'show') {\n                transformValues = transformValues.concat(self.mixer.transformIn);\n            }\n\n            self.dom.el.style[mixitup.features.transformProp] = transformValues.join(' ');\n\n            self.callActions('afterApplyStylesIn', arguments);\n        },\n\n        /**\n         * Applies a transition followed by the final styles for the element to\n         * transition towards.\n         *\n         * @private\n         * @instance\n         * @param   {mixitup.IMoveData} moveData\n         * @return  {void}\n         */\n\n        applyStylesOut: function(moveData) {\n            var self            = this,\n                transitionRules = [],\n                transformValues = [],\n                isResizing      = self.mixer.config.animation.animateResizeTargets,\n                isFading        = typeof self.mixer.effectsIn.opacity !== 'undefined';\n\n            self.callActions('beforeApplyStylesOut', arguments);\n\n            // Build the transition rules\n\n            transitionRules.push(self.writeTransitionRule(\n                mixitup.features.transformRule,\n                moveData.staggerIndex\n            ));\n\n            if (moveData.statusChange !== 'none') {\n                transitionRules.push(self.writeTransitionRule(\n                    'opacity',\n                    moveData.staggerIndex,\n                    moveData.duration\n                ));\n            }\n\n            if (isResizing) {\n                transitionRules.push(self.writeTransitionRule(\n                    'width',\n                    moveData.staggerIndex,\n                    moveData.duration\n                ));\n\n                transitionRules.push(self.writeTransitionRule(\n                    'height',\n                    moveData.staggerIndex,\n                    moveData.duration\n                ));\n\n                transitionRules.push(self.writeTransitionRule(\n                    'margin',\n                    moveData.staggerIndex,\n                    moveData.duration\n                ));\n            }\n\n            // If no callback was provided, the element will\n            // not transition in any way so tag it as \"immovable\"\n\n            if (!moveData.callback) {\n                self.mixer.targetsImmovable++;\n\n                if (self.mixer.targetsMoved === self.mixer.targetsImmovable) {\n                    // If the total targets moved is equal to the\n                    // number of immovable targets, the operation\n                    // should be considered finished\n\n                    self.mixer.cleanUp(moveData.operation);\n                }\n\n                return;\n            }\n\n            // If the target will transition in some fasion,\n            // assign a callback function\n\n            self.operation = moveData.operation;\n            self.callback = moveData.callback;\n\n            // As long as the target is not excluded, increment\n            // the total number of targets bound\n\n            !self.isExcluded && self.mixer.targetsBound++;\n\n            // Tag the target as bound to differentiate from transitionEnd\n            // events that may come from stylesheet driven effects\n\n            self.isBound = true;\n\n            // Apply the transition\n\n            self.applyTransition(transitionRules);\n\n            // Apply width, height and margin negation\n\n            if (isResizing && moveData.posOut.width > 0 && moveData.posOut.height > 0) {\n                self.dom.el.style.width        = moveData.posOut.width + 'px';\n                self.dom.el.style.height       = moveData.posOut.height + 'px';\n                self.dom.el.style.marginRight  = moveData.posOut.marginRight + 'px';\n                self.dom.el.style.marginBottom = moveData.posOut.marginBottom + 'px';\n            }\n\n            if (!self.mixer.config.animation.nudge && moveData.statusChange === 'hide') {\n                // If we're not nudging, the translation should be\n                // applied before any other transforms to prevent\n                // lateral movement\n\n                transformValues.push('translate(' + moveData.posOut.x + 'px, ' + moveData.posOut.y + 'px)');\n            }\n\n            // Apply fade\n\n            switch (moveData.statusChange) {\n                case 'hide':\n                    isFading && (self.dom.el.style.opacity = self.mixer.effectsOut.opacity);\n\n                    transformValues = transformValues.concat(self.mixer.transformOut);\n\n                    break;\n                case 'show':\n                    isFading && (self.dom.el.style.opacity = 1);\n            }\n\n            if (\n                self.mixer.config.animation.nudge ||\n                (!self.mixer.config.animation.nudge && moveData.statusChange !== 'hide')\n            ) {\n                // Opposite of above - apply translate after\n                // other transform\n\n                transformValues.push('translate(' + moveData.posOut.x + 'px, ' + moveData.posOut.y + 'px)');\n            }\n\n            // Apply transforms\n\n            self.dom.el.style[mixitup.features.transformProp] = transformValues.join(' ');\n\n            self.callActions('afterApplyStylesOut', arguments);\n        },\n\n        /**\n         * Combines the name of a CSS property with the appropriate duration and delay\n         * values to created a valid transition rule.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {string}    property\n         * @param   {number}    staggerIndex\n         * @param   {number}    duration\n         * @return  {string}\n         */\n\n        writeTransitionRule: function(property, staggerIndex, duration) {\n            var self  = this,\n                delay = self.getDelay(staggerIndex),\n                rule  = '';\n\n            rule = property + ' ' +\n                (duration > 0 ? duration : self.mixer.config.animation.duration) + 'ms ' +\n                delay + 'ms ' +\n                (property === 'opacity' ? 'linear' : self.mixer.config.animation.easing);\n\n            return self.callFilters('ruleWriteTransitionRule', rule, arguments);\n        },\n\n        /**\n         * Calculates the transition delay for each target element based on its index, if\n         * staggering is applied. If defined, A custom `animation.staggerSeqeuence`\n         * function can be used to manipulate the order of indices to produce custom\n         * stagger effects (e.g. for use in a grid with irregular row lengths).\n         *\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {number}    index\n         * @return  {number}\n         */\n\n        getDelay: function(index) {\n            var self    = this,\n                delay   = -1;\n\n            if (typeof self.mixer.config.animation.staggerSequence === 'function') {\n                index = self.mixer.config.animation.staggerSequence.call(self, index, self.state);\n            }\n\n            delay = !!self.mixer.staggerDuration ? index * self.mixer.staggerDuration : 0;\n\n            return self.callFilters('delayGetDelay', delay, arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {string[]}  rules\n         * @return  {void}\n         */\n\n        applyTransition: function(rules) {\n            var self                = this,\n                transitionString    = rules.join(', ');\n\n            self.callActions('beforeApplyTransition', arguments);\n\n            self.dom.el.style[mixitup.features.transitionProp] = transitionString;\n\n            self.callActions('afterApplyTransition', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Event} e\n         * @return  {void}\n         */\n\n        handleTransitionEnd: function(e) {\n            var self        = this,\n                propName    = e.propertyName,\n                canResize   = self.mixer.config.animation.animateResizeTargets;\n\n            self.callActions('beforeHandleTransitionEnd', arguments);\n\n            if (\n                self.isBound &&\n                e.target.matches(self.mixer.config.selectors.target) &&\n                (\n                    propName.indexOf('transform') > -1 ||\n                    propName.indexOf('opacity') > -1 ||\n                    canResize && propName.indexOf('height') > -1 ||\n                    canResize && propName.indexOf('width') > -1 ||\n                    canResize && propName.indexOf('margin') > -1\n                )\n            ) {\n                self.callback.call(self, self.operation);\n\n                self.isBound = false;\n                self.callback = null;\n                self.operation = null;\n            }\n\n            self.callActions('afterHandleTransitionEnd', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Event}     e\n         * @return  {void}\n         */\n\n        eventBus: function(e) {\n            var self = this;\n\n            self.callActions('beforeEventBus', arguments);\n\n            switch (e.type) {\n                case 'webkitTransitionEnd':\n                case 'transitionend':\n                    self.handleTransitionEnd(e);\n            }\n\n            self.callActions('afterEventBus', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @return  {void}\n         */\n\n        unbindEvents: function() {\n            var self = this;\n\n            self.callActions('beforeUnbindEvents', arguments);\n\n            h.off(self.dom.el, 'webkitTransitionEnd', self.handler);\n            h.off(self.dom.el, 'transitionend', self.handler);\n\n            self.callActions('afterUnbindEvents', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @return  {void}\n         */\n\n        bindEvents: function() {\n            var self                = this,\n                transitionEndEvent  = '';\n\n            self.callActions('beforeBindEvents', arguments);\n\n            transitionEndEvent = mixitup.features.transitionPrefix === 'webkit' ? 'webkitTransitionEnd' : 'transitionend';\n\n            self.handler = function(e) {\n                return self.eventBus(e);\n            };\n\n            h.on(self.dom.el, transitionEndEvent, self.handler);\n\n            self.callActions('afterBindEvents', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {boolean}   [getBox]\n         * @return  {PosData}\n         */\n\n        getPosData: function(getBox) {\n            var self    = this,\n                styles  = {},\n                rect    = null,\n                posData = new mixitup.StyleData();\n\n            self.callActions('beforeGetPosData', arguments);\n\n            posData.x = self.dom.el.offsetLeft;\n            posData.y = self.dom.el.offsetTop;\n\n            if (self.mixer.config.animation.animateResizeTargets || getBox) {\n                rect = self.dom.el.getBoundingClientRect();\n\n                posData.top     = rect.top;\n                posData.right   = rect.right;\n                posData.bottom  = rect.bottom;\n                posData.left    = rect.left;\n\n                posData.width  = rect.width;\n                posData.height = rect.height;\n            }\n\n            if (self.mixer.config.animation.animateResizeTargets) {\n                styles = window.getComputedStyle(self.dom.el);\n\n                posData.marginBottom = parseFloat(styles.marginBottom);\n                posData.marginRight  = parseFloat(styles.marginRight);\n            }\n\n            return self.callFilters('posDataGetPosData', posData, arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since       3.0.0\n         * @return      {void}\n         */\n\n        cleanUp: function() {\n            var self = this;\n\n            self.callActions('beforeCleanUp', arguments);\n\n            self.dom.el.style[mixitup.features.transformProp]  = '';\n            self.dom.el.style[mixitup.features.transitionProp] = '';\n            self.dom.el.style.opacity                          = '';\n\n            if (self.mixer.config.animation.animateResizeTargets) {\n                self.dom.el.style.width        = '';\n                self.dom.el.style.height       = '';\n                self.dom.el.style.marginRight  = '';\n                self.dom.el.style.marginBottom = '';\n            }\n\n            self.callActions('afterCleanUp', arguments);\n        }\n    });\n\n    /**\n     * A jQuery-collection-like wrapper around one or more `mixitup.Mixer` instances\n     * allowing simultaneous control of said instances similar to the MixItUp 2 API.\n     *\n     * @example\n     * new mixitup.Collection(instances)\n     *\n     * @constructor\n     * @namespace\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     * @param       {mixitup.Mixer[]}   instances\n     */\n\n    mixitup.Collection = function(instances) {\n        var instance    = null,\n            i           = -1;\n\n        this.callActions('beforeConstruct');\n\n        for (i = 0; instance = instances[i]; i++) {\n            this[i] = instance;\n        }\n\n        this.length = instances.length;\n\n        this.callActions('afterConstruct');\n\n        h.freeze(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Collection);\n\n    mixitup.Collection.prototype = Object.create(mixitup.Base.prototype);\n\n    h.extend(mixitup.Collection.prototype,\n    /** @lends mixitup.Collection */\n    {\n        constructor: mixitup.Collection,\n\n        /**\n         * Calls a method on all instances in the collection by passing the method\n         * name as a string followed by any applicable parameters to be curried into\n         * to the method.\n         *\n         * @example\n         * .mixitup(methodName[,arg1][,arg2..]);\n         *\n         * @example\n         * var collection = new Collection([mixer1, mixer2]);\n         *\n         * return collection.mixitup('filter', '.category-a')\n         *     .then(function(states) {\n         *         state.forEach(function(state) {\n         *             console.log(state.activeFilter.selector); // .category-a\n         *         });\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {string}  methodName\n         * @return      {Promise<Array<mixitup.State>>}\n         */\n\n        mixitup: function(methodName) {\n            var self        = this,\n                instance    = null,\n                args        = Array.prototype.slice.call(arguments),\n                tasks       = [],\n                i           = -1;\n\n            this.callActions('beforeMixitup');\n\n            args.shift();\n\n            for (i = 0; instance = self[i]; i++) {\n                tasks.push(instance[methodName].apply(instance, args));\n            }\n\n            return self.callFilters('promiseMixitup', h.all(tasks, mixitup.libraries), arguments);\n        }\n    });\n\n    /**\n     * `mixitup.Operation` objects contain all data neccessary to describe the full\n     * lifecycle of any MixItUp operation. They can be used to compute and store an\n     * operation for use at a later time (e.g. programmatic tweening).\n     *\n     * @constructor\n     * @namespace\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.Operation = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.id                      = '';\n\n        this.args                    = [];\n        this.command                 = null;\n        this.showPosData             = [];\n        this.toHidePosData           = [];\n\n        this.startState              = null;\n        this.newState                = null;\n        this.docState                = null;\n\n        this.willSort                = false;\n        this.willChangeLayout        = false;\n        this.hasEffect               = false;\n        this.hasFailed               = false;\n\n        this.triggerElement          = null;\n\n        this.show                    = [];\n        this.hide                    = [];\n        this.matching                = [];\n        this.toShow                  = [];\n        this.toHide                  = [];\n        this.toMove                  = [];\n        this.toRemove                = [];\n        this.startOrder              = [];\n        this.newOrder                = [];\n        this.startSort               = null;\n        this.newSort                 = null;\n        this.startFilter             = null;\n        this.newFilter               = null;\n        this.startDataset            = null;\n        this.newDataset              = null;\n        this.viewportDeltaX          = 0;\n        this.viewportDeltaY          = 0;\n        this.startX                  = 0;\n        this.startY                  = 0;\n        this.startHeight             = 0;\n        this.startWidth              = 0;\n        this.newX                    = 0;\n        this.newY                    = 0;\n        this.newHeight               = 0;\n        this.newWidth                = 0;\n        this.startContainerClassName = '';\n        this.startDisplay            = '';\n        this.newContainerClassName   = '';\n        this.newDisplay              = '';\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Operation);\n\n    mixitup.Operation.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.Operation.prototype.constructor = mixitup.Operation;\n\n    /**\n     * `mixitup.State` objects expose various pieces of data detailing the state of\n     * a MixItUp instance. They are provided at the start and end of any operation via\n     * callbacks and events, with the most recent state stored between operations\n     * for retrieval at any time via the API.\n     *\n     * @constructor\n     * @namespace\n     * @memberof    mixitup\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.State = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * The ID of the mixer instance.\n         *\n         * @name        id\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {string}\n         * @default     ''\n         */\n\n        this.id = '';\n\n        /**\n         * The currently active filter command as set by a control click or API call.\n         *\n         * @name        activeFilter\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {mixitup.CommandFilter}\n         * @default     null\n         */\n\n        this.activeFilter = null;\n\n        /**\n         * The currently active sort command as set by a control click or API call.\n         *\n         * @name        activeSort\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {mixitup.CommandSort}\n         * @default     null\n         */\n\n        this.activeSort = null;\n\n        /**\n         * The current layout-specific container class name, if applied.\n         *\n         * @name        activeContainerClassName\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {string}\n         * @default     ''\n         */\n\n        this.activeContainerClassName = '';\n\n        /**\n         * A reference to the container element that the mixer is instantiated on.\n         *\n         * @name        container\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {Element}\n         * @default     null\n         */\n\n        this.container = null;\n\n        /**\n         * An array of all target elements indexed by the mixer.\n         *\n         * @name        targets\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {Array.<Element>}\n         * @default     []\n         */\n\n        this.targets = [];\n\n        /**\n         * An array of all target elements not matching the current filter.\n         *\n         * @name        hide\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {Array.<Element>}\n         * @default     []\n         */\n\n        this.hide = [];\n\n        /**\n         * An array of all target elements matching the current filter and any additional\n         * limits applied such as pagination.\n         *\n         * @name        show\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {Array.<Element>}\n         * @default     []\n         */\n\n        this.show = [];\n\n        /**\n         * An array of all target elements matching the current filter irrespective of\n         * any additional limits applied such as pagination.\n         *\n         * @name        matching\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {Array.<Element>}\n         * @default     []\n         */\n\n        this.matching = [];\n\n        /**\n         * An integer representing the total number of target elements indexed by the\n         * mixer. Equivalent to `state.targets.length`.\n         *\n         * @name        totalTargets\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {number}\n         * @default     -1\n         */\n\n        this.totalTargets = -1;\n\n        /**\n         * An integer representing the total number of target elements matching the\n         * current filter and any additional limits applied such as pagination.\n         * Equivalent to `state.show.length`.\n         *\n         * @name        totalShow\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {number}\n         * @default     -1\n         */\n\n        this.totalShow = -1;\n\n        /**\n         * An integer representing the total number of target elements not matching\n         * the current filter. Equivalent to `state.hide.length`.\n         *\n         * @name        totalHide\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {number}\n         * @default     -1\n         */\n\n        this.totalHide = -1;\n\n        /**\n         * An integer representing the total number of target elements matching the\n         * current filter irrespective of any other limits applied such as pagination.\n         * Equivalent to `state.matching.length`.\n         *\n         * @name        totalMatching\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {number}\n         * @default     -1\n         */\n\n        this.totalMatching = -1;\n\n        /**\n         * A boolean indicating whether the last operation \"failed\", i.e. no targets\n         * could be found matching the filter.\n         *\n         * @name        hasFailed\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {boolean}\n         * @default     false\n         */\n\n        this.hasFailed = false;\n\n        /**\n         * The DOM element that was clicked if the last operation was triggered by the\n         * clicking of a control and not an API call.\n         *\n         * @name        triggerElement\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {Element|null}\n         * @default     null\n         */\n\n        this.triggerElement = null;\n\n        /**\n         * The currently active dataset underlying the rendered targets, if the\n         * dataset API is in use.\n         *\n         * @name        activeDataset\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {Array.<object>}\n         * @default     null\n         */\n\n        this.activeDataset = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.State);\n\n    mixitup.State.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.State.prototype.constructor = mixitup.State;\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.UserInstruction = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.command    = {};\n        this.animate    = false;\n        this.callback   = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.UserInstruction);\n\n    mixitup.UserInstruction.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.UserInstruction.prototype.constructor = mixitup.UserInstruction;\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.Messages = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /* Errors\n        ----------------------------------------------------------------------------- */\n\n        this.ERROR_FACTORY_INVALID_CONTAINER =\n            '[MixItUp] An invalid selector or element reference was passed to the mixitup factory function';\n\n        this.ERROR_FACTORY_CONTAINER_NOT_FOUND =\n            '[MixItUp] The provided selector yielded no container element';\n\n        this.ERROR_CONFIG_INVALID_ANIMATION_EFFECTS =\n            '[MixItUp] Invalid value for `animation.effects`';\n\n        this.ERROR_CONFIG_INVALID_CONTROLS_SCOPE =\n            '[MixItUp] Invalid value for `controls.scope`';\n\n        this.ERROR_CONFIG_INVALID_PROPERTY =\n            '[MixitUp] Invalid configuration object property \"${erroneous}\"${suggestion}';\n\n        this.ERROR_CONFIG_INVALID_PROPERTY_SUGGESTION =\n            '. Did you mean \"${probableMatch}\"?';\n\n        this.ERROR_CONFIG_DATA_UID_KEY_NOT_SET =\n            '[MixItUp] To use the dataset API, a UID key must be specified using `data.uidKey`';\n\n        this.ERROR_DATASET_INVALID_UID_KEY =\n            '[MixItUp] The specified UID key \"${uidKey}\" is not present on one or more dataset items';\n\n        this.ERROR_DATASET_DUPLICATE_UID =\n            '[MixItUp] The UID \"${uid}\" was found on two or more dataset items. UIDs must be unique.';\n\n        this.ERROR_INSERT_INVALID_ARGUMENTS =\n            '[MixItUp] Please provider either an index or a sibling and position to insert, not both';\n\n        this.ERROR_INSERT_PREEXISTING_ELEMENT =\n            '[MixItUp] An element to be inserted already exists in the container';\n\n        this.ERROR_FILTER_INVALID_ARGUMENTS =\n            '[MixItUp] Please provide either a selector or collection `.filter()`, not both';\n\n        this.ERROR_DATASET_NOT_SET =\n            '[MixItUp] To use the dataset API with pre-rendered targets, a starting dataset must be set using `load.dataset`';\n\n        this.ERROR_DATASET_PRERENDERED_MISMATCH =\n            '[MixItUp] `load.dataset` does not match pre-rendered targets';\n\n        this.ERROR_DATASET_RENDERER_NOT_SET =\n            '[MixItUp] To insert an element via the dataset API, a target renderer function must be provided to `render.target`';\n\n        /* Warnings\n        ----------------------------------------------------------------------------- */\n\n        this.WARNING_FACTORY_PREEXISTING_INSTANCE =\n            '[MixItUp] WARNING: This element already has an active MixItUp instance. The provided configuration object will be ignored.' +\n            ' If you wish to perform additional methods on this instance, please create a reference.';\n\n        this.WARNING_INSERT_NO_ELEMENTS =\n            '[MixItUp] WARNING: No valid elements were passed to `.insert()`';\n\n        this.WARNING_REMOVE_NO_ELEMENTS =\n            '[MixItUp] WARNING: No valid elements were passed to `.remove()`';\n\n        this.WARNING_MULTIMIX_INSTANCE_QUEUE_FULL =\n            '[MixItUp] WARNING: An operation was requested but the MixItUp instance was busy. The operation was rejected because the ' +\n            'queue is full or queuing is disabled.';\n\n        this.WARNING_GET_OPERATION_INSTANCE_BUSY =\n            '[MixItUp] WARNING: Operations can be be created while the MixItUp instance is busy.';\n\n        this.WARNING_NO_PROMISE_IMPLEMENTATION =\n            '[MixItUp] WARNING: No Promise implementations could be found. If you wish to use promises with MixItUp please install' +\n            ' an ES6 Promise polyfill.';\n\n        this.WARNING_INCONSISTENT_SORTING_ATTRIBUTES =\n            '[MixItUp] WARNING: The requested sorting data attribute \"${attribute}\" was not present on one or more target elements' +\n            ' which may product unexpected sort output';\n\n        this.callActions('afterConstruct');\n\n        this.compileTemplates();\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Messages);\n\n    mixitup.Messages.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.Messages.prototype.constructor = mixitup.Messages;\n\n    /**\n     * @return {void}\n     */\n\n    mixitup.Messages.prototype.compileTemplates = function() {\n        var errorKey        = '';\n        var errorMessage    = '';\n\n        for (errorKey in this) {\n            if (typeof (errorMessage = this[errorKey]) !== 'string') continue;\n\n            this[h.camelCase(errorKey)] = h.template(errorMessage);\n        }\n    };\n\n    mixitup.messages = new mixitup.Messages();\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     * @param       {mixitup.Mixer} mixer\n     */\n\n    mixitup.Facade = function Mixer(mixer) {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct', arguments);\n\n        this.configure          = mixer.configure.bind(mixer);\n        this.show               = mixer.show.bind(mixer);\n        this.hide               = mixer.hide.bind(mixer);\n        this.filter             = mixer.filter.bind(mixer);\n        this.toggleOn           = mixer.toggleOn.bind(mixer);\n        this.toggleOff          = mixer.toggleOff.bind(mixer);\n        this.sort               = mixer.sort.bind(mixer);\n        this.changeLayout       = mixer.changeLayout.bind(mixer);\n        this.multimix           = mixer.multimix.bind(mixer);\n        this.dataset            = mixer.dataset.bind(mixer);\n        this.tween              = mixer.tween.bind(mixer);\n        this.insert             = mixer.insert.bind(mixer);\n        this.insertBefore       = mixer.insertBefore.bind(mixer);\n        this.insertAfter        = mixer.insertAfter.bind(mixer);\n        this.prepend            = mixer.prepend.bind(mixer);\n        this.append             = mixer.append.bind(mixer);\n        this.remove             = mixer.remove.bind(mixer);\n        this.destroy            = mixer.destroy.bind(mixer);\n        this.forceRefresh       = mixer.forceRefresh.bind(mixer);\n        this.forceRender        = mixer.forceRender.bind(mixer);\n        this.isMixing           = mixer.isMixing.bind(mixer);\n        this.getOperation       = mixer.getOperation.bind(mixer);\n        this.getConfig          = mixer.getConfig.bind(mixer);\n        this.getState           = mixer.getState.bind(mixer);\n\n        this.callActions('afterConstruct', arguments);\n\n        h.freeze(this);\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Facade);\n\n    mixitup.Facade.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.Facade.prototype.constructor = mixitup.Facade;\n\n    if (typeof exports === 'object' && typeof module === 'object') {\n        module.exports = mixitup;\n    } else if (typeof define === 'function' && define.amd) {\n        define(function() {\n            return mixitup;\n        });\n    } else if (typeof window.mixitup === 'undefined' || typeof window.mixitup !== 'function') {\n        window.mixitup = mixitup;\n    }\n    mixitup.BaseStatic.call(mixitup.constructor);\n\n    mixitup.NAME = 'mixitup';\n    mixitup.CORE_VERSION = '3.2.2';\n})(window);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mixitup/dist/mixitup.js\n// module id = 392\n// module chunks = 114276838955818","import React from 'react'\nimport Link from 'gatsby-link'\nimport { siteMetadata } from '../../gatsby-config'\n\nimport './custom-bootstrap.scss'\nimport './main.scss'\nimport 'animate.css/animate.css'\nimport 'font-awesome/css/font-awesome.css'\nimport 'prismjs/themes/prism-okaidia.css'\nimport 'devicon/devicon.min.css'\n\nimport $ from 'jquery'\nimport mixitup from 'mixitup'\n\nclass Template extends React.Component {\n  componentDidMount() {\n    $('#loader').fadeOut()\n\n    let porfolio = document.getElementById('portfolio')\n\n    setTimeout(() => {\n      mixitup(porfolio)\n    }, 1000);\n\n    $(window).on('scroll', function() {\n      if ($(window).scrollTop() > 20) {\n        $('.header-top-area').addClass('menu-bg')\n      } else {\n        $('.header-top-area').removeClass('menu-bg')\n      }\n    })\n\n    let offset = 200\n    let duration = 500\n\n    $(window).scroll(function() {\n      if ($(this).scrollTop() > offset) {\n        $('.back-to-top').fadeIn(400)\n      } else {\n        $('.back-to-top').fadeOut(400)\n      }\n    })\n    $('.back-to-top').click(function(event) {\n      event.preventDefault()\n      $('html, body').animate(\n        {\n          scrollTop: 0,\n        },\n        600\n      )\n      return false\n    })\n\n    $(window).on('scroll', function() {\n      if ($(window).scrollTop() > 200) {\n        $('.fixed-top').addClass('menu-bg')\n      } else {\n        $('.fixed-top').removeClass('menu-bg')\n      }\n    })\n\n    // const WOW = require('wowjs')\n    // this.wow = new WOW.WOW()\n    // this.wow.init()\n  }\n\n  componentDidUpdate() {\n    // this.wow.sync()\n  }\n\n  render() {\n    const { location, children } = this.props\n    return <div>{children()}</div>\n  }\n}\n\nexport default Template\n\n\n\n// WEBPACK FOOTER //\n// ./src/layouts/index.js"],"sourceRoot":""}